{"id":"f91dfbb7eb1b47c3434140b97dd9598f","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/ManualTokem.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\ninterface tokenRecipient {\n  function receiveApproval(\n    address _from,\n    uint256 _value,\n    address _token,\n    bytes calldata _extraData\n  ) external;\n}\n\ncontract TokenERC20 {\n  // Public variables of the token\n  string public name;\n  string public symbol;\n  uint8 public decimals = 18;\n  // 18 decimals is the strongly suggested default, avoid changing it\n  uint256 public totalSupply;\n\n  // This creates an array with all balances\n  mapping(address => uint256) public balanceOf;\n  mapping(address => mapping(address => uint256)) public allowance;\n\n  // This generates a public event on the blockchain that will notify clients\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  // This generates a public event on the blockchain that will notify clients\n  event Approval(\n    address indexed _owner,\n    address indexed _spender,\n    uint256 _value\n  );\n\n  // This notifies clients about the amount burnt\n  event Burn(address indexed from, uint256 value);\n\n  /**\n   * Constructor function\n   *\n   * Initializes contract with initial supply tokens to the creator of the contract\n   */\n  constructor(\n    uint256 initialSupply,\n    string memory tokenName,\n    string memory tokenSymbol\n  ) {\n    totalSupply = initialSupply * 10**uint256(decimals); // Update total supply with the decimal amount\n    balanceOf[msg.sender] = totalSupply; // Give the creator all initial tokens\n    name = tokenName; // Set the name for display purposes\n    symbol = tokenSymbol; // Set the symbol for display purposes\n  }\n\n  /**\n   * Internal transfer, only can be called by this contract\n   */\n  function _transfer(\n    address _from,\n    address _to,\n    uint256 _value\n  ) internal {\n    // Prevent transfer to 0x0 address. Use burn() instead\n    require(_to != address(0x0));\n    // Check if the sender has enough\n    require(balanceOf[_from] >= _value);\n    // Check for overflows\n    require(balanceOf[_to] + _value >= balanceOf[_to]);\n    // Save this for an assertion in the future\n    uint256 previousBalances = balanceOf[_from] + balanceOf[_to];\n    // Subtract from the sender\n    balanceOf[_from] -= _value;\n    // Add the same to the recipient\n    balanceOf[_to] += _value;\n    emit Transfer(_from, _to, _value);\n    // Asserts are used to use static analysis to find bugs in your code. They should never fail\n    assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n  }\n\n  /**\n   * Transfer tokens\n   *\n   * Send `_value` tokens to `_to` from your account\n   *\n   * @param _to The address of the recipient\n   * @param _value the amount to send\n   */\n  function transfer(address _to, uint256 _value) public returns (bool success) {\n    _transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n   * Transfer tokens from other address\n   *\n   * Send `_value` tokens to `_to` on behalf of `_from`\n   *\n   * @param _from The address of the sender\n   * @param _to The address of the recipient\n   * @param _value the amount to send\n   */\n  function transferFrom(\n    address _from,\n    address _to,\n    uint256 _value\n  ) public returns (bool success) {\n    require(_value <= allowance[_from][msg.sender]); // Check allowance\n    allowance[_from][msg.sender] -= _value;\n    _transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * Set allowance for other address\n   *\n   * Allows `_spender` to spend no more than `_value` tokens on your behalf\n   *\n   * @param _spender The address authorized to spend\n   * @param _value the max amount they can spend\n   */\n  function approve(address _spender, uint256 _value)\n    public\n    returns (bool success)\n  {\n    allowance[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * Set allowance for other address and notify\n   *\n   * Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\n   *\n   * @param _spender The address authorized to spend\n   * @param _value the max amount they can spend\n   * @param _extraData some extra information to send to the approved contract\n   */\n  function approveAndCall(\n    address _spender,\n    uint256 _value,\n    bytes memory _extraData\n  ) public returns (bool success) {\n    tokenRecipient spender = tokenRecipient(_spender);\n    if (approve(_spender, _value)) {\n      spender.receiveApproval(msg.sender, _value, address(this), _extraData);\n      return true;\n    }\n  }\n\n  /**\n   * Destroy tokens\n   *\n   * Remove `_value` tokens from the system irreversibly\n   *\n   * @param _value the amount of money to burn\n   */\n  function burn(uint256 _value) public returns (bool success) {\n    require(balanceOf[msg.sender] >= _value); // Check if the sender has enough\n    balanceOf[msg.sender] -= _value; // Subtract from the sender\n    totalSupply -= _value; // Updates totalSupply\n    emit Burn(msg.sender, _value);\n    return true;\n  }\n\n  /**\n   * Destroy tokens from other account\n   *\n   * Remove `_value` tokens from the system irreversibly on behalf of `_from`.\n   *\n   * @param _from the address of the sender\n   * @param _value the amount of money to burn\n   */\n  function burnFrom(address _from, uint256 _value)\n    public\n    returns (bool success)\n  {\n    require(balanceOf[_from] >= _value); // Check if the targeted balance is enough\n    require(_value <= allowance[_from][msg.sender]); // Check allowance\n    balanceOf[_from] -= _value; // Subtract from the targeted balance\n    allowance[_from][msg.sender] -= _value; // Subtract from the sender's allowance\n    totalSupply -= _value; // Update totalSupply\n    emit Burn(_from, _value);\n    return true;\n  }\n}"},"contracts/OurToken.sol":{"content":"// SPDX-Licence-Identifier: MIT\n\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract OurToken is ERC20{\n    // initial supply is 50 <- 50 WEI\n    // initial supply is 50e18\n\n    constructor(uint256 initialSupply) ERC20(\"OurToken\", \"OT\") {\n        _mint(msg.sender, initialSupply);\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/OurToken.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/OurToken.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[136],"IERC20Errors":[41],"IERC721Errors":[89]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"138:139:0","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":41,"linearizedBaseContracts":[41],"name":"IERC20Errors","nameLocation":"288:12:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"307:309:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":11,"name":"ERC20InsufficientBalance","nameLocation":"627:24:0","nodeType":"ErrorDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"sender","nameLocation":"660:6:0","nodeType":"VariableDeclaration","scope":11,"src":"652:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"balance","nameLocation":"676:7:0","nodeType":"VariableDeclaration","scope":11,"src":"668:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"needed","nameLocation":"693:6:0","nodeType":"VariableDeclaration","scope":11,"src":"685:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:0"},"src":"621:80:0"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"707:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":16,"name":"ERC20InvalidSender","nameLocation":"870:18:0","nodeType":"ErrorDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"sender","nameLocation":"897:6:0","nodeType":"VariableDeclaration","scope":16,"src":"889:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:0"},"src":"864:41:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"911:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":21,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:0","nodeType":"ErrorDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:0","nodeType":"VariableDeclaration","scope":21,"src":"1102:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:0"},"src":"1075:45:0"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1126:345:0","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":30,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"spender","nameLocation":"1517:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1509:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:0","nodeType":"VariableDeclaration","scope":30,"src":"1526:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"needed","nameLocation":"1553:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1545:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:0"},"src":"1476:85:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1567:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":35,"name":"ERC20InvalidApprover","nameLocation":"1752:20:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"approver","nameLocation":"1781:8:0","nodeType":"VariableDeclaration","scope":35,"src":"1773:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:0"},"src":"1746:45:0"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1797:195:0","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":40,"name":"ERC20InvalidSpender","nameLocation":"2003:19:0","nodeType":"ErrorDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"spender","nameLocation":"2031:7:0","nodeType":"VariableDeclaration","scope":40,"src":"2023:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:0"},"src":"1997:43:0"}],"scope":137,"src":"278:1764:0","usedErrors":[11,16,21,30,35,40],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2044:141:0","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":89,"linearizedBaseContracts":[89],"name":"IERC721Errors","nameLocation":"2196:13:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2216:219:0","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":47,"name":"ERC721InvalidOwner","nameLocation":"2446:18:0","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"owner","nameLocation":"2473:5:0","nodeType":"VariableDeclaration","scope":47,"src":"2465:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:0"},"src":"2440:40:0"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2486:132:0","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":52,"name":"ERC721NonexistentToken","nameLocation":"2629:22:0","nodeType":"ErrorDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:0","nodeType":"VariableDeclaration","scope":52,"src":"2652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:0"},"src":"2623:46:0"},{"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2675:289:0","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":61,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:0","nodeType":"ErrorDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"sender","nameLocation":"3004:6:0","nodeType":"VariableDeclaration","scope":61,"src":"2996:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:0","nodeType":"VariableDeclaration","scope":61,"src":"3012:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"owner","nameLocation":"3037:5:0","nodeType":"VariableDeclaration","scope":61,"src":"3029:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:0"},"src":"2969:75:0"},{"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"3050:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":66,"name":"ERC721InvalidSender","nameLocation":"3213:19:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"sender","nameLocation":"3241:6:0","nodeType":"VariableDeclaration","scope":66,"src":"3233:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:0"},"src":"3207:42:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"3255:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":71,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:0","nodeType":"ErrorDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3447:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:0"},"src":"3419:46:0"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3471:247:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":78,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"operator","nameLocation":"3764:8:0","nodeType":"VariableDeclaration","scope":78,"src":"3756:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:0","nodeType":"VariableDeclaration","scope":78,"src":"3774:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:0"},"src":"3723:68:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"3797:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":83,"name":"ERC721InvalidApprover","nameLocation":"3982:21:0","nodeType":"ErrorDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"approver","nameLocation":"4012:8:0","nodeType":"VariableDeclaration","scope":83,"src":"4004:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:0"},"src":"3976:46:0"},{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"4028:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":88,"name":"ERC721InvalidOperator","nameLocation":"4236:21:0","nodeType":"ErrorDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"operator","nameLocation":"4266:8:0","nodeType":"VariableDeclaration","scope":88,"src":"4258:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:0"},"src":"4230:46:0"}],"scope":137,"src":"2186:2092:0","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"4280:143:0","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136],"name":"IERC1155Errors","nameLocation":"4434:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"4455:361:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":101,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:0","nodeType":"ErrorDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"sender","nameLocation":"4862:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4854:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"balance","nameLocation":"4878:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4870:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"needed","nameLocation":"4895:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4887:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4903:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:0"},"src":"4821:99:0"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"4926:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":106,"name":"ERC1155InvalidSender","nameLocation":"5089:20:0","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"sender","nameLocation":"5118:6:0","nodeType":"VariableDeclaration","scope":106,"src":"5110:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:0"},"src":"5083:43:0"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5132:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":111,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:0","nodeType":"ErrorDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:0","nodeType":"VariableDeclaration","scope":111,"src":"5325:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:0"},"src":"5296:47:0"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"5349:256:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":118,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:0","nodeType":"ErrorDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"operator","nameLocation":"5653:8:0","nodeType":"VariableDeclaration","scope":118,"src":"5645:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"owner","nameLocation":"5671:5:0","nodeType":"VariableDeclaration","scope":118,"src":"5663:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:0"},"src":"5610:68:0"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"5684:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":123,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:0","nodeType":"ErrorDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"approver","nameLocation":"5900:8:0","nodeType":"VariableDeclaration","scope":123,"src":"5892:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:0"},"src":"5863:47:0"},{"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5916:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":128,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:0","nodeType":"ErrorDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"operator","nameLocation":"6155:8:0","nodeType":"VariableDeclaration","scope":128,"src":"6147:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:0"},"src":"6118:47:0"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"6171:280:0","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":135,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:0","nodeType":"ErrorDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:0","nodeType":"VariableDeclaration","scope":135,"src":"6488:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:0","nodeType":"VariableDeclaration","scope":135,"src":"6507:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:0"},"src":"6456:73:0"}],"scope":137,"src":"4424:2107:0","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[]}],"src":"112:6420:0"},"id":0},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":730,"src":"131:36:1","symbolAliases":[{"foreign":{"id":139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"139:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":756,"src":"168:63:1","symbolAliases":[{"foreign":{"id":141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"176:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":786,"src":"232:48:1","symbolAliases":[{"foreign":{"id":143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"240:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":137,"src":"281:65:1","symbolAliases":[{"foreign":{"id":145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"289:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":148,"name":"Context","nameLocations":["1428:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":785,"src":"1428:7:1"},"id":149,"nodeType":"InheritanceSpecifier","src":"1428:7:1"},{"baseName":{"id":150,"name":"IERC20","nameLocations":["1437:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1437:6:1"},"id":151,"nodeType":"InheritanceSpecifier","src":"1437:6:1"},{"baseName":{"id":152,"name":"IERC20Metadata","nameLocations":["1445:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"1445:14:1"},"id":153,"nodeType":"InheritanceSpecifier","src":"1445:14:1"},{"baseName":{"id":154,"name":"IERC20Errors","nameLocations":["1461:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1461:12:1"},"id":155,"nodeType":"InheritanceSpecifier","src":"1461:12:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"348:1052:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,41,755,729,785],"name":"ERC20","nameLocation":"1419:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":159,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:1","nodeType":"VariableDeclaration","scope":651,"src":"1480:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":158,"keyName":"account","keyNameLocation":"1496:7:1","keyType":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":165,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:1","nodeType":"VariableDeclaration","scope":651,"src":"1540:83:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":164,"keyName":"account","keyNameLocation":"1556:7:1","keyType":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":163,"keyName":"spender","keyNameLocation":"1583:7:1","keyType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:1","nodeType":"VariableDeclaration","scope":651,"src":"1630:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":169,"mutability":"mutable","name":"_name","nameLocation":"1680:5:1","nodeType":"VariableDeclaration","scope":651,"src":"1665:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":168,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":171,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:1","nodeType":"VariableDeclaration","scope":651,"src":"1691:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":170,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":187,"nodeType":"Block","src":"1952:57:1","statements":[{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1962:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1970:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":182,"nodeType":"ExpressionStatement","src":"1962:13:1"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"1985:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1995:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":186,"nodeType":"ExpressionStatement","src":"1985:17:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"1720:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"name_","nameLocation":"1922:5:1","nodeType":"VariableDeclaration","scope":188,"src":"1908:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":173,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:1","nodeType":"VariableDeclaration","scope":188,"src":"1929:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":175,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:1"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1952:0:1"},"scope":651,"src":"1896:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[742],"body":{"id":196,"nodeType":"Block","src":"2134:29:1","statements":[{"expression":{"id":194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"2151:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"2144:12:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"2015:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"2087:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"2119:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":191,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:1"},"scope":651,"src":"2074:89:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[748],"body":{"id":205,"nodeType":"Block","src":"2338:31:1","statements":[{"expression":{"id":203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2355:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":202,"id":204,"nodeType":"Return","src":"2348:14:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2169:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"2291:2:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"2323:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:1"},"scope":651,"src":"2276:93:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":214,"nodeType":"Block","src":"3058:26:1","statements":[{"expression":{"hexValue":"3138","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":211,"id":213,"nodeType":"Return","src":"3068:9:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2375:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"3019:2:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"3051:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:1"},"scope":651,"src":"3002:82:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[678],"body":{"id":223,"nodeType":"Block","src":"3205:36:1","statements":[{"expression":{"id":221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3222:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":220,"id":222,"nodeType":"Return","src":"3215:19:1"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"3090:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"3164:2:1"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"3196:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:1"},"scope":651,"src":"3144:97:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[686],"body":{"id":236,"nodeType":"Block","src":"3373:42:1","statements":[{"expression":{"baseExpression":{"id":232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3390:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":234,"indexExpression":{"id":233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3400:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":231,"id":235,"nodeType":"Return","src":"3383:25:1"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"3247:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:1","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"account","nameLocation":"3326:7:1","nodeType":"VariableDeclaration","scope":237,"src":"3318:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"3364:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:1"},"scope":651,"src":"3299:116:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[696],"body":{"id":260,"nodeType":"Block","src":"3685:103:1","statements":[{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"owner","nameLocation":"3703:5:1","nodeType":"VariableDeclaration","scope":260,"src":"3695:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"3711:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:1"},{"expression":{"arguments":[{"id":253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3743:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3750:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3754:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"3733:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"3733:27:1"},{"expression":{"hexValue":"74727565","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":246,"id":259,"nodeType":"Return","src":"3770:11:1"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"3421:184:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"to","nameLocation":"3636:2:1","nodeType":"VariableDeclaration","scope":261,"src":"3628:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"value","nameLocation":"3648:5:1","nodeType":"VariableDeclaration","scope":261,"src":"3640:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":261,"src":"3679:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:1"},"scope":651,"src":"3610:178:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[706],"body":{"id":277,"nodeType":"Block","src":"3935:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"3952:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":273,"indexExpression":{"id":272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3964:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":275,"indexExpression":{"id":274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3971:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":270,"id":276,"nodeType":"Return","src":"3945:34:1"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3794:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"3873:5:1","nodeType":"VariableDeclaration","scope":278,"src":"3865:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"spender","nameLocation":"3888:7:1","nodeType":"VariableDeclaration","scope":278,"src":"3880:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"3926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:1"},"scope":651,"src":"3846:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[716],"body":{"id":301,"nodeType":"Block","src":"4372:107:1","statements":[{"assignments":[289],"declarations":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"4390:5:1","nodeType":"VariableDeclaration","scope":301,"src":"4382:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4398:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:1"},{"expression":{"arguments":[{"id":294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"4429:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4436:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4445:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":542,"src":"4420:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"4420:31:1"},{"expression":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":287,"id":300,"nodeType":"Return","src":"4461:11:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"3992:296:1","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"spender","nameLocation":"4318:7:1","nodeType":"VariableDeclaration","scope":302,"src":"4310:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"value","nameLocation":"4335:5:1","nodeType":"VariableDeclaration","scope":302,"src":"4327:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"4366:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:1"},"scope":651,"src":"4293:186:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[728],"body":{"id":333,"nodeType":"Block","src":"5132:151:1","statements":[{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"5150:7:1","nodeType":"VariableDeclaration","scope":333,"src":"5142:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"5160:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:1"},{"expression":{"arguments":[{"id":320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5198:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5204:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5213:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"5182:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"5182:37:1"},{"expression":{"arguments":[{"id":326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5239:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"5245:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5249:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"5229:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"5229:26:1"},{"expression":{"hexValue":"74727565","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":313,"id":332,"nodeType":"Return","src":"5265:11:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"4485:549:1","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:1","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"5069:4:1","nodeType":"VariableDeclaration","scope":334,"src":"5061:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"5083:2:1","nodeType":"VariableDeclaration","scope":334,"src":"5075:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"5095:5:1","nodeType":"VariableDeclaration","scope":334,"src":"5087:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:1"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"5126:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:1"},"scope":651,"src":"5039:244:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":380,"nodeType":"Block","src":"5725:231:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5739:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:1","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"5735:86:1","trueBody":{"id":357,"nodeType":"Block","src":"5759:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:1","typeDescriptions":{}}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"5780:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"RevertStatement","src":"5773:37:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5834:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:1","typeDescriptions":{}}},"id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"5830:86:1","trueBody":{"id":372,"nodeType":"Block","src":"5852:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:1","typeDescriptions":{}}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"5873:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":371,"nodeType":"RevertStatement","src":"5866:39:1"}]}},{"expression":{"arguments":[{"id":375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5933:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5939:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5943:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5925:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":379,"nodeType":"ExpressionStatement","src":"5925:24:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"5289:362:1","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"from","nameLocation":"5683:4:1","nodeType":"VariableDeclaration","scope":381,"src":"5675:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"5697:2:1","nodeType":"VariableDeclaration","scope":381,"src":"5689:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"value","nameLocation":"5709:5:1","nodeType":"VariableDeclaration","scope":381,"src":"5701:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:1"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"5725:0:1"},"scope":651,"src":"5656:300:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"6346:1032:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6360:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:1","typeDescriptions":{}}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":428,"nodeType":"Block","src":"6534:362:1","statements":[{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:1","nodeType":"VariableDeclaration","scope":428,"src":"6548:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":407,"initialValue":{"baseExpression":{"id":404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6570:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":406,"indexExpression":{"id":405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6580:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6603:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6617:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":418,"nodeType":"IfStatement","src":"6599:115:1","trueBody":{"id":417,"nodeType":"Block","src":"6624:90:1","statements":[{"errorCall":{"arguments":[{"id":412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6674:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6680:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6693:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"6649:24:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"RevertStatement","src":"6642:57:1"}]}},{"id":427,"nodeType":"UncheckedBlock","src":"6727:159:1","statements":[{"expression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6834:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"id":420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6844:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6852:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6866:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":426,"nodeType":"ExpressionStatement","src":"6834:37:1"}]}]},"id":429,"nodeType":"IfStatement","src":"6356:540:1","trueBody":{"id":401,"nodeType":"Block","src":"6380:148:1","statements":[{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6496:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6512:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"6496:21:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6910:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:1","typeDescriptions":{}}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":449,"nodeType":"Block","src":"7125:206:1","statements":[{"id":448,"nodeType":"UncheckedBlock","src":"7139:182:1","statements":[{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"7284:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":444,"indexExpression":{"id":443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7294:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7301:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"nodeType":"ExpressionStatement","src":"7284:22:1"}]}]},"id":450,"nodeType":"IfStatement","src":"6906:425:1","trueBody":{"id":441,"nodeType":"Block","src":"6928:191:1","statements":[{"id":440,"nodeType":"UncheckedBlock","src":"6942:167:1","statements":[{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"7073:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7089:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"7073:21:1"}]}]}},{"eventCall":{"arguments":[{"id":452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7355:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7361:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7365:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7346:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"EmitStatement","src":"7341:30:1"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5962:304:1","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"from","nameLocation":"6296:4:1","nodeType":"VariableDeclaration","scope":458,"src":"6288:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"to","nameLocation":"6310:2:1","nodeType":"VariableDeclaration","scope":458,"src":"6302:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"value","nameLocation":"6322:5:1","nodeType":"VariableDeclaration","scope":458,"src":"6314:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"6346:0:1"},"scope":651,"src":"6271:1107:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"7777:152:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7791:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:1","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"IfStatement","src":"7787:91:1","trueBody":{"id":479,"nodeType":"Block","src":"7814:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:1","typeDescriptions":{}}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"7835:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"RevertStatement","src":"7828:39:1"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:1","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7907:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7916:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7887:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7887:35:1"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"7384:332:1","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"account","nameLocation":"7744:7:1","nodeType":"VariableDeclaration","scope":491,"src":"7736:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"value","nameLocation":"7761:5:1","nodeType":"VariableDeclaration","scope":491,"src":"7753:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:1"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7777:0:1"},"scope":651,"src":"7721:208:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":523,"nodeType":"Block","src":"8303:150:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8317:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:1","typeDescriptions":{}}},"id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"IfStatement","src":"8313:89:1","trueBody":{"id":512,"nodeType":"Block","src":"8340:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:1","typeDescriptions":{}}},"id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"8361:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"RevertStatement","src":"8354:37:1"}]}},{"expression":{"arguments":[{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8419:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:1","typeDescriptions":{}}},"id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"8440:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"8411:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"8411:35:1"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"7935:307:1","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:1","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"account","nameLocation":"8270:7:1","nodeType":"VariableDeclaration","scope":524,"src":"8262:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"value","nameLocation":"8287:5:1","nodeType":"VariableDeclaration","scope":524,"src":"8279:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:1"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"8303:0:1"},"scope":651,"src":"8247:206:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":541,"nodeType":"Block","src":"9063:54:1","statements":[{"expression":{"arguments":[{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"9082:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"9089:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"9098:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"9073:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"9073:37:1"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"8459:525:1","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:1","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"9015:5:1","nodeType":"VariableDeclaration","scope":542,"src":"9007:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"9030:7:1","nodeType":"VariableDeclaration","scope":542,"src":"9022:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"value","nameLocation":"9047:5:1","nodeType":"VariableDeclaration","scope":542,"src":"9039:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:1"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"9063:0:1"},"scope":651,"src":"8989:128:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"10047:334:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10061:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:1","typeDescriptions":{}}},"id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":568,"nodeType":"IfStatement","src":"10057:89:1","trueBody":{"id":567,"nodeType":"Block","src":"10082:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:1","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"10103:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"RevertStatement","src":"10096:39:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10159:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:1","typeDescriptions":{}}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":583,"nodeType":"IfStatement","src":"10155:90:1","trueBody":{"id":582,"nodeType":"Block","src":"10182:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:1","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"10203:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"RevertStatement","src":"10196:38:1"}]}},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"10254:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":587,"indexExpression":{"id":585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10266:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":588,"indexExpression":{"id":586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10273:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10284:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"10254:35:1"},{"condition":{"id":592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"10303:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":600,"nodeType":"IfStatement","src":"10299:76:1","trueBody":{"id":599,"nodeType":"Block","src":"10314:61:1","statements":[{"eventCall":{"arguments":[{"id":594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10342:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10349:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10358:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10333:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"EmitStatement","src":"10328:36:1"}]}}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"9123:821:1","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"owner","nameLocation":"9975:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9967:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"spender","nameLocation":"9990:7:1","nodeType":"VariableDeclaration","scope":602,"src":"9982:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"value","nameLocation":"10007:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9999:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:1","nodeType":"VariableDeclaration","scope":602,"src":"10014:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"10047:0:1"},"scope":651,"src":"9949:432:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":649,"nodeType":"Block","src":"10752:388:1","statements":[{"assignments":[613],"declarations":[{"constant":false,"id":613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:1","nodeType":"VariableDeclaration","scope":649,"src":"10762:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":618,"initialValue":{"arguments":[{"id":615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10799:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10806:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"10789:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10828:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:1","memberName":"max","nodeType":"MemberAccess","src":"10848:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":648,"nodeType":"IfStatement","src":"10824:310:1","trueBody":{"id":647,"nodeType":"Block","src":"10867:267:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10885:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10904:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"10881:130:1","trueBody":{"id":635,"nodeType":"Block","src":"10911:100:1","statements":[{"errorCall":{"arguments":[{"id":630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10963:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10972:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10990:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"10936:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"10929:67:1"}]}},{"id":646,"nodeType":"UncheckedBlock","src":"11024:100:1","statements":[{"expression":{"arguments":[{"id":638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"11061:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"11068:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"11077:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"11096:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"11052:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"11052:57:1"}]}]}}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"10387:271:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"10696:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10688:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"spender","nameLocation":"10711:7:1","nodeType":"VariableDeclaration","scope":650,"src":"10703:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"value","nameLocation":"10728:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10720:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:1"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"10752:0:1"},"scope":651,"src":"10663:477:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"1401:9741:1","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"105:11038:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[729]},"id":730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"132:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":729,"linearizedBaseContracts":[729],"name":"IERC20","nameLocation":"213:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"226:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":663,"name":"Transfer","nameLocation":"395:8:2","nodeType":"EventDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:2","nodeType":"VariableDeclaration","scope":663,"src":"404:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:2","nodeType":"VariableDeclaration","scope":663,"src":"426:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:2","nodeType":"VariableDeclaration","scope":663,"src":"446:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:2"},"src":"389:72:2"},{"anonymous":false,"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"467:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":672,"name":"Approval","nameLocation":"626:8:2","nodeType":"EventDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:2","nodeType":"VariableDeclaration","scope":672,"src":"635:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:2","nodeType":"VariableDeclaration","scope":672,"src":"658:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:2","nodeType":"VariableDeclaration","scope":672,"src":"683:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:2"},"src":"620:78:2"},{"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"704:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":729,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"835:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:2","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"account","nameLocation":"938:7:2","nodeType":"VariableDeclaration","scope":686,"src":"930:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:2"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"970:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:2"},"scope":729,"src":"911:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"985:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"to","nameLocation":"1229:2:2","nodeType":"VariableDeclaration","scope":696,"src":"1221:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"value","nameLocation":"1241:5:2","nodeType":"VariableDeclaration","scope":696,"src":"1233:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:2"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"1266:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:2"},"scope":729,"src":"1203:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1278:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:2","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"owner","nameLocation":"1574:5:2","nodeType":"VariableDeclaration","scope":706,"src":"1566:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"spender","nameLocation":"1589:7:2","nodeType":"VariableDeclaration","scope":706,"src":"1581:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"1621:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:2"},"scope":729,"src":"1547:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"1636:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:2","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"spender","nameLocation":"2333:7:2","nodeType":"VariableDeclaration","scope":716,"src":"2325:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"value","nameLocation":"2350:5:2","nodeType":"VariableDeclaration","scope":716,"src":"2342:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:2"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"2375:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:2"},"scope":729,"src":"2308:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"2387:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:2","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"from","nameLocation":"2719:4:2","nodeType":"VariableDeclaration","scope":728,"src":"2711:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"to","nameLocation":"2733:2:2","nodeType":"VariableDeclaration","scope":728,"src":"2725:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"value","nameLocation":"2745:5:2","nodeType":"VariableDeclaration","scope":728,"src":"2737:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"2770:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":725,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:2"},"scope":729,"src":"2689:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":730,"src":"203:2575:2","usedErrors":[],"usedEvents":[663,672]}],"src":"106:2673:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[729],"IERC20Metadata":[755]},"id":756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":756,"sourceUnit":730,"src":"151:37:3","symbolAliases":[{"foreign":{"id":732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"159:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":735,"name":"IERC20","nameLocations":["305:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"305:6:3"},"id":736,"nodeType":"InheritanceSpecifier","src":"305:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"190:86:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":755,"linearizedBaseContracts":[755,729],"name":"IERC20Metadata","nameLocation":"287:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"318:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:3","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"390:2:3"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"416:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":739,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:3"},"scope":755,"src":"377:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"437:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"513:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"539:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:3"},"scope":755,"src":"498:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"560:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:3","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"647:2:3"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"673:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":751,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:3"},"scope":755,"src":"630:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":756,"src":"277:405:3","usedErrors":[],"usedEvents":[663,672]}],"src":"125:558:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[785]},"id":786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"127:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":785,"linearizedBaseContracts":[785],"name":"Context","nameLocation":"642:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":766,"nodeType":"Block","src":"718:34:4","statements":[{"expression":{"expression":{"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:4","memberName":"sender","nodeType":"MemberAccess","src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":762,"id":765,"nodeType":"Return","src":"728:17:4"}]},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:4","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"675:2:4"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"709:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:4"},"scope":785,"src":"656:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"825:32:4","statements":[{"expression":{"expression":{"id":772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:4","memberName":"data","nodeType":"MemberAccess","src":"842:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":771,"id":774,"nodeType":"Return","src":"835:15:4"}]},"id":776,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:4","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"775:2:4"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"809:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":769,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:4"},"scope":785,"src":"758:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":783,"nodeType":"Block","src":"935:25:4","statements":[{"expression":{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":780,"id":782,"nodeType":"Return","src":"945:8:4"}]},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:4","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"892:2:4"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:4"},"scope":785,"src":"863:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":786,"src":"624:338:4","usedErrors":[],"usedEvents":[]}],"src":"101:862:4"},"id":4},"contracts/ManualTokem.sol":{"ast":{"absolutePath":"contracts/ManualTokem.sol","exportedSymbols":{"TokenERC20":[1182],"tokenRecipient":[799]},"id":1183,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":787,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"tokenRecipient","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":799,"linearizedBaseContracts":[799],"name":"tokenRecipient","nameLocation":"68:14:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8f4ffcb1","id":798,"implemented":false,"kind":"function","modifiers":[],"name":"receiveApproval","nameLocation":"96:15:5","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"_from","nameLocation":"125:5:5","nodeType":"VariableDeclaration","scope":798,"src":"117:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"117:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"_value","nameLocation":"144:6:5","nodeType":"VariableDeclaration","scope":798,"src":"136:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"136:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"_token","nameLocation":"164:6:5","nodeType":"VariableDeclaration","scope":798,"src":"156:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"156:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"_extraData","nameLocation":"191:10:5","nodeType":"VariableDeclaration","scope":798,"src":"176:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":794,"name":"bytes","nodeType":"ElementaryTypeName","src":"176:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111:94:5"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"214:0:5"},"scope":799,"src":"87:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1183,"src":"58:159:5","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"TokenERC20","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1182,"linearizedBaseContracts":[1182],"name":"TokenERC20","nameLocation":"228:10:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"06fdde03","id":801,"mutability":"mutable","name":"name","nameLocation":"292:4:5","nodeType":"VariableDeclaration","scope":1182,"src":"278:18:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":800,"name":"string","nodeType":"ElementaryTypeName","src":"278:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":803,"mutability":"mutable","name":"symbol","nameLocation":"314:6:5","nodeType":"VariableDeclaration","scope":1182,"src":"300:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":802,"name":"string","nodeType":"ElementaryTypeName","src":"300:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"313ce567","id":806,"mutability":"mutable","name":"decimals","nameLocation":"337:8:5","nodeType":"VariableDeclaration","scope":1182,"src":"324:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":804,"name":"uint8","nodeType":"ElementaryTypeName","src":"324:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3138","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"348:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"public"},{"constant":false,"functionSelector":"18160ddd","id":808,"mutability":"mutable","name":"totalSupply","nameLocation":"439:11:5","nodeType":"VariableDeclaration","scope":1182,"src":"424:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"424:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"70a08231","id":812,"mutability":"mutable","name":"balanceOf","nameLocation":"535:9:5","nodeType":"VariableDeclaration","scope":1182,"src":"500:44:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":811,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"500:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"519:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"dd62ed3e","id":818,"mutability":"mutable","name":"allowance","nameLocation":"603:9:5","nodeType":"VariableDeclaration","scope":1182,"src":"548:64:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":817,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"556:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"548:47:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":816,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"575:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"567:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":826,"name":"Transfer","nameLocation":"701:8:5","nodeType":"EventDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"726:4:5","nodeType":"VariableDeclaration","scope":826,"src":"710:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"710:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":822,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"748:2:5","nodeType":"VariableDeclaration","scope":826,"src":"732:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"732:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":824,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"760:5:5","nodeType":"VariableDeclaration","scope":826,"src":"752:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"752:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"709:57:5"},"src":"695:72:5"},{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":834,"name":"Approval","nameLocation":"855:8:5","nodeType":"EventDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"indexed":true,"mutability":"mutable","name":"_owner","nameLocation":"885:6:5","nodeType":"VariableDeclaration","scope":834,"src":"869:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":830,"indexed":true,"mutability":"mutable","name":"_spender","nameLocation":"913:8:5","nodeType":"VariableDeclaration","scope":834,"src":"897:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"897:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"indexed":false,"mutability":"mutable","name":"_value","nameLocation":"935:6:5","nodeType":"VariableDeclaration","scope":834,"src":"927:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"927:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"863:82:5"},"src":"849:97:5"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":840,"name":"Burn","nameLocation":"1006:4:5","nodeType":"EventDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1027:4:5","nodeType":"VariableDeclaration","scope":840,"src":"1011:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":838,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1041:5:5","nodeType":"VariableDeclaration","scope":840,"src":"1033:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1033:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:37:5"},"src":"1000:48:5"},{"body":{"id":876,"nodeType":"Block","src":"1282:313:5","statements":[{"expression":{"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":850,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"1288:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":851,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"1302:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1318:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":855,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"1330:8:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1322:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":853,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:5","typeDescriptions":{}}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1318:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1302:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1288:51:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":860,"nodeType":"ExpressionStatement","src":"1288:51:5"},{"expression":{"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":861,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"1392:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":864,"indexExpression":{"expression":{"id":862,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1402:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1406:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1402:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1392:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":865,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"1416:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1392:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":867,"nodeType":"ExpressionStatement","src":"1392:35:5"},{"expression":{"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":868,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"1472:4:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":869,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"1479:9:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1472:16:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":871,"nodeType":"ExpressionStatement","src":"1472:16:5"},{"expression":{"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":872,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"1531:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":873,"name":"tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"1540:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1531:20:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":875,"nodeType":"ExpressionStatement","src":"1531:20:5"}]},"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"1052:124:5","text":" Constructor function\n Initializes contract with initial supply tokens to the creator of the contract"},"id":877,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"initialSupply","nameLocation":"1204:13:5","nodeType":"VariableDeclaration","scope":877,"src":"1196:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"tokenName","nameLocation":"1237:9:5","nodeType":"VariableDeclaration","scope":877,"src":"1223:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":844,"name":"string","nodeType":"ElementaryTypeName","src":"1223:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"tokenSymbol","nameLocation":"1266:11:5","nodeType":"VariableDeclaration","scope":877,"src":"1252:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":846,"name":"string","nodeType":"ElementaryTypeName","src":"1252:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1190:91:5"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"1282:0:5"},"scope":1182,"src":"1179:416:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":956,"nodeType":"Block","src":"1759:708:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":888,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"1832:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1847:3:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1839:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"1839:7:5","typeDescriptions":{}}},"id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1839:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1832:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":887,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1824:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1824:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":895,"nodeType":"ExpressionStatement","src":"1824:28:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":897,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"1904:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":899,"indexExpression":{"id":898,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"1914:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1904:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":900,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"1924:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1904:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1896:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1896:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":903,"nodeType":"ExpressionStatement","src":"1896:35:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":905,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"1972:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":907,"indexExpression":{"id":906,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"1982:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1972:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":908,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"1989:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1972:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":910,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"1999:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":912,"indexExpression":{"id":911,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2009:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1999:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1972:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1964:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1964:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"ExpressionStatement","src":"1964:50:5"},{"assignments":[917],"declarations":[{"constant":false,"id":917,"mutability":"mutable","name":"previousBalances","nameLocation":"2076:16:5","nodeType":"VariableDeclaration","scope":956,"src":"2068:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":925,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":918,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2095:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":920,"indexExpression":{"id":919,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"2105:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2095:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":921,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2114:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":923,"indexExpression":{"id":922,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2124:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2114:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2095:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2068:60:5"},{"expression":{"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":926,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2166:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":928,"indexExpression":{"id":927,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"2176:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2166:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":929,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"2186:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2166:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":931,"nodeType":"ExpressionStatement","src":"2166:26:5"},{"expression":{"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":932,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2235:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":934,"indexExpression":{"id":933,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2245:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2235:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":935,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"2253:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2235:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":937,"nodeType":"ExpressionStatement","src":"2235:24:5"},{"eventCall":{"arguments":[{"id":939,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"2279:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":940,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2286:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":941,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"2291:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":938,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"2270:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":943,"nodeType":"EmitStatement","src":"2265:33:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":945,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2408:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":947,"indexExpression":{"id":946,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"2418:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2408:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":948,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2427:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":950,"indexExpression":{"id":949,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2437:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2427:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2408:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":952,"name":"previousBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"2445:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2408:53:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":944,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-3,"src":"2401:6:5","typeDescriptions":{"typeIdentifier":"t_function_assert_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2401:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":955,"nodeType":"ExpressionStatement","src":"2401:61:5"}]},"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"1599:69:5","text":" Internal transfer, only can be called by this contract"},"id":957,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"1680:9:5","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"_from","nameLocation":"1703:5:5","nodeType":"VariableDeclaration","scope":957,"src":"1695:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"_to","nameLocation":"1722:3:5","nodeType":"VariableDeclaration","scope":957,"src":"1714:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"1714:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"_value","nameLocation":"1739:6:5","nodeType":"VariableDeclaration","scope":957,"src":"1731:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1731:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1689:60:5"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"1759:0:5"},"scope":1182,"src":"1671:796:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":976,"nodeType":"Block","src":"2727:62:5","statements":[{"expression":{"arguments":[{"expression":{"id":968,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2743:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2747:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2743:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":970,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"2755:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":971,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"2760:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":967,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"2733:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":973,"nodeType":"ExpressionStatement","src":"2733:34:5"},{"expression":{"hexValue":"74727565","id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2780:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":966,"id":975,"nodeType":"Return","src":"2773:11:5"}]},"documentation":{"id":958,"nodeType":"StructuredDocumentation","src":"2471:176:5","text":" Transfer tokens\n Send `_value` tokens to `_to` from your account\n @param _to The address of the recipient\n @param _value the amount to send"},"functionSelector":"a9059cbb","id":977,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"2659:8:5","nodeType":"FunctionDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"_to","nameLocation":"2676:3:5","nodeType":"VariableDeclaration","scope":977,"src":"2668:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"_value","nameLocation":"2689:6:5","nodeType":"VariableDeclaration","scope":977,"src":"2681:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2681:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:29:5"},"returnParameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"success","nameLocation":"2718:7:5","nodeType":"VariableDeclaration","scope":977,"src":"2713:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":964,"name":"bool","nodeType":"ElementaryTypeName","src":"2713:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2712:14:5"},"scope":1182,"src":"2650:139:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1017,"nodeType":"Block","src":"3150:173:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3164:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"baseExpression":{"baseExpression":{"id":991,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3174:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":993,"indexExpression":{"id":992,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"3184:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3174:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":996,"indexExpression":{"expression":{"id":994,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3191:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3191:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3174:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3164:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":989,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3156:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3156:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":999,"nodeType":"ExpressionStatement","src":"3156:47:5"},{"expression":{"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1000,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3228:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1004,"indexExpression":{"id":1001,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"3238:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3228:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1005,"indexExpression":{"expression":{"id":1002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3245:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3249:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3245:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3228:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1006,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3260:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3228:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1008,"nodeType":"ExpressionStatement","src":"3228:38:5"},{"expression":{"arguments":[{"id":1010,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"3282:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1011,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"3289:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1012,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3294:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1009,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"3272:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1014,"nodeType":"ExpressionStatement","src":"3272:29:5"},{"expression":{"hexValue":"74727565","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3314:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":988,"id":1016,"nodeType":"Return","src":"3307:11:5"}]},"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"2793:242:5","text":" Transfer tokens from other address\n Send `_value` tokens to `_to` on behalf of `_from`\n @param _from The address of the sender\n @param _to The address of the recipient\n @param _value the amount to send"},"functionSelector":"23b872dd","id":1018,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3047:12:5","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"_from","nameLocation":"3073:5:5","nodeType":"VariableDeclaration","scope":1018,"src":"3065:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"3065:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"_to","nameLocation":"3092:3:5","nodeType":"VariableDeclaration","scope":1018,"src":"3084:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"3084:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"_value","nameLocation":"3109:6:5","nodeType":"VariableDeclaration","scope":1018,"src":"3101:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"3101:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3059:60:5"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"success","nameLocation":"3141:7:5","nodeType":"VariableDeclaration","scope":1018,"src":"3136:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":986,"name":"bool","nodeType":"ElementaryTypeName","src":"3136:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3135:14:5"},"scope":1182,"src":"3038:285:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1046,"nodeType":"Block","src":"3655:117:5","statements":[{"expression":{"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1028,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3661:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1032,"indexExpression":{"expression":{"id":1029,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3671:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3675:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3671:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3661:21:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1033,"indexExpression":{"id":1031,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"3683:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3661:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1034,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"3695:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3661:40:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1036,"nodeType":"ExpressionStatement","src":"3661:40:5"},{"eventCall":{"arguments":[{"expression":{"id":1038,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3721:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3725:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3721:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1040,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"3733:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"3743:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1037,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"3712:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3712:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"EmitStatement","src":"3707:43:5"},{"expression":{"hexValue":"74727565","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3763:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1027,"id":1045,"nodeType":"Return","src":"3756:11:5"}]},"documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"3327:234:5","text":" Set allowance for other address\n Allows `_spender` to spend no more than `_value` tokens on your behalf\n @param _spender The address authorized to spend\n @param _value the max amount they can spend"},"functionSelector":"095ea7b3","id":1047,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3573:7:5","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"_spender","nameLocation":"3589:8:5","nodeType":"VariableDeclaration","scope":1047,"src":"3581:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"3581:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"_value","nameLocation":"3607:6:5","nodeType":"VariableDeclaration","scope":1047,"src":"3599:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"3599:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3580:34:5"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"success","nameLocation":"3644:7:5","nodeType":"VariableDeclaration","scope":1047,"src":"3639:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1025,"name":"bool","nodeType":"ElementaryTypeName","src":"3639:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3638:14:5"},"scope":1182,"src":"3564:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1087,"nodeType":"Block","src":"4269:200:5","statements":[{"assignments":[1061],"declarations":[{"constant":false,"id":1061,"mutability":"mutable","name":"spender","nameLocation":"4290:7:5","nodeType":"VariableDeclaration","scope":1087,"src":"4275:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_tokenRecipient_$799","typeString":"contract tokenRecipient"},"typeName":{"id":1060,"nodeType":"UserDefinedTypeName","pathNode":{"id":1059,"name":"tokenRecipient","nameLocations":["4275:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"4275:14:5"},"referencedDeclaration":799,"src":"4275:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_tokenRecipient_$799","typeString":"contract tokenRecipient"}},"visibility":"internal"}],"id":1065,"initialValue":{"arguments":[{"id":1063,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"4315:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1062,"name":"tokenRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"4300:14:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_tokenRecipient_$799_$","typeString":"type(contract tokenRecipient)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_tokenRecipient_$799","typeString":"contract tokenRecipient"}},"nodeType":"VariableDeclarationStatement","src":"4275:49:5"},{"condition":{"arguments":[{"id":1067,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"4342:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1068,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"4352:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1066,"name":"approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"4334:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4334:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1086,"nodeType":"IfStatement","src":"4330:135:5","trueBody":{"id":1085,"nodeType":"Block","src":"4361:104:5","statements":[{"expression":{"arguments":[{"expression":{"id":1073,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4393:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4397:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4393:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"4405:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1078,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4421:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_TokenERC20_$1182","typeString":"contract TokenERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenERC20_$1182","typeString":"contract TokenERC20"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4413:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"4413:7:5","typeDescriptions":{}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4413:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1080,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"4428:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1070,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"4369:7:5","typeDescriptions":{"typeIdentifier":"t_contract$_tokenRecipient_$799","typeString":"contract tokenRecipient"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4377:15:5","memberName":"receiveApproval","nodeType":"MemberAccess","referencedDeclaration":798,"src":"4369:23:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,address,bytes memory) external"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4369:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"ExpressionStatement","src":"4369:70:5"},{"expression":{"hexValue":"74727565","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4454:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1058,"id":1084,"nodeType":"Return","src":"4447:11:5"}]}}]},"documentation":{"id":1048,"nodeType":"StructuredDocumentation","src":"3776:361:5","text":" Set allowance for other address and notify\n Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\n @param _spender The address authorized to spend\n @param _value the max amount they can spend\n @param _extraData some extra information to send to the approved contract"},"functionSelector":"cae9ca51","id":1088,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4149:14:5","nodeType":"FunctionDefinition","parameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"_spender","nameLocation":"4177:8:5","nodeType":"VariableDeclaration","scope":1088,"src":"4169:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"4169:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"_value","nameLocation":"4199:6:5","nodeType":"VariableDeclaration","scope":1088,"src":"4191:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"4191:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"_extraData","nameLocation":"4224:10:5","nodeType":"VariableDeclaration","scope":1088,"src":"4211:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1053,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4163:75:5"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"success","nameLocation":"4260:7:5","nodeType":"VariableDeclaration","scope":1088,"src":"4255:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1056,"name":"bool","nodeType":"ElementaryTypeName","src":"4255:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4254:14:5"},"scope":1182,"src":"4140:329:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1124,"nodeType":"Block","src":"4679:252:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1097,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"4693:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1100,"indexExpression":{"expression":{"id":1098,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4703:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4707:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4703:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4693:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1101,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"4718:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4693:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4685:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4685:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1104,"nodeType":"ExpressionStatement","src":"4685:40:5"},{"expression":{"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1105,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"4765:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1108,"indexExpression":{"expression":{"id":1106,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4775:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4779:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4775:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4765:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1109,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"4790:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4765:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ExpressionStatement","src":"4765:31:5"},{"expression":{"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1112,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"4830:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1113,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"4845:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4830:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1115,"nodeType":"ExpressionStatement","src":"4830:21:5"},{"eventCall":{"arguments":[{"expression":{"id":1117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4890:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4894:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4890:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1119,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"4902:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1116,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"4885:4:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4885:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"EmitStatement","src":"4880:29:5"},{"expression":{"hexValue":"74727565","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4922:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1095,"id":1123,"nodeType":"Return","src":"4915:11:5"}]},"documentation":{"id":1089,"nodeType":"StructuredDocumentation","src":"4473:143:5","text":" Destroy tokens\n Remove `_value` tokens from the system irreversibly\n @param _value the amount of money to burn"},"functionSelector":"42966c68","id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"4628:4:5","nodeType":"FunctionDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"_value","nameLocation":"4641:6:5","nodeType":"VariableDeclaration","scope":1125,"src":"4633:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"4633:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4632:16:5"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"success","nameLocation":"4670:7:5","nodeType":"VariableDeclaration","scope":1125,"src":"4665:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1093,"name":"bool","nodeType":"ElementaryTypeName","src":"4665:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4664:14:5"},"scope":1182,"src":"4619:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1180,"nodeType":"Block","src":"5255:411:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1136,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"5269:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1138,"indexExpression":{"id":1137,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5279:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5269:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1139,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5289:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5269:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5261:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5261:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"ExpressionStatement","src":"5261:35:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1144,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5353:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"baseExpression":{"baseExpression":{"id":1145,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"5363:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1147,"indexExpression":{"id":1146,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5373:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5363:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1150,"indexExpression":{"expression":{"id":1148,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5380:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5384:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5380:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5363:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5345:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1153,"nodeType":"ExpressionStatement","src":"5345:47:5"},{"expression":{"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1154,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"5417:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1156,"indexExpression":{"id":1155,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5427:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5417:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1157,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5437:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5417:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1159,"nodeType":"ExpressionStatement","src":"5417:26:5"},{"expression":{"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1160,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"5487:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1164,"indexExpression":{"id":1161,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5497:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5487:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1165,"indexExpression":{"expression":{"id":1162,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5504:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5508:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5504:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5487:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1166,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5519:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5487:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1168,"nodeType":"ExpressionStatement","src":"5487:38:5"},{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1169,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"5571:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1170,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5586:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5571:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1172,"nodeType":"ExpressionStatement","src":"5571:21:5"},{"eventCall":{"arguments":[{"id":1174,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5630:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5637:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1173,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"5625:4:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5625:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1177,"nodeType":"EmitStatement","src":"5620:24:5"},{"expression":{"hexValue":"74727565","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5657:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1134,"id":1179,"nodeType":"Return","src":"5650:11:5"}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"4935:228:5","text":" Destroy tokens from other account\n Remove `_value` tokens from the system irreversibly on behalf of `_from`.\n @param _from the address of the sender\n @param _value the amount of money to burn"},"functionSelector":"79cc6790","id":1181,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"5175:8:5","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"_from","nameLocation":"5192:5:5","nodeType":"VariableDeclaration","scope":1181,"src":"5184:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"5184:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"_value","nameLocation":"5207:6:5","nodeType":"VariableDeclaration","scope":1181,"src":"5199:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"5199:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5183:31:5"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"success","nameLocation":"5244:7:5","nodeType":"VariableDeclaration","scope":1181,"src":"5239:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1132,"name":"bool","nodeType":"ElementaryTypeName","src":"5239:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5238:14:5"},"scope":1182,"src":"5166:500:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1183,"src":"219:5449:5","usedErrors":[],"usedEvents":[826,834,840]}],"src":"32:5636:5"},"id":5},"contracts/OurToken.sol":{"ast":{"absolutePath":"contracts/OurToken.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755],"OurToken":[1204]},"id":1205,"nodeType":"SourceUnit","nodes":[{"id":1184,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1205,"sourceUnit":652,"src":"59:55:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1186,"name":"ERC20","nameLocations":["137:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"137:5:6"},"id":1187,"nodeType":"InheritanceSpecifier","src":"137:5:6"}],"canonicalName":"OurToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1204,"linearizedBaseContracts":[1204,651,41,755,729,785],"name":"OurToken","nameLocation":"125:8:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1202,"nodeType":"Block","src":"277:49:6","statements":[{"expression":{"arguments":[{"expression":{"id":1197,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"293:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"297:6:6","memberName":"sender","nodeType":"MemberAccess","src":"293:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1199,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"305:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1196,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"287:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"287:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1201,"nodeType":"ExpressionStatement","src":"287:32:6"}]},"id":1203,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4f7572546f6b656e","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"259:10:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_435fb702632fb0697ac03d8afd60d433b0e205993c6b5df1d928bad84d744bd9","typeString":"literal_string \"OurToken\""},"value":"OurToken"},{"hexValue":"4f54","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"271:4:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_44e9633a7b01361224d6e63fccabb8202c30f9e8afab72c39de8073170153503","typeString":"literal_string \"OT\""},"value":"OT"}],"id":1194,"kind":"baseConstructorSpecifier","modifierName":{"id":1191,"name":"ERC20","nameLocations":["253:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"253:5:6"},"nodeType":"ModifierInvocation","src":"253:23:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"initialSupply","nameLocation":"238:13:6","nodeType":"VariableDeclaration","scope":1203,"src":"230:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"230:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"229:23:6"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[],"src":"277:0:6"},"scope":1204,"src":"218:108:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1205,"src":"116:212:6","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"33:295:6"},"id":6}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ManualTokem.sol":{"TokenERC20":{"abi":[{"inputs":[{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"string","name":"tokenName","type":"string"},{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_owner","type":"address"},{"indexed":true,"internalType":"address","name":"_spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"_value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"burn","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"burnFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"params":{"_spender":"The address authorized to spend","_value":"the max amount they can spend"}},"approveAndCall(address,uint256,bytes)":{"params":{"_extraData":"some extra information to send to the approved contract","_spender":"The address authorized to spend","_value":"the max amount they can spend"}},"burn(uint256)":{"params":{"_value":"the amount of money to burn"}},"burnFrom(address,uint256)":{"params":{"_from":"the address of the sender","_value":"the amount of money to burn"}},"transfer(address,uint256)":{"params":{"_to":"The address of the recipient","_value":"the amount to send"}},"transferFrom(address,address,uint256)":{"params":{"_from":"The address of the sender","_to":"The address of the recipient","_value":"the amount to send"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_877":{"entryPoint":null,"id":877,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":586,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":661,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":306,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":712,"id":null,"parameterSlots":2,"returnSlots":3},"allocate_memory":{"entryPoint":457,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":250,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":488,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1520,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1409,"id":null,"parameterSlots":1,"returnSlots":1},"checked_exp_helper":{"entryPoint":926,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":1253,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":1017,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1334,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1831,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":270,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1792,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1666,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1986,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":542,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1541,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1467,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1956,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":403,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1656,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1924,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":866,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1420,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":356,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1706,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":329,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":334,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":265,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":260,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":339,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1557,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":913,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1911,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1764,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1570,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1716,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":280,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1759,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:11941:7","nodeType":"YulBlock","src":"0:11941:7","statements":[{"body":{"nativeSrc":"47:35:7","nodeType":"YulBlock","src":"47:35:7","statements":[{"nativeSrc":"57:19:7","nodeType":"YulAssignment","src":"57:19:7","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:7","nodeType":"YulLiteral","src":"73:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:7","nodeType":"YulIdentifier","src":"67:5:7"},"nativeSrc":"67:9:7","nodeType":"YulFunctionCall","src":"67:9:7"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:7","nodeType":"YulIdentifier","src":"57:6:7"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:7","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:7","nodeType":"YulTypedName","src":"40:6:7","type":""}],"src":"7:75:7"},{"body":{"nativeSrc":"177:28:7","nodeType":"YulBlock","src":"177:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:7","nodeType":"YulLiteral","src":"194:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:7","nodeType":"YulLiteral","src":"197:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:7","nodeType":"YulIdentifier","src":"187:6:7"},"nativeSrc":"187:12:7","nodeType":"YulFunctionCall","src":"187:12:7"},"nativeSrc":"187:12:7","nodeType":"YulExpressionStatement","src":"187:12:7"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:7","nodeType":"YulFunctionDefinition","src":"88:117:7"},{"body":{"nativeSrc":"300:28:7","nodeType":"YulBlock","src":"300:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:7","nodeType":"YulLiteral","src":"317:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:7","nodeType":"YulLiteral","src":"320:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:7","nodeType":"YulIdentifier","src":"310:6:7"},"nativeSrc":"310:12:7","nodeType":"YulFunctionCall","src":"310:12:7"},"nativeSrc":"310:12:7","nodeType":"YulExpressionStatement","src":"310:12:7"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:7","nodeType":"YulFunctionDefinition","src":"211:117:7"},{"body":{"nativeSrc":"379:32:7","nodeType":"YulBlock","src":"379:32:7","statements":[{"nativeSrc":"389:16:7","nodeType":"YulAssignment","src":"389:16:7","value":{"name":"value","nativeSrc":"400:5:7","nodeType":"YulIdentifier","src":"400:5:7"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:7","nodeType":"YulIdentifier","src":"389:7:7"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:7","nodeType":"YulTypedName","src":"361:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:7","nodeType":"YulTypedName","src":"371:7:7","type":""}],"src":"334:77:7"},{"body":{"nativeSrc":"460:79:7","nodeType":"YulBlock","src":"460:79:7","statements":[{"body":{"nativeSrc":"517:16:7","nodeType":"YulBlock","src":"517:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:7","nodeType":"YulLiteral","src":"526:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:7","nodeType":"YulLiteral","src":"529:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:7","nodeType":"YulIdentifier","src":"519:6:7"},"nativeSrc":"519:12:7","nodeType":"YulFunctionCall","src":"519:12:7"},"nativeSrc":"519:12:7","nodeType":"YulExpressionStatement","src":"519:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:7","nodeType":"YulIdentifier","src":"483:5:7"},{"arguments":[{"name":"value","nativeSrc":"508:5:7","nodeType":"YulIdentifier","src":"508:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:7","nodeType":"YulIdentifier","src":"490:17:7"},"nativeSrc":"490:24:7","nodeType":"YulFunctionCall","src":"490:24:7"}],"functionName":{"name":"eq","nativeSrc":"480:2:7","nodeType":"YulIdentifier","src":"480:2:7"},"nativeSrc":"480:35:7","nodeType":"YulFunctionCall","src":"480:35:7"}],"functionName":{"name":"iszero","nativeSrc":"473:6:7","nodeType":"YulIdentifier","src":"473:6:7"},"nativeSrc":"473:43:7","nodeType":"YulFunctionCall","src":"473:43:7"},"nativeSrc":"470:63:7","nodeType":"YulIf","src":"470:63:7"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:7","nodeType":"YulTypedName","src":"453:5:7","type":""}],"src":"417:122:7"},{"body":{"nativeSrc":"608:80:7","nodeType":"YulBlock","src":"608:80:7","statements":[{"nativeSrc":"618:22:7","nodeType":"YulAssignment","src":"618:22:7","value":{"arguments":[{"name":"offset","nativeSrc":"633:6:7","nodeType":"YulIdentifier","src":"633:6:7"}],"functionName":{"name":"mload","nativeSrc":"627:5:7","nodeType":"YulIdentifier","src":"627:5:7"},"nativeSrc":"627:13:7","nodeType":"YulFunctionCall","src":"627:13:7"},"variableNames":[{"name":"value","nativeSrc":"618:5:7","nodeType":"YulIdentifier","src":"618:5:7"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"676:5:7","nodeType":"YulIdentifier","src":"676:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"649:26:7","nodeType":"YulIdentifier","src":"649:26:7"},"nativeSrc":"649:33:7","nodeType":"YulFunctionCall","src":"649:33:7"},"nativeSrc":"649:33:7","nodeType":"YulExpressionStatement","src":"649:33:7"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"545:143:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"586:6:7","nodeType":"YulTypedName","src":"586:6:7","type":""},{"name":"end","nativeSrc":"594:3:7","nodeType":"YulTypedName","src":"594:3:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"602:5:7","nodeType":"YulTypedName","src":"602:5:7","type":""}],"src":"545:143:7"},{"body":{"nativeSrc":"783:28:7","nodeType":"YulBlock","src":"783:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"800:1:7","nodeType":"YulLiteral","src":"800:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"803:1:7","nodeType":"YulLiteral","src":"803:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"793:6:7","nodeType":"YulIdentifier","src":"793:6:7"},"nativeSrc":"793:12:7","nodeType":"YulFunctionCall","src":"793:12:7"},"nativeSrc":"793:12:7","nodeType":"YulExpressionStatement","src":"793:12:7"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"694:117:7","nodeType":"YulFunctionDefinition","src":"694:117:7"},{"body":{"nativeSrc":"906:28:7","nodeType":"YulBlock","src":"906:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"923:1:7","nodeType":"YulLiteral","src":"923:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"926:1:7","nodeType":"YulLiteral","src":"926:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"916:6:7","nodeType":"YulIdentifier","src":"916:6:7"},"nativeSrc":"916:12:7","nodeType":"YulFunctionCall","src":"916:12:7"},"nativeSrc":"916:12:7","nodeType":"YulExpressionStatement","src":"916:12:7"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"817:117:7","nodeType":"YulFunctionDefinition","src":"817:117:7"},{"body":{"nativeSrc":"988:54:7","nodeType":"YulBlock","src":"988:54:7","statements":[{"nativeSrc":"998:38:7","nodeType":"YulAssignment","src":"998:38:7","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1016:5:7","nodeType":"YulIdentifier","src":"1016:5:7"},{"kind":"number","nativeSrc":"1023:2:7","nodeType":"YulLiteral","src":"1023:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1012:3:7","nodeType":"YulIdentifier","src":"1012:3:7"},"nativeSrc":"1012:14:7","nodeType":"YulFunctionCall","src":"1012:14:7"},{"arguments":[{"kind":"number","nativeSrc":"1032:2:7","nodeType":"YulLiteral","src":"1032:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1028:3:7","nodeType":"YulIdentifier","src":"1028:3:7"},"nativeSrc":"1028:7:7","nodeType":"YulFunctionCall","src":"1028:7:7"}],"functionName":{"name":"and","nativeSrc":"1008:3:7","nodeType":"YulIdentifier","src":"1008:3:7"},"nativeSrc":"1008:28:7","nodeType":"YulFunctionCall","src":"1008:28:7"},"variableNames":[{"name":"result","nativeSrc":"998:6:7","nodeType":"YulIdentifier","src":"998:6:7"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"940:102:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"971:5:7","nodeType":"YulTypedName","src":"971:5:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"981:6:7","nodeType":"YulTypedName","src":"981:6:7","type":""}],"src":"940:102:7"},{"body":{"nativeSrc":"1076:152:7","nodeType":"YulBlock","src":"1076:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1093:1:7","nodeType":"YulLiteral","src":"1093:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1096:77:7","nodeType":"YulLiteral","src":"1096:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1086:6:7","nodeType":"YulIdentifier","src":"1086:6:7"},"nativeSrc":"1086:88:7","nodeType":"YulFunctionCall","src":"1086:88:7"},"nativeSrc":"1086:88:7","nodeType":"YulExpressionStatement","src":"1086:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1190:1:7","nodeType":"YulLiteral","src":"1190:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"1193:4:7","nodeType":"YulLiteral","src":"1193:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1183:6:7","nodeType":"YulIdentifier","src":"1183:6:7"},"nativeSrc":"1183:15:7","nodeType":"YulFunctionCall","src":"1183:15:7"},"nativeSrc":"1183:15:7","nodeType":"YulExpressionStatement","src":"1183:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1214:1:7","nodeType":"YulLiteral","src":"1214:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1217:4:7","nodeType":"YulLiteral","src":"1217:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1207:6:7","nodeType":"YulIdentifier","src":"1207:6:7"},"nativeSrc":"1207:15:7","nodeType":"YulFunctionCall","src":"1207:15:7"},"nativeSrc":"1207:15:7","nodeType":"YulExpressionStatement","src":"1207:15:7"}]},"name":"panic_error_0x41","nativeSrc":"1048:180:7","nodeType":"YulFunctionDefinition","src":"1048:180:7"},{"body":{"nativeSrc":"1277:238:7","nodeType":"YulBlock","src":"1277:238:7","statements":[{"nativeSrc":"1287:58:7","nodeType":"YulVariableDeclaration","src":"1287:58:7","value":{"arguments":[{"name":"memPtr","nativeSrc":"1309:6:7","nodeType":"YulIdentifier","src":"1309:6:7"},{"arguments":[{"name":"size","nativeSrc":"1339:4:7","nodeType":"YulIdentifier","src":"1339:4:7"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1317:21:7","nodeType":"YulIdentifier","src":"1317:21:7"},"nativeSrc":"1317:27:7","nodeType":"YulFunctionCall","src":"1317:27:7"}],"functionName":{"name":"add","nativeSrc":"1305:3:7","nodeType":"YulIdentifier","src":"1305:3:7"},"nativeSrc":"1305:40:7","nodeType":"YulFunctionCall","src":"1305:40:7"},"variables":[{"name":"newFreePtr","nativeSrc":"1291:10:7","nodeType":"YulTypedName","src":"1291:10:7","type":""}]},{"body":{"nativeSrc":"1456:22:7","nodeType":"YulBlock","src":"1456:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1458:16:7","nodeType":"YulIdentifier","src":"1458:16:7"},"nativeSrc":"1458:18:7","nodeType":"YulFunctionCall","src":"1458:18:7"},"nativeSrc":"1458:18:7","nodeType":"YulExpressionStatement","src":"1458:18:7"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1399:10:7","nodeType":"YulIdentifier","src":"1399:10:7"},{"kind":"number","nativeSrc":"1411:18:7","nodeType":"YulLiteral","src":"1411:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1396:2:7","nodeType":"YulIdentifier","src":"1396:2:7"},"nativeSrc":"1396:34:7","nodeType":"YulFunctionCall","src":"1396:34:7"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1435:10:7","nodeType":"YulIdentifier","src":"1435:10:7"},{"name":"memPtr","nativeSrc":"1447:6:7","nodeType":"YulIdentifier","src":"1447:6:7"}],"functionName":{"name":"lt","nativeSrc":"1432:2:7","nodeType":"YulIdentifier","src":"1432:2:7"},"nativeSrc":"1432:22:7","nodeType":"YulFunctionCall","src":"1432:22:7"}],"functionName":{"name":"or","nativeSrc":"1393:2:7","nodeType":"YulIdentifier","src":"1393:2:7"},"nativeSrc":"1393:62:7","nodeType":"YulFunctionCall","src":"1393:62:7"},"nativeSrc":"1390:88:7","nodeType":"YulIf","src":"1390:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1494:2:7","nodeType":"YulLiteral","src":"1494:2:7","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1498:10:7","nodeType":"YulIdentifier","src":"1498:10:7"}],"functionName":{"name":"mstore","nativeSrc":"1487:6:7","nodeType":"YulIdentifier","src":"1487:6:7"},"nativeSrc":"1487:22:7","nodeType":"YulFunctionCall","src":"1487:22:7"},"nativeSrc":"1487:22:7","nodeType":"YulExpressionStatement","src":"1487:22:7"}]},"name":"finalize_allocation","nativeSrc":"1234:281:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1263:6:7","nodeType":"YulTypedName","src":"1263:6:7","type":""},{"name":"size","nativeSrc":"1271:4:7","nodeType":"YulTypedName","src":"1271:4:7","type":""}],"src":"1234:281:7"},{"body":{"nativeSrc":"1562:88:7","nodeType":"YulBlock","src":"1562:88:7","statements":[{"nativeSrc":"1572:30:7","nodeType":"YulAssignment","src":"1572:30:7","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1582:18:7","nodeType":"YulIdentifier","src":"1582:18:7"},"nativeSrc":"1582:20:7","nodeType":"YulFunctionCall","src":"1582:20:7"},"variableNames":[{"name":"memPtr","nativeSrc":"1572:6:7","nodeType":"YulIdentifier","src":"1572:6:7"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1631:6:7","nodeType":"YulIdentifier","src":"1631:6:7"},{"name":"size","nativeSrc":"1639:4:7","nodeType":"YulIdentifier","src":"1639:4:7"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1611:19:7","nodeType":"YulIdentifier","src":"1611:19:7"},"nativeSrc":"1611:33:7","nodeType":"YulFunctionCall","src":"1611:33:7"},"nativeSrc":"1611:33:7","nodeType":"YulExpressionStatement","src":"1611:33:7"}]},"name":"allocate_memory","nativeSrc":"1521:129:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1546:4:7","nodeType":"YulTypedName","src":"1546:4:7","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1555:6:7","nodeType":"YulTypedName","src":"1555:6:7","type":""}],"src":"1521:129:7"},{"body":{"nativeSrc":"1723:241:7","nodeType":"YulBlock","src":"1723:241:7","statements":[{"body":{"nativeSrc":"1828:22:7","nodeType":"YulBlock","src":"1828:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1830:16:7","nodeType":"YulIdentifier","src":"1830:16:7"},"nativeSrc":"1830:18:7","nodeType":"YulFunctionCall","src":"1830:18:7"},"nativeSrc":"1830:18:7","nodeType":"YulExpressionStatement","src":"1830:18:7"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1800:6:7","nodeType":"YulIdentifier","src":"1800:6:7"},{"kind":"number","nativeSrc":"1808:18:7","nodeType":"YulLiteral","src":"1808:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1797:2:7","nodeType":"YulIdentifier","src":"1797:2:7"},"nativeSrc":"1797:30:7","nodeType":"YulFunctionCall","src":"1797:30:7"},"nativeSrc":"1794:56:7","nodeType":"YulIf","src":"1794:56:7"},{"nativeSrc":"1860:37:7","nodeType":"YulAssignment","src":"1860:37:7","value":{"arguments":[{"name":"length","nativeSrc":"1890:6:7","nodeType":"YulIdentifier","src":"1890:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1868:21:7","nodeType":"YulIdentifier","src":"1868:21:7"},"nativeSrc":"1868:29:7","nodeType":"YulFunctionCall","src":"1868:29:7"},"variableNames":[{"name":"size","nativeSrc":"1860:4:7","nodeType":"YulIdentifier","src":"1860:4:7"}]},{"nativeSrc":"1934:23:7","nodeType":"YulAssignment","src":"1934:23:7","value":{"arguments":[{"name":"size","nativeSrc":"1946:4:7","nodeType":"YulIdentifier","src":"1946:4:7"},{"kind":"number","nativeSrc":"1952:4:7","nodeType":"YulLiteral","src":"1952:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1942:3:7","nodeType":"YulIdentifier","src":"1942:3:7"},"nativeSrc":"1942:15:7","nodeType":"YulFunctionCall","src":"1942:15:7"},"variableNames":[{"name":"size","nativeSrc":"1934:4:7","nodeType":"YulIdentifier","src":"1934:4:7"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1656:308:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1707:6:7","nodeType":"YulTypedName","src":"1707:6:7","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1718:4:7","nodeType":"YulTypedName","src":"1718:4:7","type":""}],"src":"1656:308:7"},{"body":{"nativeSrc":"2032:184:7","nodeType":"YulBlock","src":"2032:184:7","statements":[{"nativeSrc":"2042:10:7","nodeType":"YulVariableDeclaration","src":"2042:10:7","value":{"kind":"number","nativeSrc":"2051:1:7","nodeType":"YulLiteral","src":"2051:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2046:1:7","nodeType":"YulTypedName","src":"2046:1:7","type":""}]},{"body":{"nativeSrc":"2111:63:7","nodeType":"YulBlock","src":"2111:63:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2136:3:7","nodeType":"YulIdentifier","src":"2136:3:7"},{"name":"i","nativeSrc":"2141:1:7","nodeType":"YulIdentifier","src":"2141:1:7"}],"functionName":{"name":"add","nativeSrc":"2132:3:7","nodeType":"YulIdentifier","src":"2132:3:7"},"nativeSrc":"2132:11:7","nodeType":"YulFunctionCall","src":"2132:11:7"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2155:3:7","nodeType":"YulIdentifier","src":"2155:3:7"},{"name":"i","nativeSrc":"2160:1:7","nodeType":"YulIdentifier","src":"2160:1:7"}],"functionName":{"name":"add","nativeSrc":"2151:3:7","nodeType":"YulIdentifier","src":"2151:3:7"},"nativeSrc":"2151:11:7","nodeType":"YulFunctionCall","src":"2151:11:7"}],"functionName":{"name":"mload","nativeSrc":"2145:5:7","nodeType":"YulIdentifier","src":"2145:5:7"},"nativeSrc":"2145:18:7","nodeType":"YulFunctionCall","src":"2145:18:7"}],"functionName":{"name":"mstore","nativeSrc":"2125:6:7","nodeType":"YulIdentifier","src":"2125:6:7"},"nativeSrc":"2125:39:7","nodeType":"YulFunctionCall","src":"2125:39:7"},"nativeSrc":"2125:39:7","nodeType":"YulExpressionStatement","src":"2125:39:7"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2072:1:7","nodeType":"YulIdentifier","src":"2072:1:7"},{"name":"length","nativeSrc":"2075:6:7","nodeType":"YulIdentifier","src":"2075:6:7"}],"functionName":{"name":"lt","nativeSrc":"2069:2:7","nodeType":"YulIdentifier","src":"2069:2:7"},"nativeSrc":"2069:13:7","nodeType":"YulFunctionCall","src":"2069:13:7"},"nativeSrc":"2061:113:7","nodeType":"YulForLoop","post":{"nativeSrc":"2083:19:7","nodeType":"YulBlock","src":"2083:19:7","statements":[{"nativeSrc":"2085:15:7","nodeType":"YulAssignment","src":"2085:15:7","value":{"arguments":[{"name":"i","nativeSrc":"2094:1:7","nodeType":"YulIdentifier","src":"2094:1:7"},{"kind":"number","nativeSrc":"2097:2:7","nodeType":"YulLiteral","src":"2097:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2090:3:7","nodeType":"YulIdentifier","src":"2090:3:7"},"nativeSrc":"2090:10:7","nodeType":"YulFunctionCall","src":"2090:10:7"},"variableNames":[{"name":"i","nativeSrc":"2085:1:7","nodeType":"YulIdentifier","src":"2085:1:7"}]}]},"pre":{"nativeSrc":"2065:3:7","nodeType":"YulBlock","src":"2065:3:7","statements":[]},"src":"2061:113:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2194:3:7","nodeType":"YulIdentifier","src":"2194:3:7"},{"name":"length","nativeSrc":"2199:6:7","nodeType":"YulIdentifier","src":"2199:6:7"}],"functionName":{"name":"add","nativeSrc":"2190:3:7","nodeType":"YulIdentifier","src":"2190:3:7"},"nativeSrc":"2190:16:7","nodeType":"YulFunctionCall","src":"2190:16:7"},{"kind":"number","nativeSrc":"2208:1:7","nodeType":"YulLiteral","src":"2208:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2183:6:7","nodeType":"YulIdentifier","src":"2183:6:7"},"nativeSrc":"2183:27:7","nodeType":"YulFunctionCall","src":"2183:27:7"},"nativeSrc":"2183:27:7","nodeType":"YulExpressionStatement","src":"2183:27:7"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1970:246:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2014:3:7","nodeType":"YulTypedName","src":"2014:3:7","type":""},{"name":"dst","nativeSrc":"2019:3:7","nodeType":"YulTypedName","src":"2019:3:7","type":""},{"name":"length","nativeSrc":"2024:6:7","nodeType":"YulTypedName","src":"2024:6:7","type":""}],"src":"1970:246:7"},{"body":{"nativeSrc":"2317:339:7","nodeType":"YulBlock","src":"2317:339:7","statements":[{"nativeSrc":"2327:75:7","nodeType":"YulAssignment","src":"2327:75:7","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2394:6:7","nodeType":"YulIdentifier","src":"2394:6:7"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"2352:41:7","nodeType":"YulIdentifier","src":"2352:41:7"},"nativeSrc":"2352:49:7","nodeType":"YulFunctionCall","src":"2352:49:7"}],"functionName":{"name":"allocate_memory","nativeSrc":"2336:15:7","nodeType":"YulIdentifier","src":"2336:15:7"},"nativeSrc":"2336:66:7","nodeType":"YulFunctionCall","src":"2336:66:7"},"variableNames":[{"name":"array","nativeSrc":"2327:5:7","nodeType":"YulIdentifier","src":"2327:5:7"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2418:5:7","nodeType":"YulIdentifier","src":"2418:5:7"},{"name":"length","nativeSrc":"2425:6:7","nodeType":"YulIdentifier","src":"2425:6:7"}],"functionName":{"name":"mstore","nativeSrc":"2411:6:7","nodeType":"YulIdentifier","src":"2411:6:7"},"nativeSrc":"2411:21:7","nodeType":"YulFunctionCall","src":"2411:21:7"},"nativeSrc":"2411:21:7","nodeType":"YulExpressionStatement","src":"2411:21:7"},{"nativeSrc":"2441:27:7","nodeType":"YulVariableDeclaration","src":"2441:27:7","value":{"arguments":[{"name":"array","nativeSrc":"2456:5:7","nodeType":"YulIdentifier","src":"2456:5:7"},{"kind":"number","nativeSrc":"2463:4:7","nodeType":"YulLiteral","src":"2463:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2452:3:7","nodeType":"YulIdentifier","src":"2452:3:7"},"nativeSrc":"2452:16:7","nodeType":"YulFunctionCall","src":"2452:16:7"},"variables":[{"name":"dst","nativeSrc":"2445:3:7","nodeType":"YulTypedName","src":"2445:3:7","type":""}]},{"body":{"nativeSrc":"2506:83:7","nodeType":"YulBlock","src":"2506:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2508:77:7","nodeType":"YulIdentifier","src":"2508:77:7"},"nativeSrc":"2508:79:7","nodeType":"YulFunctionCall","src":"2508:79:7"},"nativeSrc":"2508:79:7","nodeType":"YulExpressionStatement","src":"2508:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2487:3:7","nodeType":"YulIdentifier","src":"2487:3:7"},{"name":"length","nativeSrc":"2492:6:7","nodeType":"YulIdentifier","src":"2492:6:7"}],"functionName":{"name":"add","nativeSrc":"2483:3:7","nodeType":"YulIdentifier","src":"2483:3:7"},"nativeSrc":"2483:16:7","nodeType":"YulFunctionCall","src":"2483:16:7"},{"name":"end","nativeSrc":"2501:3:7","nodeType":"YulIdentifier","src":"2501:3:7"}],"functionName":{"name":"gt","nativeSrc":"2480:2:7","nodeType":"YulIdentifier","src":"2480:2:7"},"nativeSrc":"2480:25:7","nodeType":"YulFunctionCall","src":"2480:25:7"},"nativeSrc":"2477:112:7","nodeType":"YulIf","src":"2477:112:7"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2633:3:7","nodeType":"YulIdentifier","src":"2633:3:7"},{"name":"dst","nativeSrc":"2638:3:7","nodeType":"YulIdentifier","src":"2638:3:7"},{"name":"length","nativeSrc":"2643:6:7","nodeType":"YulIdentifier","src":"2643:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2598:34:7","nodeType":"YulIdentifier","src":"2598:34:7"},"nativeSrc":"2598:52:7","nodeType":"YulFunctionCall","src":"2598:52:7"},"nativeSrc":"2598:52:7","nodeType":"YulExpressionStatement","src":"2598:52:7"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2222:434:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2290:3:7","nodeType":"YulTypedName","src":"2290:3:7","type":""},{"name":"length","nativeSrc":"2295:6:7","nodeType":"YulTypedName","src":"2295:6:7","type":""},{"name":"end","nativeSrc":"2303:3:7","nodeType":"YulTypedName","src":"2303:3:7","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2311:5:7","nodeType":"YulTypedName","src":"2311:5:7","type":""}],"src":"2222:434:7"},{"body":{"nativeSrc":"2749:282:7","nodeType":"YulBlock","src":"2749:282:7","statements":[{"body":{"nativeSrc":"2798:83:7","nodeType":"YulBlock","src":"2798:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2800:77:7","nodeType":"YulIdentifier","src":"2800:77:7"},"nativeSrc":"2800:79:7","nodeType":"YulFunctionCall","src":"2800:79:7"},"nativeSrc":"2800:79:7","nodeType":"YulExpressionStatement","src":"2800:79:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2777:6:7","nodeType":"YulIdentifier","src":"2777:6:7"},{"kind":"number","nativeSrc":"2785:4:7","nodeType":"YulLiteral","src":"2785:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2773:3:7","nodeType":"YulIdentifier","src":"2773:3:7"},"nativeSrc":"2773:17:7","nodeType":"YulFunctionCall","src":"2773:17:7"},{"name":"end","nativeSrc":"2792:3:7","nodeType":"YulIdentifier","src":"2792:3:7"}],"functionName":{"name":"slt","nativeSrc":"2769:3:7","nodeType":"YulIdentifier","src":"2769:3:7"},"nativeSrc":"2769:27:7","nodeType":"YulFunctionCall","src":"2769:27:7"}],"functionName":{"name":"iszero","nativeSrc":"2762:6:7","nodeType":"YulIdentifier","src":"2762:6:7"},"nativeSrc":"2762:35:7","nodeType":"YulFunctionCall","src":"2762:35:7"},"nativeSrc":"2759:122:7","nodeType":"YulIf","src":"2759:122:7"},{"nativeSrc":"2890:27:7","nodeType":"YulVariableDeclaration","src":"2890:27:7","value":{"arguments":[{"name":"offset","nativeSrc":"2910:6:7","nodeType":"YulIdentifier","src":"2910:6:7"}],"functionName":{"name":"mload","nativeSrc":"2904:5:7","nodeType":"YulIdentifier","src":"2904:5:7"},"nativeSrc":"2904:13:7","nodeType":"YulFunctionCall","src":"2904:13:7"},"variables":[{"name":"length","nativeSrc":"2894:6:7","nodeType":"YulTypedName","src":"2894:6:7","type":""}]},{"nativeSrc":"2926:99:7","nodeType":"YulAssignment","src":"2926:99:7","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2998:6:7","nodeType":"YulIdentifier","src":"2998:6:7"},{"kind":"number","nativeSrc":"3006:4:7","nodeType":"YulLiteral","src":"3006:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2994:3:7","nodeType":"YulIdentifier","src":"2994:3:7"},"nativeSrc":"2994:17:7","nodeType":"YulFunctionCall","src":"2994:17:7"},{"name":"length","nativeSrc":"3013:6:7","nodeType":"YulIdentifier","src":"3013:6:7"},{"name":"end","nativeSrc":"3021:3:7","nodeType":"YulIdentifier","src":"3021:3:7"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2935:58:7","nodeType":"YulIdentifier","src":"2935:58:7"},"nativeSrc":"2935:90:7","nodeType":"YulFunctionCall","src":"2935:90:7"},"variableNames":[{"name":"array","nativeSrc":"2926:5:7","nodeType":"YulIdentifier","src":"2926:5:7"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"2676:355:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2727:6:7","nodeType":"YulTypedName","src":"2727:6:7","type":""},{"name":"end","nativeSrc":"2735:3:7","nodeType":"YulTypedName","src":"2735:3:7","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2743:5:7","nodeType":"YulTypedName","src":"2743:5:7","type":""}],"src":"2676:355:7"},{"body":{"nativeSrc":"3168:878:7","nodeType":"YulBlock","src":"3168:878:7","statements":[{"body":{"nativeSrc":"3214:83:7","nodeType":"YulBlock","src":"3214:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3216:77:7","nodeType":"YulIdentifier","src":"3216:77:7"},"nativeSrc":"3216:79:7","nodeType":"YulFunctionCall","src":"3216:79:7"},"nativeSrc":"3216:79:7","nodeType":"YulExpressionStatement","src":"3216:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3189:7:7","nodeType":"YulIdentifier","src":"3189:7:7"},{"name":"headStart","nativeSrc":"3198:9:7","nodeType":"YulIdentifier","src":"3198:9:7"}],"functionName":{"name":"sub","nativeSrc":"3185:3:7","nodeType":"YulIdentifier","src":"3185:3:7"},"nativeSrc":"3185:23:7","nodeType":"YulFunctionCall","src":"3185:23:7"},{"kind":"number","nativeSrc":"3210:2:7","nodeType":"YulLiteral","src":"3210:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3181:3:7","nodeType":"YulIdentifier","src":"3181:3:7"},"nativeSrc":"3181:32:7","nodeType":"YulFunctionCall","src":"3181:32:7"},"nativeSrc":"3178:119:7","nodeType":"YulIf","src":"3178:119:7"},{"nativeSrc":"3307:128:7","nodeType":"YulBlock","src":"3307:128:7","statements":[{"nativeSrc":"3322:15:7","nodeType":"YulVariableDeclaration","src":"3322:15:7","value":{"kind":"number","nativeSrc":"3336:1:7","nodeType":"YulLiteral","src":"3336:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3326:6:7","nodeType":"YulTypedName","src":"3326:6:7","type":""}]},{"nativeSrc":"3351:74:7","nodeType":"YulAssignment","src":"3351:74:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3397:9:7","nodeType":"YulIdentifier","src":"3397:9:7"},{"name":"offset","nativeSrc":"3408:6:7","nodeType":"YulIdentifier","src":"3408:6:7"}],"functionName":{"name":"add","nativeSrc":"3393:3:7","nodeType":"YulIdentifier","src":"3393:3:7"},"nativeSrc":"3393:22:7","nodeType":"YulFunctionCall","src":"3393:22:7"},{"name":"dataEnd","nativeSrc":"3417:7:7","nodeType":"YulIdentifier","src":"3417:7:7"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"3361:31:7","nodeType":"YulIdentifier","src":"3361:31:7"},"nativeSrc":"3361:64:7","nodeType":"YulFunctionCall","src":"3361:64:7"},"variableNames":[{"name":"value0","nativeSrc":"3351:6:7","nodeType":"YulIdentifier","src":"3351:6:7"}]}]},{"nativeSrc":"3445:292:7","nodeType":"YulBlock","src":"3445:292:7","statements":[{"nativeSrc":"3460:39:7","nodeType":"YulVariableDeclaration","src":"3460:39:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3484:9:7","nodeType":"YulIdentifier","src":"3484:9:7"},{"kind":"number","nativeSrc":"3495:2:7","nodeType":"YulLiteral","src":"3495:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3480:3:7","nodeType":"YulIdentifier","src":"3480:3:7"},"nativeSrc":"3480:18:7","nodeType":"YulFunctionCall","src":"3480:18:7"}],"functionName":{"name":"mload","nativeSrc":"3474:5:7","nodeType":"YulIdentifier","src":"3474:5:7"},"nativeSrc":"3474:25:7","nodeType":"YulFunctionCall","src":"3474:25:7"},"variables":[{"name":"offset","nativeSrc":"3464:6:7","nodeType":"YulTypedName","src":"3464:6:7","type":""}]},{"body":{"nativeSrc":"3546:83:7","nodeType":"YulBlock","src":"3546:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3548:77:7","nodeType":"YulIdentifier","src":"3548:77:7"},"nativeSrc":"3548:79:7","nodeType":"YulFunctionCall","src":"3548:79:7"},"nativeSrc":"3548:79:7","nodeType":"YulExpressionStatement","src":"3548:79:7"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3518:6:7","nodeType":"YulIdentifier","src":"3518:6:7"},{"kind":"number","nativeSrc":"3526:18:7","nodeType":"YulLiteral","src":"3526:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3515:2:7","nodeType":"YulIdentifier","src":"3515:2:7"},"nativeSrc":"3515:30:7","nodeType":"YulFunctionCall","src":"3515:30:7"},"nativeSrc":"3512:117:7","nodeType":"YulIf","src":"3512:117:7"},{"nativeSrc":"3643:84:7","nodeType":"YulAssignment","src":"3643:84:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3699:9:7","nodeType":"YulIdentifier","src":"3699:9:7"},{"name":"offset","nativeSrc":"3710:6:7","nodeType":"YulIdentifier","src":"3710:6:7"}],"functionName":{"name":"add","nativeSrc":"3695:3:7","nodeType":"YulIdentifier","src":"3695:3:7"},"nativeSrc":"3695:22:7","nodeType":"YulFunctionCall","src":"3695:22:7"},{"name":"dataEnd","nativeSrc":"3719:7:7","nodeType":"YulIdentifier","src":"3719:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3653:41:7","nodeType":"YulIdentifier","src":"3653:41:7"},"nativeSrc":"3653:74:7","nodeType":"YulFunctionCall","src":"3653:74:7"},"variableNames":[{"name":"value1","nativeSrc":"3643:6:7","nodeType":"YulIdentifier","src":"3643:6:7"}]}]},{"nativeSrc":"3747:292:7","nodeType":"YulBlock","src":"3747:292:7","statements":[{"nativeSrc":"3762:39:7","nodeType":"YulVariableDeclaration","src":"3762:39:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3786:9:7","nodeType":"YulIdentifier","src":"3786:9:7"},{"kind":"number","nativeSrc":"3797:2:7","nodeType":"YulLiteral","src":"3797:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3782:3:7","nodeType":"YulIdentifier","src":"3782:3:7"},"nativeSrc":"3782:18:7","nodeType":"YulFunctionCall","src":"3782:18:7"}],"functionName":{"name":"mload","nativeSrc":"3776:5:7","nodeType":"YulIdentifier","src":"3776:5:7"},"nativeSrc":"3776:25:7","nodeType":"YulFunctionCall","src":"3776:25:7"},"variables":[{"name":"offset","nativeSrc":"3766:6:7","nodeType":"YulTypedName","src":"3766:6:7","type":""}]},{"body":{"nativeSrc":"3848:83:7","nodeType":"YulBlock","src":"3848:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3850:77:7","nodeType":"YulIdentifier","src":"3850:77:7"},"nativeSrc":"3850:79:7","nodeType":"YulFunctionCall","src":"3850:79:7"},"nativeSrc":"3850:79:7","nodeType":"YulExpressionStatement","src":"3850:79:7"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3820:6:7","nodeType":"YulIdentifier","src":"3820:6:7"},{"kind":"number","nativeSrc":"3828:18:7","nodeType":"YulLiteral","src":"3828:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3817:2:7","nodeType":"YulIdentifier","src":"3817:2:7"},"nativeSrc":"3817:30:7","nodeType":"YulFunctionCall","src":"3817:30:7"},"nativeSrc":"3814:117:7","nodeType":"YulIf","src":"3814:117:7"},{"nativeSrc":"3945:84:7","nodeType":"YulAssignment","src":"3945:84:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4001:9:7","nodeType":"YulIdentifier","src":"4001:9:7"},{"name":"offset","nativeSrc":"4012:6:7","nodeType":"YulIdentifier","src":"4012:6:7"}],"functionName":{"name":"add","nativeSrc":"3997:3:7","nodeType":"YulIdentifier","src":"3997:3:7"},"nativeSrc":"3997:22:7","nodeType":"YulFunctionCall","src":"3997:22:7"},{"name":"dataEnd","nativeSrc":"4021:7:7","nodeType":"YulIdentifier","src":"4021:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3955:41:7","nodeType":"YulIdentifier","src":"3955:41:7"},"nativeSrc":"3955:74:7","nodeType":"YulFunctionCall","src":"3955:74:7"},"variableNames":[{"name":"value2","nativeSrc":"3945:6:7","nodeType":"YulIdentifier","src":"3945:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory","nativeSrc":"3037:1009:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3122:9:7","nodeType":"YulTypedName","src":"3122:9:7","type":""},{"name":"dataEnd","nativeSrc":"3133:7:7","nodeType":"YulTypedName","src":"3133:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3145:6:7","nodeType":"YulTypedName","src":"3145:6:7","type":""},{"name":"value1","nativeSrc":"3153:6:7","nodeType":"YulTypedName","src":"3153:6:7","type":""},{"name":"value2","nativeSrc":"3161:6:7","nodeType":"YulTypedName","src":"3161:6:7","type":""}],"src":"3037:1009:7"},{"body":{"nativeSrc":"4080:152:7","nodeType":"YulBlock","src":"4080:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4097:1:7","nodeType":"YulLiteral","src":"4097:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"4100:77:7","nodeType":"YulLiteral","src":"4100:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4090:6:7","nodeType":"YulIdentifier","src":"4090:6:7"},"nativeSrc":"4090:88:7","nodeType":"YulFunctionCall","src":"4090:88:7"},"nativeSrc":"4090:88:7","nodeType":"YulExpressionStatement","src":"4090:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4194:1:7","nodeType":"YulLiteral","src":"4194:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"4197:4:7","nodeType":"YulLiteral","src":"4197:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"4187:6:7","nodeType":"YulIdentifier","src":"4187:6:7"},"nativeSrc":"4187:15:7","nodeType":"YulFunctionCall","src":"4187:15:7"},"nativeSrc":"4187:15:7","nodeType":"YulExpressionStatement","src":"4187:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4218:1:7","nodeType":"YulLiteral","src":"4218:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"4221:4:7","nodeType":"YulLiteral","src":"4221:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4211:6:7","nodeType":"YulIdentifier","src":"4211:6:7"},"nativeSrc":"4211:15:7","nodeType":"YulFunctionCall","src":"4211:15:7"},"nativeSrc":"4211:15:7","nodeType":"YulExpressionStatement","src":"4211:15:7"}]},"name":"panic_error_0x11","nativeSrc":"4052:180:7","nodeType":"YulFunctionDefinition","src":"4052:180:7"},{"body":{"nativeSrc":"4289:51:7","nodeType":"YulBlock","src":"4289:51:7","statements":[{"nativeSrc":"4299:34:7","nodeType":"YulAssignment","src":"4299:34:7","value":{"arguments":[{"kind":"number","nativeSrc":"4324:1:7","nodeType":"YulLiteral","src":"4324:1:7","type":"","value":"1"},{"name":"value","nativeSrc":"4327:5:7","nodeType":"YulIdentifier","src":"4327:5:7"}],"functionName":{"name":"shr","nativeSrc":"4320:3:7","nodeType":"YulIdentifier","src":"4320:3:7"},"nativeSrc":"4320:13:7","nodeType":"YulFunctionCall","src":"4320:13:7"},"variableNames":[{"name":"newValue","nativeSrc":"4299:8:7","nodeType":"YulIdentifier","src":"4299:8:7"}]}]},"name":"shift_right_1_unsigned","nativeSrc":"4238:102:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4270:5:7","nodeType":"YulTypedName","src":"4270:5:7","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4280:8:7","nodeType":"YulTypedName","src":"4280:8:7","type":""}],"src":"4238:102:7"},{"body":{"nativeSrc":"4419:775:7","nodeType":"YulBlock","src":"4419:775:7","statements":[{"nativeSrc":"4429:15:7","nodeType":"YulAssignment","src":"4429:15:7","value":{"name":"_power","nativeSrc":"4438:6:7","nodeType":"YulIdentifier","src":"4438:6:7"},"variableNames":[{"name":"power","nativeSrc":"4429:5:7","nodeType":"YulIdentifier","src":"4429:5:7"}]},{"nativeSrc":"4453:14:7","nodeType":"YulAssignment","src":"4453:14:7","value":{"name":"_base","nativeSrc":"4462:5:7","nodeType":"YulIdentifier","src":"4462:5:7"},"variableNames":[{"name":"base","nativeSrc":"4453:4:7","nodeType":"YulIdentifier","src":"4453:4:7"}]},{"body":{"nativeSrc":"4511:677:7","nodeType":"YulBlock","src":"4511:677:7","statements":[{"body":{"nativeSrc":"4599:22:7","nodeType":"YulBlock","src":"4599:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4601:16:7","nodeType":"YulIdentifier","src":"4601:16:7"},"nativeSrc":"4601:18:7","nodeType":"YulFunctionCall","src":"4601:18:7"},"nativeSrc":"4601:18:7","nodeType":"YulExpressionStatement","src":"4601:18:7"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"4577:4:7","nodeType":"YulIdentifier","src":"4577:4:7"},{"arguments":[{"name":"max","nativeSrc":"4587:3:7","nodeType":"YulIdentifier","src":"4587:3:7"},{"name":"base","nativeSrc":"4592:4:7","nodeType":"YulIdentifier","src":"4592:4:7"}],"functionName":{"name":"div","nativeSrc":"4583:3:7","nodeType":"YulIdentifier","src":"4583:3:7"},"nativeSrc":"4583:14:7","nodeType":"YulFunctionCall","src":"4583:14:7"}],"functionName":{"name":"gt","nativeSrc":"4574:2:7","nodeType":"YulIdentifier","src":"4574:2:7"},"nativeSrc":"4574:24:7","nodeType":"YulFunctionCall","src":"4574:24:7"},"nativeSrc":"4571:50:7","nodeType":"YulIf","src":"4571:50:7"},{"body":{"nativeSrc":"4666:419:7","nodeType":"YulBlock","src":"4666:419:7","statements":[{"nativeSrc":"5046:25:7","nodeType":"YulAssignment","src":"5046:25:7","value":{"arguments":[{"name":"power","nativeSrc":"5059:5:7","nodeType":"YulIdentifier","src":"5059:5:7"},{"name":"base","nativeSrc":"5066:4:7","nodeType":"YulIdentifier","src":"5066:4:7"}],"functionName":{"name":"mul","nativeSrc":"5055:3:7","nodeType":"YulIdentifier","src":"5055:3:7"},"nativeSrc":"5055:16:7","nodeType":"YulFunctionCall","src":"5055:16:7"},"variableNames":[{"name":"power","nativeSrc":"5046:5:7","nodeType":"YulIdentifier","src":"5046:5:7"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"4641:8:7","nodeType":"YulIdentifier","src":"4641:8:7"},{"kind":"number","nativeSrc":"4651:1:7","nodeType":"YulLiteral","src":"4651:1:7","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4637:3:7","nodeType":"YulIdentifier","src":"4637:3:7"},"nativeSrc":"4637:16:7","nodeType":"YulFunctionCall","src":"4637:16:7"},"nativeSrc":"4634:451:7","nodeType":"YulIf","src":"4634:451:7"},{"nativeSrc":"5098:23:7","nodeType":"YulAssignment","src":"5098:23:7","value":{"arguments":[{"name":"base","nativeSrc":"5110:4:7","nodeType":"YulIdentifier","src":"5110:4:7"},{"name":"base","nativeSrc":"5116:4:7","nodeType":"YulIdentifier","src":"5116:4:7"}],"functionName":{"name":"mul","nativeSrc":"5106:3:7","nodeType":"YulIdentifier","src":"5106:3:7"},"nativeSrc":"5106:15:7","nodeType":"YulFunctionCall","src":"5106:15:7"},"variableNames":[{"name":"base","nativeSrc":"5098:4:7","nodeType":"YulIdentifier","src":"5098:4:7"}]},{"nativeSrc":"5134:44:7","nodeType":"YulAssignment","src":"5134:44:7","value":{"arguments":[{"name":"exponent","nativeSrc":"5169:8:7","nodeType":"YulIdentifier","src":"5169:8:7"}],"functionName":{"name":"shift_right_1_unsigned","nativeSrc":"5146:22:7","nodeType":"YulIdentifier","src":"5146:22:7"},"nativeSrc":"5146:32:7","nodeType":"YulFunctionCall","src":"5146:32:7"},"variableNames":[{"name":"exponent","nativeSrc":"5134:8:7","nodeType":"YulIdentifier","src":"5134:8:7"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"4487:8:7","nodeType":"YulIdentifier","src":"4487:8:7"},{"kind":"number","nativeSrc":"4497:1:7","nodeType":"YulLiteral","src":"4497:1:7","type":"","value":"1"}],"functionName":{"name":"gt","nativeSrc":"4484:2:7","nodeType":"YulIdentifier","src":"4484:2:7"},"nativeSrc":"4484:15:7","nodeType":"YulFunctionCall","src":"4484:15:7"},"nativeSrc":"4476:712:7","nodeType":"YulForLoop","post":{"nativeSrc":"4500:2:7","nodeType":"YulBlock","src":"4500:2:7","statements":[]},"pre":{"nativeSrc":"4480:3:7","nodeType":"YulBlock","src":"4480:3:7","statements":[]},"src":"4476:712:7"}]},"name":"checked_exp_helper","nativeSrc":"4346:848:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nativeSrc":"4374:6:7","nodeType":"YulTypedName","src":"4374:6:7","type":""},{"name":"_base","nativeSrc":"4382:5:7","nodeType":"YulTypedName","src":"4382:5:7","type":""},{"name":"exponent","nativeSrc":"4389:8:7","nodeType":"YulTypedName","src":"4389:8:7","type":""},{"name":"max","nativeSrc":"4399:3:7","nodeType":"YulTypedName","src":"4399:3:7","type":""}],"returnVariables":[{"name":"power","nativeSrc":"4407:5:7","nodeType":"YulTypedName","src":"4407:5:7","type":""},{"name":"base","nativeSrc":"4414:4:7","nodeType":"YulTypedName","src":"4414:4:7","type":""}],"src":"4346:848:7"},{"body":{"nativeSrc":"5260:1013:7","nodeType":"YulBlock","src":"5260:1013:7","statements":[{"body":{"nativeSrc":"5455:20:7","nodeType":"YulBlock","src":"5455:20:7","statements":[{"nativeSrc":"5457:10:7","nodeType":"YulAssignment","src":"5457:10:7","value":{"kind":"number","nativeSrc":"5466:1:7","nodeType":"YulLiteral","src":"5466:1:7","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"5457:5:7","nodeType":"YulIdentifier","src":"5457:5:7"}]},{"nativeSrc":"5468:5:7","nodeType":"YulLeave","src":"5468:5:7"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"5445:8:7","nodeType":"YulIdentifier","src":"5445:8:7"}],"functionName":{"name":"iszero","nativeSrc":"5438:6:7","nodeType":"YulIdentifier","src":"5438:6:7"},"nativeSrc":"5438:16:7","nodeType":"YulFunctionCall","src":"5438:16:7"},"nativeSrc":"5435:40:7","nodeType":"YulIf","src":"5435:40:7"},{"body":{"nativeSrc":"5500:20:7","nodeType":"YulBlock","src":"5500:20:7","statements":[{"nativeSrc":"5502:10:7","nodeType":"YulAssignment","src":"5502:10:7","value":{"kind":"number","nativeSrc":"5511:1:7","nodeType":"YulLiteral","src":"5511:1:7","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"5502:5:7","nodeType":"YulIdentifier","src":"5502:5:7"}]},{"nativeSrc":"5513:5:7","nodeType":"YulLeave","src":"5513:5:7"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"5494:4:7","nodeType":"YulIdentifier","src":"5494:4:7"}],"functionName":{"name":"iszero","nativeSrc":"5487:6:7","nodeType":"YulIdentifier","src":"5487:6:7"},"nativeSrc":"5487:12:7","nodeType":"YulFunctionCall","src":"5487:12:7"},"nativeSrc":"5484:36:7","nodeType":"YulIf","src":"5484:36:7"},{"cases":[{"body":{"nativeSrc":"5630:20:7","nodeType":"YulBlock","src":"5630:20:7","statements":[{"nativeSrc":"5632:10:7","nodeType":"YulAssignment","src":"5632:10:7","value":{"kind":"number","nativeSrc":"5641:1:7","nodeType":"YulLiteral","src":"5641:1:7","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"5632:5:7","nodeType":"YulIdentifier","src":"5632:5:7"}]},{"nativeSrc":"5643:5:7","nodeType":"YulLeave","src":"5643:5:7"}]},"nativeSrc":"5623:27:7","nodeType":"YulCase","src":"5623:27:7","value":{"kind":"number","nativeSrc":"5628:1:7","nodeType":"YulLiteral","src":"5628:1:7","type":"","value":"1"}},{"body":{"nativeSrc":"5674:176:7","nodeType":"YulBlock","src":"5674:176:7","statements":[{"body":{"nativeSrc":"5709:22:7","nodeType":"YulBlock","src":"5709:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5711:16:7","nodeType":"YulIdentifier","src":"5711:16:7"},"nativeSrc":"5711:18:7","nodeType":"YulFunctionCall","src":"5711:18:7"},"nativeSrc":"5711:18:7","nodeType":"YulExpressionStatement","src":"5711:18:7"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"5694:8:7","nodeType":"YulIdentifier","src":"5694:8:7"},{"kind":"number","nativeSrc":"5704:3:7","nodeType":"YulLiteral","src":"5704:3:7","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"5691:2:7","nodeType":"YulIdentifier","src":"5691:2:7"},"nativeSrc":"5691:17:7","nodeType":"YulFunctionCall","src":"5691:17:7"},"nativeSrc":"5688:43:7","nodeType":"YulIf","src":"5688:43:7"},{"nativeSrc":"5744:25:7","nodeType":"YulAssignment","src":"5744:25:7","value":{"arguments":[{"kind":"number","nativeSrc":"5757:1:7","nodeType":"YulLiteral","src":"5757:1:7","type":"","value":"2"},{"name":"exponent","nativeSrc":"5760:8:7","nodeType":"YulIdentifier","src":"5760:8:7"}],"functionName":{"name":"exp","nativeSrc":"5753:3:7","nodeType":"YulIdentifier","src":"5753:3:7"},"nativeSrc":"5753:16:7","nodeType":"YulFunctionCall","src":"5753:16:7"},"variableNames":[{"name":"power","nativeSrc":"5744:5:7","nodeType":"YulIdentifier","src":"5744:5:7"}]},{"body":{"nativeSrc":"5800:22:7","nodeType":"YulBlock","src":"5800:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5802:16:7","nodeType":"YulIdentifier","src":"5802:16:7"},"nativeSrc":"5802:18:7","nodeType":"YulFunctionCall","src":"5802:18:7"},"nativeSrc":"5802:18:7","nodeType":"YulExpressionStatement","src":"5802:18:7"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"5788:5:7","nodeType":"YulIdentifier","src":"5788:5:7"},{"name":"max","nativeSrc":"5795:3:7","nodeType":"YulIdentifier","src":"5795:3:7"}],"functionName":{"name":"gt","nativeSrc":"5785:2:7","nodeType":"YulIdentifier","src":"5785:2:7"},"nativeSrc":"5785:14:7","nodeType":"YulFunctionCall","src":"5785:14:7"},"nativeSrc":"5782:40:7","nodeType":"YulIf","src":"5782:40:7"},{"nativeSrc":"5835:5:7","nodeType":"YulLeave","src":"5835:5:7"}]},"nativeSrc":"5659:191:7","nodeType":"YulCase","src":"5659:191:7","value":{"kind":"number","nativeSrc":"5664:1:7","nodeType":"YulLiteral","src":"5664:1:7","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"5580:4:7","nodeType":"YulIdentifier","src":"5580:4:7"},"nativeSrc":"5573:277:7","nodeType":"YulSwitch","src":"5573:277:7"},{"body":{"nativeSrc":"5982:123:7","nodeType":"YulBlock","src":"5982:123:7","statements":[{"nativeSrc":"5996:28:7","nodeType":"YulAssignment","src":"5996:28:7","value":{"arguments":[{"name":"base","nativeSrc":"6009:4:7","nodeType":"YulIdentifier","src":"6009:4:7"},{"name":"exponent","nativeSrc":"6015:8:7","nodeType":"YulIdentifier","src":"6015:8:7"}],"functionName":{"name":"exp","nativeSrc":"6005:3:7","nodeType":"YulIdentifier","src":"6005:3:7"},"nativeSrc":"6005:19:7","nodeType":"YulFunctionCall","src":"6005:19:7"},"variableNames":[{"name":"power","nativeSrc":"5996:5:7","nodeType":"YulIdentifier","src":"5996:5:7"}]},{"body":{"nativeSrc":"6055:22:7","nodeType":"YulBlock","src":"6055:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6057:16:7","nodeType":"YulIdentifier","src":"6057:16:7"},"nativeSrc":"6057:18:7","nodeType":"YulFunctionCall","src":"6057:18:7"},"nativeSrc":"6057:18:7","nodeType":"YulExpressionStatement","src":"6057:18:7"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"6043:5:7","nodeType":"YulIdentifier","src":"6043:5:7"},{"name":"max","nativeSrc":"6050:3:7","nodeType":"YulIdentifier","src":"6050:3:7"}],"functionName":{"name":"gt","nativeSrc":"6040:2:7","nodeType":"YulIdentifier","src":"6040:2:7"},"nativeSrc":"6040:14:7","nodeType":"YulFunctionCall","src":"6040:14:7"},"nativeSrc":"6037:40:7","nodeType":"YulIf","src":"6037:40:7"},{"nativeSrc":"6090:5:7","nodeType":"YulLeave","src":"6090:5:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"5885:4:7","nodeType":"YulIdentifier","src":"5885:4:7"},{"kind":"number","nativeSrc":"5891:2:7","nodeType":"YulLiteral","src":"5891:2:7","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"5882:2:7","nodeType":"YulIdentifier","src":"5882:2:7"},"nativeSrc":"5882:12:7","nodeType":"YulFunctionCall","src":"5882:12:7"},{"arguments":[{"name":"exponent","nativeSrc":"5899:8:7","nodeType":"YulIdentifier","src":"5899:8:7"},{"kind":"number","nativeSrc":"5909:2:7","nodeType":"YulLiteral","src":"5909:2:7","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"5896:2:7","nodeType":"YulIdentifier","src":"5896:2:7"},"nativeSrc":"5896:16:7","nodeType":"YulFunctionCall","src":"5896:16:7"}],"functionName":{"name":"and","nativeSrc":"5878:3:7","nodeType":"YulIdentifier","src":"5878:3:7"},"nativeSrc":"5878:35:7","nodeType":"YulFunctionCall","src":"5878:35:7"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"5934:4:7","nodeType":"YulIdentifier","src":"5934:4:7"},{"kind":"number","nativeSrc":"5940:3:7","nodeType":"YulLiteral","src":"5940:3:7","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"5931:2:7","nodeType":"YulIdentifier","src":"5931:2:7"},"nativeSrc":"5931:13:7","nodeType":"YulFunctionCall","src":"5931:13:7"},{"arguments":[{"name":"exponent","nativeSrc":"5949:8:7","nodeType":"YulIdentifier","src":"5949:8:7"},{"kind":"number","nativeSrc":"5959:2:7","nodeType":"YulLiteral","src":"5959:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"5946:2:7","nodeType":"YulIdentifier","src":"5946:2:7"},"nativeSrc":"5946:16:7","nodeType":"YulFunctionCall","src":"5946:16:7"}],"functionName":{"name":"and","nativeSrc":"5927:3:7","nodeType":"YulIdentifier","src":"5927:3:7"},"nativeSrc":"5927:36:7","nodeType":"YulFunctionCall","src":"5927:36:7"}],"functionName":{"name":"or","nativeSrc":"5862:2:7","nodeType":"YulIdentifier","src":"5862:2:7"},"nativeSrc":"5862:111:7","nodeType":"YulFunctionCall","src":"5862:111:7"},"nativeSrc":"5859:246:7","nodeType":"YulIf","src":"5859:246:7"},{"nativeSrc":"6115:57:7","nodeType":"YulAssignment","src":"6115:57:7","value":{"arguments":[{"kind":"number","nativeSrc":"6149:1:7","nodeType":"YulLiteral","src":"6149:1:7","type":"","value":"1"},{"name":"base","nativeSrc":"6152:4:7","nodeType":"YulIdentifier","src":"6152:4:7"},{"name":"exponent","nativeSrc":"6158:8:7","nodeType":"YulIdentifier","src":"6158:8:7"},{"name":"max","nativeSrc":"6168:3:7","nodeType":"YulIdentifier","src":"6168:3:7"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"6130:18:7","nodeType":"YulIdentifier","src":"6130:18:7"},"nativeSrc":"6130:42:7","nodeType":"YulFunctionCall","src":"6130:42:7"},"variableNames":[{"name":"power","nativeSrc":"6115:5:7","nodeType":"YulIdentifier","src":"6115:5:7"},{"name":"base","nativeSrc":"6122:4:7","nodeType":"YulIdentifier","src":"6122:4:7"}]},{"body":{"nativeSrc":"6211:22:7","nodeType":"YulBlock","src":"6211:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6213:16:7","nodeType":"YulIdentifier","src":"6213:16:7"},"nativeSrc":"6213:18:7","nodeType":"YulFunctionCall","src":"6213:18:7"},"nativeSrc":"6213:18:7","nodeType":"YulExpressionStatement","src":"6213:18:7"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"6188:5:7","nodeType":"YulIdentifier","src":"6188:5:7"},{"arguments":[{"name":"max","nativeSrc":"6199:3:7","nodeType":"YulIdentifier","src":"6199:3:7"},{"name":"base","nativeSrc":"6204:4:7","nodeType":"YulIdentifier","src":"6204:4:7"}],"functionName":{"name":"div","nativeSrc":"6195:3:7","nodeType":"YulIdentifier","src":"6195:3:7"},"nativeSrc":"6195:14:7","nodeType":"YulFunctionCall","src":"6195:14:7"}],"functionName":{"name":"gt","nativeSrc":"6185:2:7","nodeType":"YulIdentifier","src":"6185:2:7"},"nativeSrc":"6185:25:7","nodeType":"YulFunctionCall","src":"6185:25:7"},"nativeSrc":"6182:51:7","nodeType":"YulIf","src":"6182:51:7"},{"nativeSrc":"6242:25:7","nodeType":"YulAssignment","src":"6242:25:7","value":{"arguments":[{"name":"power","nativeSrc":"6255:5:7","nodeType":"YulIdentifier","src":"6255:5:7"},{"name":"base","nativeSrc":"6262:4:7","nodeType":"YulIdentifier","src":"6262:4:7"}],"functionName":{"name":"mul","nativeSrc":"6251:3:7","nodeType":"YulIdentifier","src":"6251:3:7"},"nativeSrc":"6251:16:7","nodeType":"YulFunctionCall","src":"6251:16:7"},"variableNames":[{"name":"power","nativeSrc":"6242:5:7","nodeType":"YulIdentifier","src":"6242:5:7"}]}]},"name":"checked_exp_unsigned","nativeSrc":"5200:1073:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"5230:4:7","nodeType":"YulTypedName","src":"5230:4:7","type":""},{"name":"exponent","nativeSrc":"5236:8:7","nodeType":"YulTypedName","src":"5236:8:7","type":""},{"name":"max","nativeSrc":"5246:3:7","nodeType":"YulTypedName","src":"5246:3:7","type":""}],"returnVariables":[{"name":"power","nativeSrc":"5254:5:7","nodeType":"YulTypedName","src":"5254:5:7","type":""}],"src":"5200:1073:7"},{"body":{"nativeSrc":"6345:219:7","nodeType":"YulBlock","src":"6345:219:7","statements":[{"nativeSrc":"6355:31:7","nodeType":"YulAssignment","src":"6355:31:7","value":{"arguments":[{"name":"base","nativeSrc":"6381:4:7","nodeType":"YulIdentifier","src":"6381:4:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6363:17:7","nodeType":"YulIdentifier","src":"6363:17:7"},"nativeSrc":"6363:23:7","nodeType":"YulFunctionCall","src":"6363:23:7"},"variableNames":[{"name":"base","nativeSrc":"6355:4:7","nodeType":"YulIdentifier","src":"6355:4:7"}]},{"nativeSrc":"6395:39:7","nodeType":"YulAssignment","src":"6395:39:7","value":{"arguments":[{"name":"exponent","nativeSrc":"6425:8:7","nodeType":"YulIdentifier","src":"6425:8:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6407:17:7","nodeType":"YulIdentifier","src":"6407:17:7"},"nativeSrc":"6407:27:7","nodeType":"YulFunctionCall","src":"6407:27:7"},"variableNames":[{"name":"exponent","nativeSrc":"6395:8:7","nodeType":"YulIdentifier","src":"6395:8:7"}]},{"nativeSrc":"6444:113:7","nodeType":"YulAssignment","src":"6444:113:7","value":{"arguments":[{"name":"base","nativeSrc":"6474:4:7","nodeType":"YulIdentifier","src":"6474:4:7"},{"name":"exponent","nativeSrc":"6480:8:7","nodeType":"YulIdentifier","src":"6480:8:7"},{"kind":"number","nativeSrc":"6490:66:7","nodeType":"YulLiteral","src":"6490:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"6453:20:7","nodeType":"YulIdentifier","src":"6453:20:7"},"nativeSrc":"6453:104:7","nodeType":"YulFunctionCall","src":"6453:104:7"},"variableNames":[{"name":"power","nativeSrc":"6444:5:7","nodeType":"YulIdentifier","src":"6444:5:7"}]}]},"name":"checked_exp_t_uint256_t_uint256","nativeSrc":"6279:285:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"6320:4:7","nodeType":"YulTypedName","src":"6320:4:7","type":""},{"name":"exponent","nativeSrc":"6326:8:7","nodeType":"YulTypedName","src":"6326:8:7","type":""}],"returnVariables":[{"name":"power","nativeSrc":"6339:5:7","nodeType":"YulTypedName","src":"6339:5:7","type":""}],"src":"6279:285:7"},{"body":{"nativeSrc":"6618:362:7","nodeType":"YulBlock","src":"6618:362:7","statements":[{"nativeSrc":"6628:25:7","nodeType":"YulAssignment","src":"6628:25:7","value":{"arguments":[{"name":"x","nativeSrc":"6651:1:7","nodeType":"YulIdentifier","src":"6651:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6633:17:7","nodeType":"YulIdentifier","src":"6633:17:7"},"nativeSrc":"6633:20:7","nodeType":"YulFunctionCall","src":"6633:20:7"},"variableNames":[{"name":"x","nativeSrc":"6628:1:7","nodeType":"YulIdentifier","src":"6628:1:7"}]},{"nativeSrc":"6662:25:7","nodeType":"YulAssignment","src":"6662:25:7","value":{"arguments":[{"name":"y","nativeSrc":"6685:1:7","nodeType":"YulIdentifier","src":"6685:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6667:17:7","nodeType":"YulIdentifier","src":"6667:17:7"},"nativeSrc":"6667:20:7","nodeType":"YulFunctionCall","src":"6667:20:7"},"variableNames":[{"name":"y","nativeSrc":"6662:1:7","nodeType":"YulIdentifier","src":"6662:1:7"}]},{"nativeSrc":"6696:28:7","nodeType":"YulVariableDeclaration","src":"6696:28:7","value":{"arguments":[{"name":"x","nativeSrc":"6719:1:7","nodeType":"YulIdentifier","src":"6719:1:7"},{"name":"y","nativeSrc":"6722:1:7","nodeType":"YulIdentifier","src":"6722:1:7"}],"functionName":{"name":"mul","nativeSrc":"6715:3:7","nodeType":"YulIdentifier","src":"6715:3:7"},"nativeSrc":"6715:9:7","nodeType":"YulFunctionCall","src":"6715:9:7"},"variables":[{"name":"product_raw","nativeSrc":"6700:11:7","nodeType":"YulTypedName","src":"6700:11:7","type":""}]},{"nativeSrc":"6733:41:7","nodeType":"YulAssignment","src":"6733:41:7","value":{"arguments":[{"name":"product_raw","nativeSrc":"6762:11:7","nodeType":"YulIdentifier","src":"6762:11:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6744:17:7","nodeType":"YulIdentifier","src":"6744:17:7"},"nativeSrc":"6744:30:7","nodeType":"YulFunctionCall","src":"6744:30:7"},"variableNames":[{"name":"product","nativeSrc":"6733:7:7","nodeType":"YulIdentifier","src":"6733:7:7"}]},{"body":{"nativeSrc":"6951:22:7","nodeType":"YulBlock","src":"6951:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6953:16:7","nodeType":"YulIdentifier","src":"6953:16:7"},"nativeSrc":"6953:18:7","nodeType":"YulFunctionCall","src":"6953:18:7"},"nativeSrc":"6953:18:7","nodeType":"YulExpressionStatement","src":"6953:18:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"6884:1:7","nodeType":"YulIdentifier","src":"6884:1:7"}],"functionName":{"name":"iszero","nativeSrc":"6877:6:7","nodeType":"YulIdentifier","src":"6877:6:7"},"nativeSrc":"6877:9:7","nodeType":"YulFunctionCall","src":"6877:9:7"},{"arguments":[{"name":"y","nativeSrc":"6907:1:7","nodeType":"YulIdentifier","src":"6907:1:7"},{"arguments":[{"name":"product","nativeSrc":"6914:7:7","nodeType":"YulIdentifier","src":"6914:7:7"},{"name":"x","nativeSrc":"6923:1:7","nodeType":"YulIdentifier","src":"6923:1:7"}],"functionName":{"name":"div","nativeSrc":"6910:3:7","nodeType":"YulIdentifier","src":"6910:3:7"},"nativeSrc":"6910:15:7","nodeType":"YulFunctionCall","src":"6910:15:7"}],"functionName":{"name":"eq","nativeSrc":"6904:2:7","nodeType":"YulIdentifier","src":"6904:2:7"},"nativeSrc":"6904:22:7","nodeType":"YulFunctionCall","src":"6904:22:7"}],"functionName":{"name":"or","nativeSrc":"6857:2:7","nodeType":"YulIdentifier","src":"6857:2:7"},"nativeSrc":"6857:83:7","nodeType":"YulFunctionCall","src":"6857:83:7"}],"functionName":{"name":"iszero","nativeSrc":"6837:6:7","nodeType":"YulIdentifier","src":"6837:6:7"},"nativeSrc":"6837:113:7","nodeType":"YulFunctionCall","src":"6837:113:7"},"nativeSrc":"6834:139:7","nodeType":"YulIf","src":"6834:139:7"}]},"name":"checked_mul_t_uint256","nativeSrc":"6570:410:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6601:1:7","nodeType":"YulTypedName","src":"6601:1:7","type":""},{"name":"y","nativeSrc":"6604:1:7","nodeType":"YulTypedName","src":"6604:1:7","type":""}],"returnVariables":[{"name":"product","nativeSrc":"6610:7:7","nodeType":"YulTypedName","src":"6610:7:7","type":""}],"src":"6570:410:7"},{"body":{"nativeSrc":"7045:40:7","nodeType":"YulBlock","src":"7045:40:7","statements":[{"nativeSrc":"7056:22:7","nodeType":"YulAssignment","src":"7056:22:7","value":{"arguments":[{"name":"value","nativeSrc":"7072:5:7","nodeType":"YulIdentifier","src":"7072:5:7"}],"functionName":{"name":"mload","nativeSrc":"7066:5:7","nodeType":"YulIdentifier","src":"7066:5:7"},"nativeSrc":"7066:12:7","nodeType":"YulFunctionCall","src":"7066:12:7"},"variableNames":[{"name":"length","nativeSrc":"7056:6:7","nodeType":"YulIdentifier","src":"7056:6:7"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"6986:99:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7028:5:7","nodeType":"YulTypedName","src":"7028:5:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7038:6:7","nodeType":"YulTypedName","src":"7038:6:7","type":""}],"src":"6986:99:7"},{"body":{"nativeSrc":"7119:152:7","nodeType":"YulBlock","src":"7119:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7136:1:7","nodeType":"YulLiteral","src":"7136:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7139:77:7","nodeType":"YulLiteral","src":"7139:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7129:6:7","nodeType":"YulIdentifier","src":"7129:6:7"},"nativeSrc":"7129:88:7","nodeType":"YulFunctionCall","src":"7129:88:7"},"nativeSrc":"7129:88:7","nodeType":"YulExpressionStatement","src":"7129:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7233:1:7","nodeType":"YulLiteral","src":"7233:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"7236:4:7","nodeType":"YulLiteral","src":"7236:4:7","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"7226:6:7","nodeType":"YulIdentifier","src":"7226:6:7"},"nativeSrc":"7226:15:7","nodeType":"YulFunctionCall","src":"7226:15:7"},"nativeSrc":"7226:15:7","nodeType":"YulExpressionStatement","src":"7226:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7257:1:7","nodeType":"YulLiteral","src":"7257:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7260:4:7","nodeType":"YulLiteral","src":"7260:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7250:6:7","nodeType":"YulIdentifier","src":"7250:6:7"},"nativeSrc":"7250:15:7","nodeType":"YulFunctionCall","src":"7250:15:7"},"nativeSrc":"7250:15:7","nodeType":"YulExpressionStatement","src":"7250:15:7"}]},"name":"panic_error_0x22","nativeSrc":"7091:180:7","nodeType":"YulFunctionDefinition","src":"7091:180:7"},{"body":{"nativeSrc":"7328:269:7","nodeType":"YulBlock","src":"7328:269:7","statements":[{"nativeSrc":"7338:22:7","nodeType":"YulAssignment","src":"7338:22:7","value":{"arguments":[{"name":"data","nativeSrc":"7352:4:7","nodeType":"YulIdentifier","src":"7352:4:7"},{"kind":"number","nativeSrc":"7358:1:7","nodeType":"YulLiteral","src":"7358:1:7","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"7348:3:7","nodeType":"YulIdentifier","src":"7348:3:7"},"nativeSrc":"7348:12:7","nodeType":"YulFunctionCall","src":"7348:12:7"},"variableNames":[{"name":"length","nativeSrc":"7338:6:7","nodeType":"YulIdentifier","src":"7338:6:7"}]},{"nativeSrc":"7369:38:7","nodeType":"YulVariableDeclaration","src":"7369:38:7","value":{"arguments":[{"name":"data","nativeSrc":"7399:4:7","nodeType":"YulIdentifier","src":"7399:4:7"},{"kind":"number","nativeSrc":"7405:1:7","nodeType":"YulLiteral","src":"7405:1:7","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"7395:3:7","nodeType":"YulIdentifier","src":"7395:3:7"},"nativeSrc":"7395:12:7","nodeType":"YulFunctionCall","src":"7395:12:7"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"7373:18:7","nodeType":"YulTypedName","src":"7373:18:7","type":""}]},{"body":{"nativeSrc":"7446:51:7","nodeType":"YulBlock","src":"7446:51:7","statements":[{"nativeSrc":"7460:27:7","nodeType":"YulAssignment","src":"7460:27:7","value":{"arguments":[{"name":"length","nativeSrc":"7474:6:7","nodeType":"YulIdentifier","src":"7474:6:7"},{"kind":"number","nativeSrc":"7482:4:7","nodeType":"YulLiteral","src":"7482:4:7","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"7470:3:7","nodeType":"YulIdentifier","src":"7470:3:7"},"nativeSrc":"7470:17:7","nodeType":"YulFunctionCall","src":"7470:17:7"},"variableNames":[{"name":"length","nativeSrc":"7460:6:7","nodeType":"YulIdentifier","src":"7460:6:7"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"7426:18:7","nodeType":"YulIdentifier","src":"7426:18:7"}],"functionName":{"name":"iszero","nativeSrc":"7419:6:7","nodeType":"YulIdentifier","src":"7419:6:7"},"nativeSrc":"7419:26:7","nodeType":"YulFunctionCall","src":"7419:26:7"},"nativeSrc":"7416:81:7","nodeType":"YulIf","src":"7416:81:7"},{"body":{"nativeSrc":"7549:42:7","nodeType":"YulBlock","src":"7549:42:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"7563:16:7","nodeType":"YulIdentifier","src":"7563:16:7"},"nativeSrc":"7563:18:7","nodeType":"YulFunctionCall","src":"7563:18:7"},"nativeSrc":"7563:18:7","nodeType":"YulExpressionStatement","src":"7563:18:7"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"7513:18:7","nodeType":"YulIdentifier","src":"7513:18:7"},{"arguments":[{"name":"length","nativeSrc":"7536:6:7","nodeType":"YulIdentifier","src":"7536:6:7"},{"kind":"number","nativeSrc":"7544:2:7","nodeType":"YulLiteral","src":"7544:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7533:2:7","nodeType":"YulIdentifier","src":"7533:2:7"},"nativeSrc":"7533:14:7","nodeType":"YulFunctionCall","src":"7533:14:7"}],"functionName":{"name":"eq","nativeSrc":"7510:2:7","nodeType":"YulIdentifier","src":"7510:2:7"},"nativeSrc":"7510:38:7","nodeType":"YulFunctionCall","src":"7510:38:7"},"nativeSrc":"7507:84:7","nodeType":"YulIf","src":"7507:84:7"}]},"name":"extract_byte_array_length","nativeSrc":"7277:320:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7312:4:7","nodeType":"YulTypedName","src":"7312:4:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7321:6:7","nodeType":"YulTypedName","src":"7321:6:7","type":""}],"src":"7277:320:7"},{"body":{"nativeSrc":"7657:87:7","nodeType":"YulBlock","src":"7657:87:7","statements":[{"nativeSrc":"7667:11:7","nodeType":"YulAssignment","src":"7667:11:7","value":{"name":"ptr","nativeSrc":"7675:3:7","nodeType":"YulIdentifier","src":"7675:3:7"},"variableNames":[{"name":"data","nativeSrc":"7667:4:7","nodeType":"YulIdentifier","src":"7667:4:7"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7695:1:7","nodeType":"YulLiteral","src":"7695:1:7","type":"","value":"0"},{"name":"ptr","nativeSrc":"7698:3:7","nodeType":"YulIdentifier","src":"7698:3:7"}],"functionName":{"name":"mstore","nativeSrc":"7688:6:7","nodeType":"YulIdentifier","src":"7688:6:7"},"nativeSrc":"7688:14:7","nodeType":"YulFunctionCall","src":"7688:14:7"},"nativeSrc":"7688:14:7","nodeType":"YulExpressionStatement","src":"7688:14:7"},{"nativeSrc":"7711:26:7","nodeType":"YulAssignment","src":"7711:26:7","value":{"arguments":[{"kind":"number","nativeSrc":"7729:1:7","nodeType":"YulLiteral","src":"7729:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7732:4:7","nodeType":"YulLiteral","src":"7732:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"7719:9:7","nodeType":"YulIdentifier","src":"7719:9:7"},"nativeSrc":"7719:18:7","nodeType":"YulFunctionCall","src":"7719:18:7"},"variableNames":[{"name":"data","nativeSrc":"7711:4:7","nodeType":"YulIdentifier","src":"7711:4:7"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"7603:141:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"7644:3:7","nodeType":"YulTypedName","src":"7644:3:7","type":""}],"returnVariables":[{"name":"data","nativeSrc":"7652:4:7","nodeType":"YulTypedName","src":"7652:4:7","type":""}],"src":"7603:141:7"},{"body":{"nativeSrc":"7794:49:7","nodeType":"YulBlock","src":"7794:49:7","statements":[{"nativeSrc":"7804:33:7","nodeType":"YulAssignment","src":"7804:33:7","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7822:5:7","nodeType":"YulIdentifier","src":"7822:5:7"},{"kind":"number","nativeSrc":"7829:2:7","nodeType":"YulLiteral","src":"7829:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"7818:3:7","nodeType":"YulIdentifier","src":"7818:3:7"},"nativeSrc":"7818:14:7","nodeType":"YulFunctionCall","src":"7818:14:7"},{"kind":"number","nativeSrc":"7834:2:7","nodeType":"YulLiteral","src":"7834:2:7","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"7814:3:7","nodeType":"YulIdentifier","src":"7814:3:7"},"nativeSrc":"7814:23:7","nodeType":"YulFunctionCall","src":"7814:23:7"},"variableNames":[{"name":"result","nativeSrc":"7804:6:7","nodeType":"YulIdentifier","src":"7804:6:7"}]}]},"name":"divide_by_32_ceil","nativeSrc":"7750:93:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7777:5:7","nodeType":"YulTypedName","src":"7777:5:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"7787:6:7","nodeType":"YulTypedName","src":"7787:6:7","type":""}],"src":"7750:93:7"},{"body":{"nativeSrc":"7902:54:7","nodeType":"YulBlock","src":"7902:54:7","statements":[{"nativeSrc":"7912:37:7","nodeType":"YulAssignment","src":"7912:37:7","value":{"arguments":[{"name":"bits","nativeSrc":"7937:4:7","nodeType":"YulIdentifier","src":"7937:4:7"},{"name":"value","nativeSrc":"7943:5:7","nodeType":"YulIdentifier","src":"7943:5:7"}],"functionName":{"name":"shl","nativeSrc":"7933:3:7","nodeType":"YulIdentifier","src":"7933:3:7"},"nativeSrc":"7933:16:7","nodeType":"YulFunctionCall","src":"7933:16:7"},"variableNames":[{"name":"newValue","nativeSrc":"7912:8:7","nodeType":"YulIdentifier","src":"7912:8:7"}]}]},"name":"shift_left_dynamic","nativeSrc":"7849:107:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"7877:4:7","nodeType":"YulTypedName","src":"7877:4:7","type":""},{"name":"value","nativeSrc":"7883:5:7","nodeType":"YulTypedName","src":"7883:5:7","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"7893:8:7","nodeType":"YulTypedName","src":"7893:8:7","type":""}],"src":"7849:107:7"},{"body":{"nativeSrc":"8038:317:7","nodeType":"YulBlock","src":"8038:317:7","statements":[{"nativeSrc":"8048:35:7","nodeType":"YulVariableDeclaration","src":"8048:35:7","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"8069:10:7","nodeType":"YulIdentifier","src":"8069:10:7"},{"kind":"number","nativeSrc":"8081:1:7","nodeType":"YulLiteral","src":"8081:1:7","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"8065:3:7","nodeType":"YulIdentifier","src":"8065:3:7"},"nativeSrc":"8065:18:7","nodeType":"YulFunctionCall","src":"8065:18:7"},"variables":[{"name":"shiftBits","nativeSrc":"8052:9:7","nodeType":"YulTypedName","src":"8052:9:7","type":""}]},{"nativeSrc":"8092:109:7","nodeType":"YulVariableDeclaration","src":"8092:109:7","value":{"arguments":[{"name":"shiftBits","nativeSrc":"8123:9:7","nodeType":"YulIdentifier","src":"8123:9:7"},{"kind":"number","nativeSrc":"8134:66:7","nodeType":"YulLiteral","src":"8134:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"8104:18:7","nodeType":"YulIdentifier","src":"8104:18:7"},"nativeSrc":"8104:97:7","nodeType":"YulFunctionCall","src":"8104:97:7"},"variables":[{"name":"mask","nativeSrc":"8096:4:7","nodeType":"YulTypedName","src":"8096:4:7","type":""}]},{"nativeSrc":"8210:51:7","nodeType":"YulAssignment","src":"8210:51:7","value":{"arguments":[{"name":"shiftBits","nativeSrc":"8241:9:7","nodeType":"YulIdentifier","src":"8241:9:7"},{"name":"toInsert","nativeSrc":"8252:8:7","nodeType":"YulIdentifier","src":"8252:8:7"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"8222:18:7","nodeType":"YulIdentifier","src":"8222:18:7"},"nativeSrc":"8222:39:7","nodeType":"YulFunctionCall","src":"8222:39:7"},"variableNames":[{"name":"toInsert","nativeSrc":"8210:8:7","nodeType":"YulIdentifier","src":"8210:8:7"}]},{"nativeSrc":"8270:30:7","nodeType":"YulAssignment","src":"8270:30:7","value":{"arguments":[{"name":"value","nativeSrc":"8283:5:7","nodeType":"YulIdentifier","src":"8283:5:7"},{"arguments":[{"name":"mask","nativeSrc":"8294:4:7","nodeType":"YulIdentifier","src":"8294:4:7"}],"functionName":{"name":"not","nativeSrc":"8290:3:7","nodeType":"YulIdentifier","src":"8290:3:7"},"nativeSrc":"8290:9:7","nodeType":"YulFunctionCall","src":"8290:9:7"}],"functionName":{"name":"and","nativeSrc":"8279:3:7","nodeType":"YulIdentifier","src":"8279:3:7"},"nativeSrc":"8279:21:7","nodeType":"YulFunctionCall","src":"8279:21:7"},"variableNames":[{"name":"value","nativeSrc":"8270:5:7","nodeType":"YulIdentifier","src":"8270:5:7"}]},{"nativeSrc":"8309:40:7","nodeType":"YulAssignment","src":"8309:40:7","value":{"arguments":[{"name":"value","nativeSrc":"8322:5:7","nodeType":"YulIdentifier","src":"8322:5:7"},{"arguments":[{"name":"toInsert","nativeSrc":"8333:8:7","nodeType":"YulIdentifier","src":"8333:8:7"},{"name":"mask","nativeSrc":"8343:4:7","nodeType":"YulIdentifier","src":"8343:4:7"}],"functionName":{"name":"and","nativeSrc":"8329:3:7","nodeType":"YulIdentifier","src":"8329:3:7"},"nativeSrc":"8329:19:7","nodeType":"YulFunctionCall","src":"8329:19:7"}],"functionName":{"name":"or","nativeSrc":"8319:2:7","nodeType":"YulIdentifier","src":"8319:2:7"},"nativeSrc":"8319:30:7","nodeType":"YulFunctionCall","src":"8319:30:7"},"variableNames":[{"name":"result","nativeSrc":"8309:6:7","nodeType":"YulIdentifier","src":"8309:6:7"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"7962:393:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7999:5:7","nodeType":"YulTypedName","src":"7999:5:7","type":""},{"name":"shiftBytes","nativeSrc":"8006:10:7","nodeType":"YulTypedName","src":"8006:10:7","type":""},{"name":"toInsert","nativeSrc":"8018:8:7","nodeType":"YulTypedName","src":"8018:8:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"8031:6:7","nodeType":"YulTypedName","src":"8031:6:7","type":""}],"src":"7962:393:7"},{"body":{"nativeSrc":"8393:28:7","nodeType":"YulBlock","src":"8393:28:7","statements":[{"nativeSrc":"8403:12:7","nodeType":"YulAssignment","src":"8403:12:7","value":{"name":"value","nativeSrc":"8410:5:7","nodeType":"YulIdentifier","src":"8410:5:7"},"variableNames":[{"name":"ret","nativeSrc":"8403:3:7","nodeType":"YulIdentifier","src":"8403:3:7"}]}]},"name":"identity","nativeSrc":"8361:60:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8379:5:7","nodeType":"YulTypedName","src":"8379:5:7","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"8389:3:7","nodeType":"YulTypedName","src":"8389:3:7","type":""}],"src":"8361:60:7"},{"body":{"nativeSrc":"8487:82:7","nodeType":"YulBlock","src":"8487:82:7","statements":[{"nativeSrc":"8497:66:7","nodeType":"YulAssignment","src":"8497:66:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8555:5:7","nodeType":"YulIdentifier","src":"8555:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8537:17:7","nodeType":"YulIdentifier","src":"8537:17:7"},"nativeSrc":"8537:24:7","nodeType":"YulFunctionCall","src":"8537:24:7"}],"functionName":{"name":"identity","nativeSrc":"8528:8:7","nodeType":"YulIdentifier","src":"8528:8:7"},"nativeSrc":"8528:34:7","nodeType":"YulFunctionCall","src":"8528:34:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8510:17:7","nodeType":"YulIdentifier","src":"8510:17:7"},"nativeSrc":"8510:53:7","nodeType":"YulFunctionCall","src":"8510:53:7"},"variableNames":[{"name":"converted","nativeSrc":"8497:9:7","nodeType":"YulIdentifier","src":"8497:9:7"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"8427:142:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8467:5:7","nodeType":"YulTypedName","src":"8467:5:7","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"8477:9:7","nodeType":"YulTypedName","src":"8477:9:7","type":""}],"src":"8427:142:7"},{"body":{"nativeSrc":"8622:28:7","nodeType":"YulBlock","src":"8622:28:7","statements":[{"nativeSrc":"8632:12:7","nodeType":"YulAssignment","src":"8632:12:7","value":{"name":"value","nativeSrc":"8639:5:7","nodeType":"YulIdentifier","src":"8639:5:7"},"variableNames":[{"name":"ret","nativeSrc":"8632:3:7","nodeType":"YulIdentifier","src":"8632:3:7"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"8575:75:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8608:5:7","nodeType":"YulTypedName","src":"8608:5:7","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"8618:3:7","nodeType":"YulTypedName","src":"8618:3:7","type":""}],"src":"8575:75:7"},{"body":{"nativeSrc":"8732:193:7","nodeType":"YulBlock","src":"8732:193:7","statements":[{"nativeSrc":"8742:63:7","nodeType":"YulVariableDeclaration","src":"8742:63:7","value":{"arguments":[{"name":"value_0","nativeSrc":"8797:7:7","nodeType":"YulIdentifier","src":"8797:7:7"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"8766:30:7","nodeType":"YulIdentifier","src":"8766:30:7"},"nativeSrc":"8766:39:7","nodeType":"YulFunctionCall","src":"8766:39:7"},"variables":[{"name":"convertedValue_0","nativeSrc":"8746:16:7","nodeType":"YulTypedName","src":"8746:16:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8821:4:7","nodeType":"YulIdentifier","src":"8821:4:7"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"8861:4:7","nodeType":"YulIdentifier","src":"8861:4:7"}],"functionName":{"name":"sload","nativeSrc":"8855:5:7","nodeType":"YulIdentifier","src":"8855:5:7"},"nativeSrc":"8855:11:7","nodeType":"YulFunctionCall","src":"8855:11:7"},{"name":"offset","nativeSrc":"8868:6:7","nodeType":"YulIdentifier","src":"8868:6:7"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"8900:16:7","nodeType":"YulIdentifier","src":"8900:16:7"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"8876:23:7","nodeType":"YulIdentifier","src":"8876:23:7"},"nativeSrc":"8876:41:7","nodeType":"YulFunctionCall","src":"8876:41:7"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"8827:27:7","nodeType":"YulIdentifier","src":"8827:27:7"},"nativeSrc":"8827:91:7","nodeType":"YulFunctionCall","src":"8827:91:7"}],"functionName":{"name":"sstore","nativeSrc":"8814:6:7","nodeType":"YulIdentifier","src":"8814:6:7"},"nativeSrc":"8814:105:7","nodeType":"YulFunctionCall","src":"8814:105:7"},"nativeSrc":"8814:105:7","nodeType":"YulExpressionStatement","src":"8814:105:7"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"8656:269:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"8709:4:7","nodeType":"YulTypedName","src":"8709:4:7","type":""},{"name":"offset","nativeSrc":"8715:6:7","nodeType":"YulTypedName","src":"8715:6:7","type":""},{"name":"value_0","nativeSrc":"8723:7:7","nodeType":"YulTypedName","src":"8723:7:7","type":""}],"src":"8656:269:7"},{"body":{"nativeSrc":"8980:24:7","nodeType":"YulBlock","src":"8980:24:7","statements":[{"nativeSrc":"8990:8:7","nodeType":"YulAssignment","src":"8990:8:7","value":{"kind":"number","nativeSrc":"8997:1:7","nodeType":"YulLiteral","src":"8997:1:7","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"8990:3:7","nodeType":"YulIdentifier","src":"8990:3:7"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"8931:73:7","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"8976:3:7","nodeType":"YulTypedName","src":"8976:3:7","type":""}],"src":"8931:73:7"},{"body":{"nativeSrc":"9063:136:7","nodeType":"YulBlock","src":"9063:136:7","statements":[{"nativeSrc":"9073:46:7","nodeType":"YulVariableDeclaration","src":"9073:46:7","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"9087:30:7","nodeType":"YulIdentifier","src":"9087:30:7"},"nativeSrc":"9087:32:7","nodeType":"YulFunctionCall","src":"9087:32:7"},"variables":[{"name":"zero_0","nativeSrc":"9077:6:7","nodeType":"YulTypedName","src":"9077:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9172:4:7","nodeType":"YulIdentifier","src":"9172:4:7"},{"name":"offset","nativeSrc":"9178:6:7","nodeType":"YulIdentifier","src":"9178:6:7"},{"name":"zero_0","nativeSrc":"9186:6:7","nodeType":"YulIdentifier","src":"9186:6:7"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"9128:43:7","nodeType":"YulIdentifier","src":"9128:43:7"},"nativeSrc":"9128:65:7","nodeType":"YulFunctionCall","src":"9128:65:7"},"nativeSrc":"9128:65:7","nodeType":"YulExpressionStatement","src":"9128:65:7"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"9010:189:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"9049:4:7","nodeType":"YulTypedName","src":"9049:4:7","type":""},{"name":"offset","nativeSrc":"9055:6:7","nodeType":"YulTypedName","src":"9055:6:7","type":""}],"src":"9010:189:7"},{"body":{"nativeSrc":"9255:136:7","nodeType":"YulBlock","src":"9255:136:7","statements":[{"body":{"nativeSrc":"9322:63:7","nodeType":"YulBlock","src":"9322:63:7","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"9366:5:7","nodeType":"YulIdentifier","src":"9366:5:7"},{"kind":"number","nativeSrc":"9373:1:7","nodeType":"YulLiteral","src":"9373:1:7","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"9336:29:7","nodeType":"YulIdentifier","src":"9336:29:7"},"nativeSrc":"9336:39:7","nodeType":"YulFunctionCall","src":"9336:39:7"},"nativeSrc":"9336:39:7","nodeType":"YulExpressionStatement","src":"9336:39:7"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"9275:5:7","nodeType":"YulIdentifier","src":"9275:5:7"},{"name":"end","nativeSrc":"9282:3:7","nodeType":"YulIdentifier","src":"9282:3:7"}],"functionName":{"name":"lt","nativeSrc":"9272:2:7","nodeType":"YulIdentifier","src":"9272:2:7"},"nativeSrc":"9272:14:7","nodeType":"YulFunctionCall","src":"9272:14:7"},"nativeSrc":"9265:120:7","nodeType":"YulForLoop","post":{"nativeSrc":"9287:26:7","nodeType":"YulBlock","src":"9287:26:7","statements":[{"nativeSrc":"9289:22:7","nodeType":"YulAssignment","src":"9289:22:7","value":{"arguments":[{"name":"start","nativeSrc":"9302:5:7","nodeType":"YulIdentifier","src":"9302:5:7"},{"kind":"number","nativeSrc":"9309:1:7","nodeType":"YulLiteral","src":"9309:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9298:3:7","nodeType":"YulIdentifier","src":"9298:3:7"},"nativeSrc":"9298:13:7","nodeType":"YulFunctionCall","src":"9298:13:7"},"variableNames":[{"name":"start","nativeSrc":"9289:5:7","nodeType":"YulIdentifier","src":"9289:5:7"}]}]},"pre":{"nativeSrc":"9269:2:7","nodeType":"YulBlock","src":"9269:2:7","statements":[]},"src":"9265:120:7"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"9205:186:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"9243:5:7","nodeType":"YulTypedName","src":"9243:5:7","type":""},{"name":"end","nativeSrc":"9250:3:7","nodeType":"YulTypedName","src":"9250:3:7","type":""}],"src":"9205:186:7"},{"body":{"nativeSrc":"9476:464:7","nodeType":"YulBlock","src":"9476:464:7","statements":[{"body":{"nativeSrc":"9502:431:7","nodeType":"YulBlock","src":"9502:431:7","statements":[{"nativeSrc":"9516:54:7","nodeType":"YulVariableDeclaration","src":"9516:54:7","value":{"arguments":[{"name":"array","nativeSrc":"9564:5:7","nodeType":"YulIdentifier","src":"9564:5:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"9532:31:7","nodeType":"YulIdentifier","src":"9532:31:7"},"nativeSrc":"9532:38:7","nodeType":"YulFunctionCall","src":"9532:38:7"},"variables":[{"name":"dataArea","nativeSrc":"9520:8:7","nodeType":"YulTypedName","src":"9520:8:7","type":""}]},{"nativeSrc":"9583:63:7","nodeType":"YulVariableDeclaration","src":"9583:63:7","value":{"arguments":[{"name":"dataArea","nativeSrc":"9606:8:7","nodeType":"YulIdentifier","src":"9606:8:7"},{"arguments":[{"name":"startIndex","nativeSrc":"9634:10:7","nodeType":"YulIdentifier","src":"9634:10:7"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"9616:17:7","nodeType":"YulIdentifier","src":"9616:17:7"},"nativeSrc":"9616:29:7","nodeType":"YulFunctionCall","src":"9616:29:7"}],"functionName":{"name":"add","nativeSrc":"9602:3:7","nodeType":"YulIdentifier","src":"9602:3:7"},"nativeSrc":"9602:44:7","nodeType":"YulFunctionCall","src":"9602:44:7"},"variables":[{"name":"deleteStart","nativeSrc":"9587:11:7","nodeType":"YulTypedName","src":"9587:11:7","type":""}]},{"body":{"nativeSrc":"9803:27:7","nodeType":"YulBlock","src":"9803:27:7","statements":[{"nativeSrc":"9805:23:7","nodeType":"YulAssignment","src":"9805:23:7","value":{"name":"dataArea","nativeSrc":"9820:8:7","nodeType":"YulIdentifier","src":"9820:8:7"},"variableNames":[{"name":"deleteStart","nativeSrc":"9805:11:7","nodeType":"YulIdentifier","src":"9805:11:7"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"9787:10:7","nodeType":"YulIdentifier","src":"9787:10:7"},{"kind":"number","nativeSrc":"9799:2:7","nodeType":"YulLiteral","src":"9799:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"9784:2:7","nodeType":"YulIdentifier","src":"9784:2:7"},"nativeSrc":"9784:18:7","nodeType":"YulFunctionCall","src":"9784:18:7"},"nativeSrc":"9781:49:7","nodeType":"YulIf","src":"9781:49:7"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"9872:11:7","nodeType":"YulIdentifier","src":"9872:11:7"},{"arguments":[{"name":"dataArea","nativeSrc":"9889:8:7","nodeType":"YulIdentifier","src":"9889:8:7"},{"arguments":[{"name":"len","nativeSrc":"9917:3:7","nodeType":"YulIdentifier","src":"9917:3:7"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"9899:17:7","nodeType":"YulIdentifier","src":"9899:17:7"},"nativeSrc":"9899:22:7","nodeType":"YulFunctionCall","src":"9899:22:7"}],"functionName":{"name":"add","nativeSrc":"9885:3:7","nodeType":"YulIdentifier","src":"9885:3:7"},"nativeSrc":"9885:37:7","nodeType":"YulFunctionCall","src":"9885:37:7"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"9843:28:7","nodeType":"YulIdentifier","src":"9843:28:7"},"nativeSrc":"9843:80:7","nodeType":"YulFunctionCall","src":"9843:80:7"},"nativeSrc":"9843:80:7","nodeType":"YulExpressionStatement","src":"9843:80:7"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"9493:3:7","nodeType":"YulIdentifier","src":"9493:3:7"},{"kind":"number","nativeSrc":"9498:2:7","nodeType":"YulLiteral","src":"9498:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"9490:2:7","nodeType":"YulIdentifier","src":"9490:2:7"},"nativeSrc":"9490:11:7","nodeType":"YulFunctionCall","src":"9490:11:7"},"nativeSrc":"9487:446:7","nodeType":"YulIf","src":"9487:446:7"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"9397:543:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"9452:5:7","nodeType":"YulTypedName","src":"9452:5:7","type":""},{"name":"len","nativeSrc":"9459:3:7","nodeType":"YulTypedName","src":"9459:3:7","type":""},{"name":"startIndex","nativeSrc":"9464:10:7","nodeType":"YulTypedName","src":"9464:10:7","type":""}],"src":"9397:543:7"},{"body":{"nativeSrc":"10009:54:7","nodeType":"YulBlock","src":"10009:54:7","statements":[{"nativeSrc":"10019:37:7","nodeType":"YulAssignment","src":"10019:37:7","value":{"arguments":[{"name":"bits","nativeSrc":"10044:4:7","nodeType":"YulIdentifier","src":"10044:4:7"},{"name":"value","nativeSrc":"10050:5:7","nodeType":"YulIdentifier","src":"10050:5:7"}],"functionName":{"name":"shr","nativeSrc":"10040:3:7","nodeType":"YulIdentifier","src":"10040:3:7"},"nativeSrc":"10040:16:7","nodeType":"YulFunctionCall","src":"10040:16:7"},"variableNames":[{"name":"newValue","nativeSrc":"10019:8:7","nodeType":"YulIdentifier","src":"10019:8:7"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"9946:117:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"9984:4:7","nodeType":"YulTypedName","src":"9984:4:7","type":""},{"name":"value","nativeSrc":"9990:5:7","nodeType":"YulTypedName","src":"9990:5:7","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"10000:8:7","nodeType":"YulTypedName","src":"10000:8:7","type":""}],"src":"9946:117:7"},{"body":{"nativeSrc":"10120:118:7","nodeType":"YulBlock","src":"10120:118:7","statements":[{"nativeSrc":"10130:68:7","nodeType":"YulVariableDeclaration","src":"10130:68:7","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10179:1:7","nodeType":"YulLiteral","src":"10179:1:7","type":"","value":"8"},{"name":"bytes","nativeSrc":"10182:5:7","nodeType":"YulIdentifier","src":"10182:5:7"}],"functionName":{"name":"mul","nativeSrc":"10175:3:7","nodeType":"YulIdentifier","src":"10175:3:7"},"nativeSrc":"10175:13:7","nodeType":"YulFunctionCall","src":"10175:13:7"},{"arguments":[{"kind":"number","nativeSrc":"10194:1:7","nodeType":"YulLiteral","src":"10194:1:7","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"10190:3:7","nodeType":"YulIdentifier","src":"10190:3:7"},"nativeSrc":"10190:6:7","nodeType":"YulFunctionCall","src":"10190:6:7"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"10146:28:7","nodeType":"YulIdentifier","src":"10146:28:7"},"nativeSrc":"10146:51:7","nodeType":"YulFunctionCall","src":"10146:51:7"}],"functionName":{"name":"not","nativeSrc":"10142:3:7","nodeType":"YulIdentifier","src":"10142:3:7"},"nativeSrc":"10142:56:7","nodeType":"YulFunctionCall","src":"10142:56:7"},"variables":[{"name":"mask","nativeSrc":"10134:4:7","nodeType":"YulTypedName","src":"10134:4:7","type":""}]},{"nativeSrc":"10207:25:7","nodeType":"YulAssignment","src":"10207:25:7","value":{"arguments":[{"name":"data","nativeSrc":"10221:4:7","nodeType":"YulIdentifier","src":"10221:4:7"},{"name":"mask","nativeSrc":"10227:4:7","nodeType":"YulIdentifier","src":"10227:4:7"}],"functionName":{"name":"and","nativeSrc":"10217:3:7","nodeType":"YulIdentifier","src":"10217:3:7"},"nativeSrc":"10217:15:7","nodeType":"YulFunctionCall","src":"10217:15:7"},"variableNames":[{"name":"result","nativeSrc":"10207:6:7","nodeType":"YulIdentifier","src":"10207:6:7"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"10069:169:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"10097:4:7","nodeType":"YulTypedName","src":"10097:4:7","type":""},{"name":"bytes","nativeSrc":"10103:5:7","nodeType":"YulTypedName","src":"10103:5:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"10113:6:7","nodeType":"YulTypedName","src":"10113:6:7","type":""}],"src":"10069:169:7"},{"body":{"nativeSrc":"10324:214:7","nodeType":"YulBlock","src":"10324:214:7","statements":[{"nativeSrc":"10457:37:7","nodeType":"YulAssignment","src":"10457:37:7","value":{"arguments":[{"name":"data","nativeSrc":"10484:4:7","nodeType":"YulIdentifier","src":"10484:4:7"},{"name":"len","nativeSrc":"10490:3:7","nodeType":"YulIdentifier","src":"10490:3:7"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"10465:18:7","nodeType":"YulIdentifier","src":"10465:18:7"},"nativeSrc":"10465:29:7","nodeType":"YulFunctionCall","src":"10465:29:7"},"variableNames":[{"name":"data","nativeSrc":"10457:4:7","nodeType":"YulIdentifier","src":"10457:4:7"}]},{"nativeSrc":"10503:29:7","nodeType":"YulAssignment","src":"10503:29:7","value":{"arguments":[{"name":"data","nativeSrc":"10514:4:7","nodeType":"YulIdentifier","src":"10514:4:7"},{"arguments":[{"kind":"number","nativeSrc":"10524:1:7","nodeType":"YulLiteral","src":"10524:1:7","type":"","value":"2"},{"name":"len","nativeSrc":"10527:3:7","nodeType":"YulIdentifier","src":"10527:3:7"}],"functionName":{"name":"mul","nativeSrc":"10520:3:7","nodeType":"YulIdentifier","src":"10520:3:7"},"nativeSrc":"10520:11:7","nodeType":"YulFunctionCall","src":"10520:11:7"}],"functionName":{"name":"or","nativeSrc":"10511:2:7","nodeType":"YulIdentifier","src":"10511:2:7"},"nativeSrc":"10511:21:7","nodeType":"YulFunctionCall","src":"10511:21:7"},"variableNames":[{"name":"used","nativeSrc":"10503:4:7","nodeType":"YulIdentifier","src":"10503:4:7"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"10243:295:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"10305:4:7","nodeType":"YulTypedName","src":"10305:4:7","type":""},{"name":"len","nativeSrc":"10311:3:7","nodeType":"YulTypedName","src":"10311:3:7","type":""}],"returnVariables":[{"name":"used","nativeSrc":"10319:4:7","nodeType":"YulTypedName","src":"10319:4:7","type":""}],"src":"10243:295:7"},{"body":{"nativeSrc":"10635:1303:7","nodeType":"YulBlock","src":"10635:1303:7","statements":[{"nativeSrc":"10646:51:7","nodeType":"YulVariableDeclaration","src":"10646:51:7","value":{"arguments":[{"name":"src","nativeSrc":"10693:3:7","nodeType":"YulIdentifier","src":"10693:3:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"10660:32:7","nodeType":"YulIdentifier","src":"10660:32:7"},"nativeSrc":"10660:37:7","nodeType":"YulFunctionCall","src":"10660:37:7"},"variables":[{"name":"newLen","nativeSrc":"10650:6:7","nodeType":"YulTypedName","src":"10650:6:7","type":""}]},{"body":{"nativeSrc":"10782:22:7","nodeType":"YulBlock","src":"10782:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"10784:16:7","nodeType":"YulIdentifier","src":"10784:16:7"},"nativeSrc":"10784:18:7","nodeType":"YulFunctionCall","src":"10784:18:7"},"nativeSrc":"10784:18:7","nodeType":"YulExpressionStatement","src":"10784:18:7"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"10754:6:7","nodeType":"YulIdentifier","src":"10754:6:7"},{"kind":"number","nativeSrc":"10762:18:7","nodeType":"YulLiteral","src":"10762:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10751:2:7","nodeType":"YulIdentifier","src":"10751:2:7"},"nativeSrc":"10751:30:7","nodeType":"YulFunctionCall","src":"10751:30:7"},"nativeSrc":"10748:56:7","nodeType":"YulIf","src":"10748:56:7"},{"nativeSrc":"10814:52:7","nodeType":"YulVariableDeclaration","src":"10814:52:7","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"10860:4:7","nodeType":"YulIdentifier","src":"10860:4:7"}],"functionName":{"name":"sload","nativeSrc":"10854:5:7","nodeType":"YulIdentifier","src":"10854:5:7"},"nativeSrc":"10854:11:7","nodeType":"YulFunctionCall","src":"10854:11:7"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"10828:25:7","nodeType":"YulIdentifier","src":"10828:25:7"},"nativeSrc":"10828:38:7","nodeType":"YulFunctionCall","src":"10828:38:7"},"variables":[{"name":"oldLen","nativeSrc":"10818:6:7","nodeType":"YulTypedName","src":"10818:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"10959:4:7","nodeType":"YulIdentifier","src":"10959:4:7"},{"name":"oldLen","nativeSrc":"10965:6:7","nodeType":"YulIdentifier","src":"10965:6:7"},{"name":"newLen","nativeSrc":"10973:6:7","nodeType":"YulIdentifier","src":"10973:6:7"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"10913:45:7","nodeType":"YulIdentifier","src":"10913:45:7"},"nativeSrc":"10913:67:7","nodeType":"YulFunctionCall","src":"10913:67:7"},"nativeSrc":"10913:67:7","nodeType":"YulExpressionStatement","src":"10913:67:7"},{"nativeSrc":"10990:18:7","nodeType":"YulVariableDeclaration","src":"10990:18:7","value":{"kind":"number","nativeSrc":"11007:1:7","nodeType":"YulLiteral","src":"11007:1:7","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"10994:9:7","nodeType":"YulTypedName","src":"10994:9:7","type":""}]},{"nativeSrc":"11018:17:7","nodeType":"YulAssignment","src":"11018:17:7","value":{"kind":"number","nativeSrc":"11031:4:7","nodeType":"YulLiteral","src":"11031:4:7","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"11018:9:7","nodeType":"YulIdentifier","src":"11018:9:7"}]},{"cases":[{"body":{"nativeSrc":"11082:611:7","nodeType":"YulBlock","src":"11082:611:7","statements":[{"nativeSrc":"11096:37:7","nodeType":"YulVariableDeclaration","src":"11096:37:7","value":{"arguments":[{"name":"newLen","nativeSrc":"11115:6:7","nodeType":"YulIdentifier","src":"11115:6:7"},{"arguments":[{"kind":"number","nativeSrc":"11127:4:7","nodeType":"YulLiteral","src":"11127:4:7","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"11123:3:7","nodeType":"YulIdentifier","src":"11123:3:7"},"nativeSrc":"11123:9:7","nodeType":"YulFunctionCall","src":"11123:9:7"}],"functionName":{"name":"and","nativeSrc":"11111:3:7","nodeType":"YulIdentifier","src":"11111:3:7"},"nativeSrc":"11111:22:7","nodeType":"YulFunctionCall","src":"11111:22:7"},"variables":[{"name":"loopEnd","nativeSrc":"11100:7:7","nodeType":"YulTypedName","src":"11100:7:7","type":""}]},{"nativeSrc":"11147:51:7","nodeType":"YulVariableDeclaration","src":"11147:51:7","value":{"arguments":[{"name":"slot","nativeSrc":"11193:4:7","nodeType":"YulIdentifier","src":"11193:4:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"11161:31:7","nodeType":"YulIdentifier","src":"11161:31:7"},"nativeSrc":"11161:37:7","nodeType":"YulFunctionCall","src":"11161:37:7"},"variables":[{"name":"dstPtr","nativeSrc":"11151:6:7","nodeType":"YulTypedName","src":"11151:6:7","type":""}]},{"nativeSrc":"11211:10:7","nodeType":"YulVariableDeclaration","src":"11211:10:7","value":{"kind":"number","nativeSrc":"11220:1:7","nodeType":"YulLiteral","src":"11220:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"11215:1:7","nodeType":"YulTypedName","src":"11215:1:7","type":""}]},{"body":{"nativeSrc":"11279:163:7","nodeType":"YulBlock","src":"11279:163:7","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"11304:6:7","nodeType":"YulIdentifier","src":"11304:6:7"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11322:3:7","nodeType":"YulIdentifier","src":"11322:3:7"},{"name":"srcOffset","nativeSrc":"11327:9:7","nodeType":"YulIdentifier","src":"11327:9:7"}],"functionName":{"name":"add","nativeSrc":"11318:3:7","nodeType":"YulIdentifier","src":"11318:3:7"},"nativeSrc":"11318:19:7","nodeType":"YulFunctionCall","src":"11318:19:7"}],"functionName":{"name":"mload","nativeSrc":"11312:5:7","nodeType":"YulIdentifier","src":"11312:5:7"},"nativeSrc":"11312:26:7","nodeType":"YulFunctionCall","src":"11312:26:7"}],"functionName":{"name":"sstore","nativeSrc":"11297:6:7","nodeType":"YulIdentifier","src":"11297:6:7"},"nativeSrc":"11297:42:7","nodeType":"YulFunctionCall","src":"11297:42:7"},"nativeSrc":"11297:42:7","nodeType":"YulExpressionStatement","src":"11297:42:7"},{"nativeSrc":"11356:24:7","nodeType":"YulAssignment","src":"11356:24:7","value":{"arguments":[{"name":"dstPtr","nativeSrc":"11370:6:7","nodeType":"YulIdentifier","src":"11370:6:7"},{"kind":"number","nativeSrc":"11378:1:7","nodeType":"YulLiteral","src":"11378:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"11366:3:7","nodeType":"YulIdentifier","src":"11366:3:7"},"nativeSrc":"11366:14:7","nodeType":"YulFunctionCall","src":"11366:14:7"},"variableNames":[{"name":"dstPtr","nativeSrc":"11356:6:7","nodeType":"YulIdentifier","src":"11356:6:7"}]},{"nativeSrc":"11397:31:7","nodeType":"YulAssignment","src":"11397:31:7","value":{"arguments":[{"name":"srcOffset","nativeSrc":"11414:9:7","nodeType":"YulIdentifier","src":"11414:9:7"},{"kind":"number","nativeSrc":"11425:2:7","nodeType":"YulLiteral","src":"11425:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11410:3:7","nodeType":"YulIdentifier","src":"11410:3:7"},"nativeSrc":"11410:18:7","nodeType":"YulFunctionCall","src":"11410:18:7"},"variableNames":[{"name":"srcOffset","nativeSrc":"11397:9:7","nodeType":"YulIdentifier","src":"11397:9:7"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"11245:1:7","nodeType":"YulIdentifier","src":"11245:1:7"},{"name":"loopEnd","nativeSrc":"11248:7:7","nodeType":"YulIdentifier","src":"11248:7:7"}],"functionName":{"name":"lt","nativeSrc":"11242:2:7","nodeType":"YulIdentifier","src":"11242:2:7"},"nativeSrc":"11242:14:7","nodeType":"YulFunctionCall","src":"11242:14:7"},"nativeSrc":"11234:208:7","nodeType":"YulForLoop","post":{"nativeSrc":"11257:21:7","nodeType":"YulBlock","src":"11257:21:7","statements":[{"nativeSrc":"11259:17:7","nodeType":"YulAssignment","src":"11259:17:7","value":{"arguments":[{"name":"i","nativeSrc":"11268:1:7","nodeType":"YulIdentifier","src":"11268:1:7"},{"kind":"number","nativeSrc":"11271:4:7","nodeType":"YulLiteral","src":"11271:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11264:3:7","nodeType":"YulIdentifier","src":"11264:3:7"},"nativeSrc":"11264:12:7","nodeType":"YulFunctionCall","src":"11264:12:7"},"variableNames":[{"name":"i","nativeSrc":"11259:1:7","nodeType":"YulIdentifier","src":"11259:1:7"}]}]},"pre":{"nativeSrc":"11238:3:7","nodeType":"YulBlock","src":"11238:3:7","statements":[]},"src":"11234:208:7"},{"body":{"nativeSrc":"11478:156:7","nodeType":"YulBlock","src":"11478:156:7","statements":[{"nativeSrc":"11496:43:7","nodeType":"YulVariableDeclaration","src":"11496:43:7","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11523:3:7","nodeType":"YulIdentifier","src":"11523:3:7"},{"name":"srcOffset","nativeSrc":"11528:9:7","nodeType":"YulIdentifier","src":"11528:9:7"}],"functionName":{"name":"add","nativeSrc":"11519:3:7","nodeType":"YulIdentifier","src":"11519:3:7"},"nativeSrc":"11519:19:7","nodeType":"YulFunctionCall","src":"11519:19:7"}],"functionName":{"name":"mload","nativeSrc":"11513:5:7","nodeType":"YulIdentifier","src":"11513:5:7"},"nativeSrc":"11513:26:7","nodeType":"YulFunctionCall","src":"11513:26:7"},"variables":[{"name":"lastValue","nativeSrc":"11500:9:7","nodeType":"YulTypedName","src":"11500:9:7","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"11563:6:7","nodeType":"YulIdentifier","src":"11563:6:7"},{"arguments":[{"name":"lastValue","nativeSrc":"11590:9:7","nodeType":"YulIdentifier","src":"11590:9:7"},{"arguments":[{"name":"newLen","nativeSrc":"11605:6:7","nodeType":"YulIdentifier","src":"11605:6:7"},{"kind":"number","nativeSrc":"11613:4:7","nodeType":"YulLiteral","src":"11613:4:7","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"11601:3:7","nodeType":"YulIdentifier","src":"11601:3:7"},"nativeSrc":"11601:17:7","nodeType":"YulFunctionCall","src":"11601:17:7"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"11571:18:7","nodeType":"YulIdentifier","src":"11571:18:7"},"nativeSrc":"11571:48:7","nodeType":"YulFunctionCall","src":"11571:48:7"}],"functionName":{"name":"sstore","nativeSrc":"11556:6:7","nodeType":"YulIdentifier","src":"11556:6:7"},"nativeSrc":"11556:64:7","nodeType":"YulFunctionCall","src":"11556:64:7"},"nativeSrc":"11556:64:7","nodeType":"YulExpressionStatement","src":"11556:64:7"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"11461:7:7","nodeType":"YulIdentifier","src":"11461:7:7"},{"name":"newLen","nativeSrc":"11470:6:7","nodeType":"YulIdentifier","src":"11470:6:7"}],"functionName":{"name":"lt","nativeSrc":"11458:2:7","nodeType":"YulIdentifier","src":"11458:2:7"},"nativeSrc":"11458:19:7","nodeType":"YulFunctionCall","src":"11458:19:7"},"nativeSrc":"11455:179:7","nodeType":"YulIf","src":"11455:179:7"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"11654:4:7","nodeType":"YulIdentifier","src":"11654:4:7"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"11668:6:7","nodeType":"YulIdentifier","src":"11668:6:7"},{"kind":"number","nativeSrc":"11676:1:7","nodeType":"YulLiteral","src":"11676:1:7","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"11664:3:7","nodeType":"YulIdentifier","src":"11664:3:7"},"nativeSrc":"11664:14:7","nodeType":"YulFunctionCall","src":"11664:14:7"},{"kind":"number","nativeSrc":"11680:1:7","nodeType":"YulLiteral","src":"11680:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"11660:3:7","nodeType":"YulIdentifier","src":"11660:3:7"},"nativeSrc":"11660:22:7","nodeType":"YulFunctionCall","src":"11660:22:7"}],"functionName":{"name":"sstore","nativeSrc":"11647:6:7","nodeType":"YulIdentifier","src":"11647:6:7"},"nativeSrc":"11647:36:7","nodeType":"YulFunctionCall","src":"11647:36:7"},"nativeSrc":"11647:36:7","nodeType":"YulExpressionStatement","src":"11647:36:7"}]},"nativeSrc":"11075:618:7","nodeType":"YulCase","src":"11075:618:7","value":{"kind":"number","nativeSrc":"11080:1:7","nodeType":"YulLiteral","src":"11080:1:7","type":"","value":"1"}},{"body":{"nativeSrc":"11710:222:7","nodeType":"YulBlock","src":"11710:222:7","statements":[{"nativeSrc":"11724:14:7","nodeType":"YulVariableDeclaration","src":"11724:14:7","value":{"kind":"number","nativeSrc":"11737:1:7","nodeType":"YulLiteral","src":"11737:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"11728:5:7","nodeType":"YulTypedName","src":"11728:5:7","type":""}]},{"body":{"nativeSrc":"11761:67:7","nodeType":"YulBlock","src":"11761:67:7","statements":[{"nativeSrc":"11779:35:7","nodeType":"YulAssignment","src":"11779:35:7","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11798:3:7","nodeType":"YulIdentifier","src":"11798:3:7"},{"name":"srcOffset","nativeSrc":"11803:9:7","nodeType":"YulIdentifier","src":"11803:9:7"}],"functionName":{"name":"add","nativeSrc":"11794:3:7","nodeType":"YulIdentifier","src":"11794:3:7"},"nativeSrc":"11794:19:7","nodeType":"YulFunctionCall","src":"11794:19:7"}],"functionName":{"name":"mload","nativeSrc":"11788:5:7","nodeType":"YulIdentifier","src":"11788:5:7"},"nativeSrc":"11788:26:7","nodeType":"YulFunctionCall","src":"11788:26:7"},"variableNames":[{"name":"value","nativeSrc":"11779:5:7","nodeType":"YulIdentifier","src":"11779:5:7"}]}]},"condition":{"name":"newLen","nativeSrc":"11754:6:7","nodeType":"YulIdentifier","src":"11754:6:7"},"nativeSrc":"11751:77:7","nodeType":"YulIf","src":"11751:77:7"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"11848:4:7","nodeType":"YulIdentifier","src":"11848:4:7"},{"arguments":[{"name":"value","nativeSrc":"11907:5:7","nodeType":"YulIdentifier","src":"11907:5:7"},{"name":"newLen","nativeSrc":"11914:6:7","nodeType":"YulIdentifier","src":"11914:6:7"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"11854:52:7","nodeType":"YulIdentifier","src":"11854:52:7"},"nativeSrc":"11854:67:7","nodeType":"YulFunctionCall","src":"11854:67:7"}],"functionName":{"name":"sstore","nativeSrc":"11841:6:7","nodeType":"YulIdentifier","src":"11841:6:7"},"nativeSrc":"11841:81:7","nodeType":"YulFunctionCall","src":"11841:81:7"},"nativeSrc":"11841:81:7","nodeType":"YulExpressionStatement","src":"11841:81:7"}]},"nativeSrc":"11702:230:7","nodeType":"YulCase","src":"11702:230:7","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"11055:6:7","nodeType":"YulIdentifier","src":"11055:6:7"},{"kind":"number","nativeSrc":"11063:2:7","nodeType":"YulLiteral","src":"11063:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"11052:2:7","nodeType":"YulIdentifier","src":"11052:2:7"},"nativeSrc":"11052:14:7","nodeType":"YulFunctionCall","src":"11052:14:7"},"nativeSrc":"11045:887:7","nodeType":"YulSwitch","src":"11045:887:7"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"10543:1395:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"10624:4:7","nodeType":"YulTypedName","src":"10624:4:7","type":""},{"name":"src","nativeSrc":"10630:3:7","nodeType":"YulTypedName","src":"10630:3:7","type":""}],"src":"10543:1395:7"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526012600260006101000a81548160ff021916908360ff1602179055503480156200002d57600080fd5b5060405162001d1e38038062001d1e8339818101604052810190620000539190620002c8565b600260009054906101000a900460ff1660ff16600a620000749190620004e5565b8362000081919062000536565b600381905550600354600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160009081620000de9190620007c2565b508060019081620000f09190620007c2565b50505050620008a9565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b62000123816200010e565b81146200012f57600080fd5b50565b600081519050620001438162000118565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200019e8262000153565b810181811067ffffffffffffffff82111715620001c057620001bf62000164565b5b80604052505050565b6000620001d5620000fa565b9050620001e3828262000193565b919050565b600067ffffffffffffffff82111562000206576200020562000164565b5b620002118262000153565b9050602081019050919050565b60005b838110156200023e57808201518184015260208101905062000221565b60008484015250505050565b6000620002616200025b84620001e8565b620001c9565b90508281526020810184848401111562000280576200027f6200014e565b5b6200028d8482856200021e565b509392505050565b600082601f830112620002ad57620002ac62000149565b5b8151620002bf8482602086016200024a565b91505092915050565b600080600060608486031215620002e457620002e362000104565b5b6000620002f48682870162000132565b935050602084015167ffffffffffffffff81111562000318576200031762000109565b5b620003268682870162000295565b925050604084015167ffffffffffffffff8111156200034a576200034962000109565b5b620003588682870162000295565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115620003f057808604811115620003c857620003c762000362565b5b6001851615620003d85780820291505b8081029050620003e88562000391565b9450620003a8565b94509492505050565b6000826200040b5760019050620004de565b816200041b5760009050620004de565b81600181146200043457600281146200043f5762000475565b6001915050620004de565b60ff84111562000454576200045362000362565b5b8360020a9150848211156200046e576200046d62000362565b5b50620004de565b5060208310610133831016604e8410600b8410161715620004af5782820a905083811115620004a957620004a862000362565b5b620004de565b620004be84848460016200039e565b92509050818404811115620004d857620004d762000362565b5b81810290505b9392505050565b6000620004f2826200010e565b9150620004ff836200010e565b92506200052e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620003f9565b905092915050565b600062000543826200010e565b915062000550836200010e565b925082820262000560816200010e565b915082820484148315176200057a576200057962000362565b5b5092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005d457607f821691505b602082108103620005ea57620005e96200058c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000615565b62000660868362000615565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620006a36200069d62000697846200010e565b62000678565b6200010e565b9050919050565b6000819050919050565b620006bf8362000682565b620006d7620006ce82620006aa565b84845462000622565b825550505050565b600090565b620006ee620006df565b620006fb818484620006b4565b505050565b5b81811015620007235762000717600082620006e4565b60018101905062000701565b5050565b601f82111562000772576200073c81620005f0565b620007478462000605565b8101602085101562000757578190505b6200076f620007668562000605565b83018262000700565b50505b505050565b600082821c905092915050565b6000620007976000198460080262000777565b1980831691505092915050565b6000620007b2838362000784565b9150826002028217905092915050565b620007cd8262000581565b67ffffffffffffffff811115620007e957620007e862000164565b5b620007f58254620005bb565b6200080282828562000727565b600060209050601f8311600181146200083a576000841562000825578287015190505b620008318582620007a4565b865550620008a1565b601f1984166200084a86620005f0565b60005b8281101562000874578489015182556001820191506020850194506020810190506200084d565b8683101562000894578489015162000890601f89168262000784565b8355505b6001600288020188555050505b505050505050565b61146580620008b96000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806379cc6790146101d357806395d89b4114610203578063a9059cbb14610221578063cae9ca5114610251578063dd62ed3e14610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce5671461015557806342966c6814610173575b600080fd5b6100c16102b1565b6040516100ce9190610e27565b60405180910390f35b6100f160048036038101906100ec9190610ef1565b61033f565b6040516100fe9190610f4c565b60405180910390f35b61010f610431565b60405161011c9190610f76565b60405180910390f35b61013f600480360381019061013a9190610f91565b610437565b60405161014c9190610f4c565b60405180910390f35b61015d61056b565b60405161016a9190611000565b60405180910390f35b61018d6004803603810190610188919061101b565b61057e565b60405161019a9190610f4c565b60405180910390f35b6101bd60048036038101906101b89190611048565b610692565b6040516101ca9190610f76565b60405180910390f35b6101ed60048036038101906101e89190610ef1565b6106aa565b6040516101fa9190610f4c565b60405180910390f35b61020b6108db565b6040516102189190610e27565b60405180910390f35b61023b60048036038101906102369190610ef1565b610969565b6040516102489190610f4c565b60405180910390f35b61026b600480360381019061026691906111aa565b610980565b6040516102789190610f4c565b60405180910390f35b61029b60048036038101906102969190611219565b610a19565b6040516102a89190610f76565b60405180910390f35b600080546102be90611288565b80601f01602080910402602001604051908101604052809291908181526020018280546102ea90611288565b80156103375780601f1061030c57610100808354040283529160200191610337565b820191906000526020600020905b81548152906001019060200180831161031a57829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161041f9190610f76565b60405180910390a36001905092915050565b60035481565b6000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156104c257600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054e91906112e8565b92505081905550610560848484610a3e565b600190509392505050565b600260009054906101000a900460ff1681565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105cc57600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461061b91906112e8565b92505081905550816003600082825461063491906112e8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040516106819190610f76565b60405180910390a260019050919050565b60046020528060005260406000206000915090505481565b600081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106f857600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561078157600080fd5b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107d091906112e8565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461086391906112e8565b92505081905550816003600082825461087c91906112e8565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040516108c99190610f76565b60405180910390a26001905092915050565b600180546108e890611288565b80601f016020809104026020016040519081016040528092919081815260200182805461091490611288565b80156109615780601f1061093657610100808354040283529160200191610961565b820191906000526020600020905b81548152906001019060200180831161094457829003601f168201915b505050505081565b6000610976338484610a3e565b6001905092915050565b600080849050610990858561033f565b15610a10578073ffffffffffffffffffffffffffffffffffffffff16638f4ffcb1338630876040518563ffffffff1660e01b81526004016109d49493929190611380565b600060405180830381600087803b1580156109ee57600080fd5b505af1158015610a02573d6000803e3d6000fd5b505050506001915050610a12565b505b9392505050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a7757600080fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610ac357600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b4e91906113cc565b1015610b5957600080fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610be591906113cc565b905081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c3691906112e8565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c8c91906113cc565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cf09190610f76565b60405180910390a380600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d8391906113cc565b14610d9157610d90611400565b5b50505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dd1578082015181840152602081019050610db6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610df982610d97565b610e038185610da2565b9350610e13818560208601610db3565b610e1c81610ddd565b840191505092915050565b60006020820190508181036000830152610e418184610dee565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e8882610e5d565b9050919050565b610e9881610e7d565b8114610ea357600080fd5b50565b600081359050610eb581610e8f565b92915050565b6000819050919050565b610ece81610ebb565b8114610ed957600080fd5b50565b600081359050610eeb81610ec5565b92915050565b60008060408385031215610f0857610f07610e53565b5b6000610f1685828601610ea6565b9250506020610f2785828601610edc565b9150509250929050565b60008115159050919050565b610f4681610f31565b82525050565b6000602082019050610f616000830184610f3d565b92915050565b610f7081610ebb565b82525050565b6000602082019050610f8b6000830184610f67565b92915050565b600080600060608486031215610faa57610fa9610e53565b5b6000610fb886828701610ea6565b9350506020610fc986828701610ea6565b9250506040610fda86828701610edc565b9150509250925092565b600060ff82169050919050565b610ffa81610fe4565b82525050565b60006020820190506110156000830184610ff1565b92915050565b60006020828403121561103157611030610e53565b5b600061103f84828501610edc565b91505092915050565b60006020828403121561105e5761105d610e53565b5b600061106c84828501610ea6565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110b782610ddd565b810181811067ffffffffffffffff821117156110d6576110d561107f565b5b80604052505050565b60006110e9610e49565b90506110f582826110ae565b919050565b600067ffffffffffffffff8211156111155761111461107f565b5b61111e82610ddd565b9050602081019050919050565b82818337600083830152505050565b600061114d611148846110fa565b6110df565b9050828152602081018484840111156111695761116861107a565b5b61117484828561112b565b509392505050565b600082601f83011261119157611190611075565b5b81356111a184826020860161113a565b91505092915050565b6000806000606084860312156111c3576111c2610e53565b5b60006111d186828701610ea6565b93505060206111e286828701610edc565b925050604084013567ffffffffffffffff81111561120357611202610e58565b5b61120f8682870161117c565b9150509250925092565b600080604083850312156112305761122f610e53565b5b600061123e85828601610ea6565b925050602061124f85828601610ea6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112a057607f821691505b6020821081036112b3576112b2611259565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112f382610ebb565b91506112fe83610ebb565b9250828203905081811115611316576113156112b9565b5b92915050565b61132581610e7d565b82525050565b600081519050919050565b600082825260208201905092915050565b60006113528261132b565b61135c8185611336565b935061136c818560208601610db3565b61137581610ddd565b840191505092915050565b6000608082019050611395600083018761131c565b6113a26020830186610f67565b6113af604083018561131c565b81810360608301526113c18184611347565b905095945050505050565b60006113d782610ebb565b91506113e283610ebb565b92508282019050808211156113fa576113f96112b9565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea264697066735822122042c102ad6aa3a0eaecc65e99a283fcf9795b4dd282f95ba59513ed80d367ea9864736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x12 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1D1E CODESIZE SUB DUP1 PUSH3 0x1D1E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x53 SWAP2 SWAP1 PUSH3 0x2C8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xA PUSH3 0x74 SWAP2 SWAP1 PUSH3 0x4E5 JUMP JUMPDEST DUP4 PUSH3 0x81 SWAP2 SWAP1 PUSH3 0x536 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xDE SWAP2 SWAP1 PUSH3 0x7C2 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xF0 SWAP2 SWAP1 PUSH3 0x7C2 JUMP JUMPDEST POP POP POP POP PUSH3 0x8A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x123 DUP2 PUSH3 0x10E JUMP JUMPDEST DUP2 EQ PUSH3 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x143 DUP2 PUSH3 0x118 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x19E DUP3 PUSH3 0x153 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1C0 JUMPI PUSH3 0x1BF PUSH3 0x164 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1D5 PUSH3 0xFA JUMP JUMPDEST SWAP1 POP PUSH3 0x1E3 DUP3 DUP3 PUSH3 0x193 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x206 JUMPI PUSH3 0x205 PUSH3 0x164 JUMP JUMPDEST JUMPDEST PUSH3 0x211 DUP3 PUSH3 0x153 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x23E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x221 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x261 PUSH3 0x25B DUP5 PUSH3 0x1E8 JUMP JUMPDEST PUSH3 0x1C9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x280 JUMPI PUSH3 0x27F PUSH3 0x14E JUMP JUMPDEST JUMPDEST PUSH3 0x28D DUP5 DUP3 DUP6 PUSH3 0x21E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2AD JUMPI PUSH3 0x2AC PUSH3 0x149 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2BF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x24A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x104 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2F4 DUP7 DUP3 DUP8 ADD PUSH3 0x132 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x318 JUMPI PUSH3 0x317 PUSH3 0x109 JUMP JUMPDEST JUMPDEST PUSH3 0x326 DUP7 DUP3 DUP8 ADD PUSH3 0x295 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x34A JUMPI PUSH3 0x349 PUSH3 0x109 JUMP JUMPDEST JUMPDEST PUSH3 0x358 DUP7 DUP3 DUP8 ADD PUSH3 0x295 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x3F0 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x3C8 JUMPI PUSH3 0x3C7 PUSH3 0x362 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x3D8 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x3E8 DUP6 PUSH3 0x391 JUMP JUMPDEST SWAP5 POP PUSH3 0x3A8 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x40B JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x4DE JUMP JUMPDEST DUP2 PUSH3 0x41B JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0x4DE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x434 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x43F JUMPI PUSH3 0x475 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x4DE JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x454 JUMPI PUSH3 0x453 PUSH3 0x362 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x46E JUMPI PUSH3 0x46D PUSH3 0x362 JUMP JUMPDEST JUMPDEST POP PUSH3 0x4DE JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x4AF JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x4A9 JUMPI PUSH3 0x4A8 PUSH3 0x362 JUMP JUMPDEST JUMPDEST PUSH3 0x4DE JUMP JUMPDEST PUSH3 0x4BE DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x39E JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x4D8 JUMPI PUSH3 0x4D7 PUSH3 0x362 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4F2 DUP3 PUSH3 0x10E JUMP JUMPDEST SWAP2 POP PUSH3 0x4FF DUP4 PUSH3 0x10E JUMP JUMPDEST SWAP3 POP PUSH3 0x52E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x3F9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x543 DUP3 PUSH3 0x10E JUMP JUMPDEST SWAP2 POP PUSH3 0x550 DUP4 PUSH3 0x10E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x560 DUP2 PUSH3 0x10E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x57A JUMPI PUSH3 0x579 PUSH3 0x362 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x5D4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x5EA JUMPI PUSH3 0x5E9 PUSH3 0x58C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x654 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x615 JUMP JUMPDEST PUSH3 0x660 DUP7 DUP4 PUSH3 0x615 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6A3 PUSH3 0x69D PUSH3 0x697 DUP5 PUSH3 0x10E JUMP JUMPDEST PUSH3 0x678 JUMP JUMPDEST PUSH3 0x10E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6BF DUP4 PUSH3 0x682 JUMP JUMPDEST PUSH3 0x6D7 PUSH3 0x6CE DUP3 PUSH3 0x6AA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x622 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x6EE PUSH3 0x6DF JUMP JUMPDEST PUSH3 0x6FB DUP2 DUP5 DUP5 PUSH3 0x6B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x723 JUMPI PUSH3 0x717 PUSH1 0x0 DUP3 PUSH3 0x6E4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x701 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x772 JUMPI PUSH3 0x73C DUP2 PUSH3 0x5F0 JUMP JUMPDEST PUSH3 0x747 DUP5 PUSH3 0x605 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x757 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x76F PUSH3 0x766 DUP6 PUSH3 0x605 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x700 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x797 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x777 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7B2 DUP4 DUP4 PUSH3 0x784 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x7CD DUP3 PUSH3 0x581 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x7E9 JUMPI PUSH3 0x7E8 PUSH3 0x164 JUMP JUMPDEST JUMPDEST PUSH3 0x7F5 DUP3 SLOAD PUSH3 0x5BB JUMP JUMPDEST PUSH3 0x802 DUP3 DUP3 DUP6 PUSH3 0x727 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x83A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x825 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x831 DUP6 DUP3 PUSH3 0x7A4 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x8A1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x84A DUP7 PUSH3 0x5F0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x874 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x84D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x894 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x890 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x784 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1465 DUP1 PUSH3 0x8B9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x281 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1219 JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x2BE SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2EA SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x337 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x30C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x337 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x31A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x560 DUP5 DUP5 DUP5 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x634 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x681 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x87C SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8C9 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x8E8 SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x914 SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x961 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x936 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x961 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x944 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x976 CALLER DUP5 DUP5 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SWAP1 POP PUSH2 0x990 DUP6 DUP6 PUSH2 0x33F JUMP JUMPDEST ISZERO PUSH2 0xA10 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8F4FFCB1 CALLER DUP7 ADDRESS DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP2 POP POP PUSH2 0xA12 JUMP JUMPDEST POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST LT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC36 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC8C SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xCF0 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD83 SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST EQ PUSH2 0xD91 JUMPI PUSH2 0xD90 PUSH2 0x1400 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF9 DUP3 PUSH2 0xD97 JUMP JUMPDEST PUSH2 0xE03 DUP2 DUP6 PUSH2 0xDA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xE13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0xE1C DUP2 PUSH2 0xDDD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE41 DUP2 DUP5 PUSH2 0xDEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE88 DUP3 PUSH2 0xE5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE98 DUP2 PUSH2 0xE7D JUMP JUMPDEST DUP2 EQ PUSH2 0xEA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB5 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECE DUP2 PUSH2 0xEBB JUMP JUMPDEST DUP2 EQ PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEEB DUP2 PUSH2 0xEC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF08 JUMPI PUSH2 0xF07 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF16 DUP6 DUP3 DUP7 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF27 DUP6 DUP3 DUP7 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF46 DUP2 PUSH2 0xF31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF70 DUP2 PUSH2 0xEBB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF8B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFAA JUMPI PUSH2 0xFA9 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB8 DUP7 DUP3 DUP8 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFC9 DUP7 DUP3 DUP8 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFDA DUP7 DUP3 DUP8 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFA DUP2 PUSH2 0xFE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1015 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1031 JUMPI PUSH2 0x1030 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x103F DUP5 DUP3 DUP6 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105E JUMPI PUSH2 0x105D PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x106C DUP5 DUP3 DUP6 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x10B7 DUP3 PUSH2 0xDDD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x10D6 JUMPI PUSH2 0x10D5 PUSH2 0x107F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E9 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP PUSH2 0x10F5 DUP3 DUP3 PUSH2 0x10AE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1115 JUMPI PUSH2 0x1114 PUSH2 0x107F JUMP JUMPDEST JUMPDEST PUSH2 0x111E DUP3 PUSH2 0xDDD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114D PUSH2 0x1148 DUP5 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1169 JUMPI PUSH2 0x1168 PUSH2 0x107A JUMP JUMPDEST JUMPDEST PUSH2 0x1174 DUP5 DUP3 DUP6 PUSH2 0x112B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1191 JUMPI PUSH2 0x1190 PUSH2 0x1075 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11A1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x113A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11C3 JUMPI PUSH2 0x11C2 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11D1 DUP7 DUP3 DUP8 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11E2 DUP7 DUP3 DUP8 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1203 JUMPI PUSH2 0x1202 PUSH2 0xE58 JUMP JUMPDEST JUMPDEST PUSH2 0x120F DUP7 DUP3 DUP8 ADD PUSH2 0x117C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1230 JUMPI PUSH2 0x122F PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x123E DUP6 DUP3 DUP7 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x124F DUP6 DUP3 DUP7 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12A0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12B3 JUMPI PUSH2 0x12B2 PUSH2 0x1259 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12F3 DUP3 PUSH2 0xEBB JUMP JUMPDEST SWAP2 POP PUSH2 0x12FE DUP4 PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1316 JUMPI PUSH2 0x1315 PUSH2 0x12B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1325 DUP2 PUSH2 0xE7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1352 DUP3 PUSH2 0x132B JUMP JUMPDEST PUSH2 0x135C DUP2 DUP6 PUSH2 0x1336 JUMP JUMPDEST SWAP4 POP PUSH2 0x136C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x1375 DUP2 PUSH2 0xDDD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1395 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x131C JUMP JUMPDEST PUSH2 0x13A2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x13AF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x131C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x13C1 DUP2 DUP5 PUSH2 0x1347 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D7 DUP3 PUSH2 0xEBB JUMP JUMPDEST SWAP2 POP PUSH2 0x13E2 DUP4 PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13FA JUMPI PUSH2 0x13F9 PUSH2 0x12B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xC1 MUL 0xAD PUSH11 0xA3A0EAECC65E99A283FCF9 PUSH26 0x5B4DD282F95BA59513ED80D367EA9864736F6C63430008180033 ","sourceMap":"219:5449:5:-:0;;;348:2;324:26;;;;;;;;;;;;;;;;;;;;1179:416;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1330:8;;;;;;;;;;;1322:17;;1318:2;:21;;;;:::i;:::-;1302:13;:37;;;;:::i;:::-;1288:11;:51;;;;1416:11;;1392:9;:21;1402:10;1392:21;;;;;;;;;;;;;;;:35;;;;1479:9;1472:4;:16;;;;;;:::i;:::-;;1540:11;1531:6;:20;;;;;;:::i;:::-;;1179:416;;;219:5449;;7:75:7;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:117::-;803:1;800;793:12;817:117;926:1;923;916:12;940:102;981:6;1032:2;1028:7;1023:2;1016:5;1012:14;1008:28;998:38;;940:102;;;:::o;1048:180::-;1096:77;1093:1;1086:88;1193:4;1190:1;1183:15;1217:4;1214:1;1207:15;1234:281;1317:27;1339:4;1317:27;:::i;:::-;1309:6;1305:40;1447:6;1435:10;1432:22;1411:18;1399:10;1396:34;1393:62;1390:88;;;1458:18;;:::i;:::-;1390:88;1498:10;1494:2;1487:22;1277:238;1234:281;;:::o;1521:129::-;1555:6;1582:20;;:::i;:::-;1572:30;;1611:33;1639:4;1631:6;1611:33;:::i;:::-;1521:129;;;:::o;1656:308::-;1718:4;1808:18;1800:6;1797:30;1794:56;;;1830:18;;:::i;:::-;1794:56;1868:29;1890:6;1868:29;:::i;:::-;1860:37;;1952:4;1946;1942:15;1934:23;;1656:308;;;:::o;1970:246::-;2051:1;2061:113;2075:6;2072:1;2069:13;2061:113;;;2160:1;2155:3;2151:11;2145:18;2141:1;2136:3;2132:11;2125:39;2097:2;2094:1;2090:10;2085:15;;2061:113;;;2208:1;2199:6;2194:3;2190:16;2183:27;2032:184;1970:246;;;:::o;2222:434::-;2311:5;2336:66;2352:49;2394:6;2352:49;:::i;:::-;2336:66;:::i;:::-;2327:75;;2425:6;2418:5;2411:21;2463:4;2456:5;2452:16;2501:3;2492:6;2487:3;2483:16;2480:25;2477:112;;;2508:79;;:::i;:::-;2477:112;2598:52;2643:6;2638:3;2633;2598:52;:::i;:::-;2317:339;2222:434;;;;;:::o;2676:355::-;2743:5;2792:3;2785:4;2777:6;2773:17;2769:27;2759:122;;2800:79;;:::i;:::-;2759:122;2910:6;2904:13;2935:90;3021:3;3013:6;3006:4;2998:6;2994:17;2935:90;:::i;:::-;2926:99;;2749:282;2676:355;;;;:::o;3037:1009::-;3145:6;3153;3161;3210:2;3198:9;3189:7;3185:23;3181:32;3178:119;;;3216:79;;:::i;:::-;3178:119;3336:1;3361:64;3417:7;3408:6;3397:9;3393:22;3361:64;:::i;:::-;3351:74;;3307:128;3495:2;3484:9;3480:18;3474:25;3526:18;3518:6;3515:30;3512:117;;;3548:79;;:::i;:::-;3512:117;3653:74;3719:7;3710:6;3699:9;3695:22;3653:74;:::i;:::-;3643:84;;3445:292;3797:2;3786:9;3782:18;3776:25;3828:18;3820:6;3817:30;3814:117;;;3850:79;;:::i;:::-;3814:117;3955:74;4021:7;4012:6;4001:9;3997:22;3955:74;:::i;:::-;3945:84;;3747:292;3037:1009;;;;;:::o;4052:180::-;4100:77;4097:1;4090:88;4197:4;4194:1;4187:15;4221:4;4218:1;4211:15;4238:102;4280:8;4327:5;4324:1;4320:13;4299:34;;4238:102;;;:::o;4346:848::-;4407:5;4414:4;4438:6;4429:15;;4462:5;4453:14;;4476:712;4497:1;4487:8;4484:15;4476:712;;;4592:4;4587:3;4583:14;4577:4;4574:24;4571:50;;;4601:18;;:::i;:::-;4571:50;4651:1;4641:8;4637:16;4634:451;;;5066:4;5059:5;5055:16;5046:25;;4634:451;5116:4;5110;5106:15;5098:23;;5146:32;5169:8;5146:32;:::i;:::-;5134:44;;4476:712;;;4346:848;;;;;;;:::o;5200:1073::-;5254:5;5445:8;5435:40;;5466:1;5457:10;;5468:5;;5435:40;5494:4;5484:36;;5511:1;5502:10;;5513:5;;5484:36;5580:4;5628:1;5623:27;;;;5664:1;5659:191;;;;5573:277;;5623:27;5641:1;5632:10;;5643:5;;;5659:191;5704:3;5694:8;5691:17;5688:43;;;5711:18;;:::i;:::-;5688:43;5760:8;5757:1;5753:16;5744:25;;5795:3;5788:5;5785:14;5782:40;;;5802:18;;:::i;:::-;5782:40;5835:5;;;5573:277;;5959:2;5949:8;5946:16;5940:3;5934:4;5931:13;5927:36;5909:2;5899:8;5896:16;5891:2;5885:4;5882:12;5878:35;5862:111;5859:246;;;6015:8;6009:4;6005:19;5996:28;;6050:3;6043:5;6040:14;6037:40;;;6057:18;;:::i;:::-;6037:40;6090:5;;5859:246;6130:42;6168:3;6158:8;6152:4;6149:1;6130:42;:::i;:::-;6115:57;;;;6204:4;6199:3;6195:14;6188:5;6185:25;6182:51;;;6213:18;;:::i;:::-;6182:51;6262:4;6255:5;6251:16;6242:25;;5200:1073;;;;;;:::o;6279:285::-;6339:5;6363:23;6381:4;6363:23;:::i;:::-;6355:31;;6407:27;6425:8;6407:27;:::i;:::-;6395:39;;6453:104;6490:66;6480:8;6474:4;6453:104;:::i;:::-;6444:113;;6279:285;;;;:::o;6570:410::-;6610:7;6633:20;6651:1;6633:20;:::i;:::-;6628:25;;6667:20;6685:1;6667:20;:::i;:::-;6662:25;;6722:1;6719;6715:9;6744:30;6762:11;6744:30;:::i;:::-;6733:41;;6923:1;6914:7;6910:15;6907:1;6904:22;6884:1;6877:9;6857:83;6834:139;;6953:18;;:::i;:::-;6834:139;6618:362;6570:410;;;;:::o;6986:99::-;7038:6;7072:5;7066:12;7056:22;;6986:99;;;:::o;7091:180::-;7139:77;7136:1;7129:88;7236:4;7233:1;7226:15;7260:4;7257:1;7250:15;7277:320;7321:6;7358:1;7352:4;7348:12;7338:22;;7405:1;7399:4;7395:12;7426:18;7416:81;;7482:4;7474:6;7470:17;7460:27;;7416:81;7544:2;7536:6;7533:14;7513:18;7510:38;7507:84;;7563:18;;:::i;:::-;7507:84;7328:269;7277:320;;;:::o;7603:141::-;7652:4;7675:3;7667:11;;7698:3;7695:1;7688:14;7732:4;7729:1;7719:18;7711:26;;7603:141;;;:::o;7750:93::-;7787:6;7834:2;7829;7822:5;7818:14;7814:23;7804:33;;7750:93;;;:::o;7849:107::-;7893:8;7943:5;7937:4;7933:16;7912:37;;7849:107;;;;:::o;7962:393::-;8031:6;8081:1;8069:10;8065:18;8104:97;8134:66;8123:9;8104:97;:::i;:::-;8222:39;8252:8;8241:9;8222:39;:::i;:::-;8210:51;;8294:4;8290:9;8283:5;8279:21;8270:30;;8343:4;8333:8;8329:19;8322:5;8319:30;8309:40;;8038:317;;7962:393;;;;;:::o;8361:60::-;8389:3;8410:5;8403:12;;8361:60;;;:::o;8427:142::-;8477:9;8510:53;8528:34;8537:24;8555:5;8537:24;:::i;:::-;8528:34;:::i;:::-;8510:53;:::i;:::-;8497:66;;8427:142;;;:::o;8575:75::-;8618:3;8639:5;8632:12;;8575:75;;;:::o;8656:269::-;8766:39;8797:7;8766:39;:::i;:::-;8827:91;8876:41;8900:16;8876:41;:::i;:::-;8868:6;8861:4;8855:11;8827:91;:::i;:::-;8821:4;8814:105;8732:193;8656:269;;;:::o;8931:73::-;8976:3;8931:73;:::o;9010:189::-;9087:32;;:::i;:::-;9128:65;9186:6;9178;9172:4;9128:65;:::i;:::-;9063:136;9010:189;;:::o;9205:186::-;9265:120;9282:3;9275:5;9272:14;9265:120;;;9336:39;9373:1;9366:5;9336:39;:::i;:::-;9309:1;9302:5;9298:13;9289:22;;9265:120;;;9205:186;;:::o;9397:543::-;9498:2;9493:3;9490:11;9487:446;;;9532:38;9564:5;9532:38;:::i;:::-;9616:29;9634:10;9616:29;:::i;:::-;9606:8;9602:44;9799:2;9787:10;9784:18;9781:49;;;9820:8;9805:23;;9781:49;9843:80;9899:22;9917:3;9899:22;:::i;:::-;9889:8;9885:37;9872:11;9843:80;:::i;:::-;9502:431;;9487:446;9397:543;;;:::o;9946:117::-;10000:8;10050:5;10044:4;10040:16;10019:37;;9946:117;;;;:::o;10069:169::-;10113:6;10146:51;10194:1;10190:6;10182:5;10179:1;10175:13;10146:51;:::i;:::-;10142:56;10227:4;10221;10217:15;10207:25;;10120:118;10069:169;;;;:::o;10243:295::-;10319:4;10465:29;10490:3;10484:4;10465:29;:::i;:::-;10457:37;;10527:3;10524:1;10520:11;10514:4;10511:21;10503:29;;10243:295;;;;:::o;10543:1395::-;10660:37;10693:3;10660:37;:::i;:::-;10762:18;10754:6;10751:30;10748:56;;;10784:18;;:::i;:::-;10748:56;10828:38;10860:4;10854:11;10828:38;:::i;:::-;10913:67;10973:6;10965;10959:4;10913:67;:::i;:::-;11007:1;11031:4;11018:17;;11063:2;11055:6;11052:14;11080:1;11075:618;;;;11737:1;11754:6;11751:77;;;11803:9;11798:3;11794:19;11788:26;11779:35;;11751:77;11854:67;11914:6;11907:5;11854:67;:::i;:::-;11848:4;11841:81;11710:222;11045:887;;11075:618;11127:4;11123:9;11115:6;11111:22;11161:37;11193:4;11161:37;:::i;:::-;11220:1;11234:208;11248:7;11245:1;11242:14;11234:208;;;11327:9;11322:3;11318:19;11312:26;11304:6;11297:42;11378:1;11370:6;11366:14;11356:24;;11425:2;11414:9;11410:18;11397:31;;11271:4;11268:1;11264:12;11259:17;;11234:208;;;11470:6;11461:7;11458:19;11455:179;;;11528:9;11523:3;11519:19;11513:26;11571:48;11613:4;11605:6;11601:17;11590:9;11571:48;:::i;:::-;11563:6;11556:64;11478:156;11455:179;11680:1;11676;11668:6;11664:14;11660:22;11654:4;11647:36;11082:611;;;11045:887;;10635:1303;;;10543:1395;;:::o;219:5449:5:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transfer_957":{"entryPoint":2622,"id":957,"parameterSlots":3,"returnSlots":0},"@allowance_818":{"entryPoint":2585,"id":818,"parameterSlots":0,"returnSlots":0},"@approveAndCall_1088":{"entryPoint":2432,"id":1088,"parameterSlots":3,"returnSlots":1},"@approve_1047":{"entryPoint":831,"id":1047,"parameterSlots":2,"returnSlots":1},"@balanceOf_812":{"entryPoint":1682,"id":812,"parameterSlots":0,"returnSlots":0},"@burnFrom_1181":{"entryPoint":1706,"id":1181,"parameterSlots":2,"returnSlots":1},"@burn_1125":{"entryPoint":1406,"id":1125,"parameterSlots":1,"returnSlots":1},"@decimals_806":{"entryPoint":1387,"id":806,"parameterSlots":0,"returnSlots":0},"@name_801":{"entryPoint":689,"id":801,"parameterSlots":0,"returnSlots":0},"@symbol_803":{"entryPoint":2267,"id":803,"parameterSlots":0,"returnSlots":0},"@totalSupply_808":{"entryPoint":1073,"id":808,"parameterSlots":0,"returnSlots":0},"@transferFrom_1018":{"entryPoint":1079,"id":1018,"parameterSlots":3,"returnSlots":1},"@transfer_977":{"entryPoint":2409,"id":977,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":4410,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3750,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":4476,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3804,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4633,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3985,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3825,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr":{"entryPoint":4522,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":4123,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4892,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3901,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":4935,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3566,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3943,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":4081,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_uint256_t_address_t_bytes_memory_ptr__to_t_address_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4992,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3916,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3623,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":4096,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":4319,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3657,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":4346,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4907,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3479,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":4918,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3490,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5068,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4840,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3709,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3889,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3677,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3771,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":4068,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":4395,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3507,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4744,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4270,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x01":{"entryPoint":5120,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":4793,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4697,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4223,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4213,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4218,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3672,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3667,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3549,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":3727,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3781,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:11616:7","nodeType":"YulBlock","src":"0:11616:7","statements":[{"body":{"nativeSrc":"66:40:7","nodeType":"YulBlock","src":"66:40:7","statements":[{"nativeSrc":"77:22:7","nodeType":"YulAssignment","src":"77:22:7","value":{"arguments":[{"name":"value","nativeSrc":"93:5:7","nodeType":"YulIdentifier","src":"93:5:7"}],"functionName":{"name":"mload","nativeSrc":"87:5:7","nodeType":"YulIdentifier","src":"87:5:7"},"nativeSrc":"87:12:7","nodeType":"YulFunctionCall","src":"87:12:7"},"variableNames":[{"name":"length","nativeSrc":"77:6:7","nodeType":"YulIdentifier","src":"77:6:7"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:7","nodeType":"YulTypedName","src":"49:5:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:7","nodeType":"YulTypedName","src":"59:6:7","type":""}],"src":"7:99:7"},{"body":{"nativeSrc":"208:73:7","nodeType":"YulBlock","src":"208:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:7","nodeType":"YulIdentifier","src":"225:3:7"},{"name":"length","nativeSrc":"230:6:7","nodeType":"YulIdentifier","src":"230:6:7"}],"functionName":{"name":"mstore","nativeSrc":"218:6:7","nodeType":"YulIdentifier","src":"218:6:7"},"nativeSrc":"218:19:7","nodeType":"YulFunctionCall","src":"218:19:7"},"nativeSrc":"218:19:7","nodeType":"YulExpressionStatement","src":"218:19:7"},{"nativeSrc":"246:29:7","nodeType":"YulAssignment","src":"246:29:7","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:7","nodeType":"YulIdentifier","src":"265:3:7"},{"kind":"number","nativeSrc":"270:4:7","nodeType":"YulLiteral","src":"270:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:7","nodeType":"YulIdentifier","src":"261:3:7"},"nativeSrc":"261:14:7","nodeType":"YulFunctionCall","src":"261:14:7"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:7","nodeType":"YulIdentifier","src":"246:11:7"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:7","nodeType":"YulTypedName","src":"180:3:7","type":""},{"name":"length","nativeSrc":"185:6:7","nodeType":"YulTypedName","src":"185:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:7","nodeType":"YulTypedName","src":"196:11:7","type":""}],"src":"112:169:7"},{"body":{"nativeSrc":"349:184:7","nodeType":"YulBlock","src":"349:184:7","statements":[{"nativeSrc":"359:10:7","nodeType":"YulVariableDeclaration","src":"359:10:7","value":{"kind":"number","nativeSrc":"368:1:7","nodeType":"YulLiteral","src":"368:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:7","nodeType":"YulTypedName","src":"363:1:7","type":""}]},{"body":{"nativeSrc":"428:63:7","nodeType":"YulBlock","src":"428:63:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:7","nodeType":"YulIdentifier","src":"453:3:7"},{"name":"i","nativeSrc":"458:1:7","nodeType":"YulIdentifier","src":"458:1:7"}],"functionName":{"name":"add","nativeSrc":"449:3:7","nodeType":"YulIdentifier","src":"449:3:7"},"nativeSrc":"449:11:7","nodeType":"YulFunctionCall","src":"449:11:7"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:7","nodeType":"YulIdentifier","src":"472:3:7"},{"name":"i","nativeSrc":"477:1:7","nodeType":"YulIdentifier","src":"477:1:7"}],"functionName":{"name":"add","nativeSrc":"468:3:7","nodeType":"YulIdentifier","src":"468:3:7"},"nativeSrc":"468:11:7","nodeType":"YulFunctionCall","src":"468:11:7"}],"functionName":{"name":"mload","nativeSrc":"462:5:7","nodeType":"YulIdentifier","src":"462:5:7"},"nativeSrc":"462:18:7","nodeType":"YulFunctionCall","src":"462:18:7"}],"functionName":{"name":"mstore","nativeSrc":"442:6:7","nodeType":"YulIdentifier","src":"442:6:7"},"nativeSrc":"442:39:7","nodeType":"YulFunctionCall","src":"442:39:7"},"nativeSrc":"442:39:7","nodeType":"YulExpressionStatement","src":"442:39:7"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:7","nodeType":"YulIdentifier","src":"389:1:7"},{"name":"length","nativeSrc":"392:6:7","nodeType":"YulIdentifier","src":"392:6:7"}],"functionName":{"name":"lt","nativeSrc":"386:2:7","nodeType":"YulIdentifier","src":"386:2:7"},"nativeSrc":"386:13:7","nodeType":"YulFunctionCall","src":"386:13:7"},"nativeSrc":"378:113:7","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:7","nodeType":"YulBlock","src":"400:19:7","statements":[{"nativeSrc":"402:15:7","nodeType":"YulAssignment","src":"402:15:7","value":{"arguments":[{"name":"i","nativeSrc":"411:1:7","nodeType":"YulIdentifier","src":"411:1:7"},{"kind":"number","nativeSrc":"414:2:7","nodeType":"YulLiteral","src":"414:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:7","nodeType":"YulIdentifier","src":"407:3:7"},"nativeSrc":"407:10:7","nodeType":"YulFunctionCall","src":"407:10:7"},"variableNames":[{"name":"i","nativeSrc":"402:1:7","nodeType":"YulIdentifier","src":"402:1:7"}]}]},"pre":{"nativeSrc":"382:3:7","nodeType":"YulBlock","src":"382:3:7","statements":[]},"src":"378:113:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:7","nodeType":"YulIdentifier","src":"511:3:7"},{"name":"length","nativeSrc":"516:6:7","nodeType":"YulIdentifier","src":"516:6:7"}],"functionName":{"name":"add","nativeSrc":"507:3:7","nodeType":"YulIdentifier","src":"507:3:7"},"nativeSrc":"507:16:7","nodeType":"YulFunctionCall","src":"507:16:7"},{"kind":"number","nativeSrc":"525:1:7","nodeType":"YulLiteral","src":"525:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:7","nodeType":"YulIdentifier","src":"500:6:7"},"nativeSrc":"500:27:7","nodeType":"YulFunctionCall","src":"500:27:7"},"nativeSrc":"500:27:7","nodeType":"YulExpressionStatement","src":"500:27:7"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:7","nodeType":"YulTypedName","src":"331:3:7","type":""},{"name":"dst","nativeSrc":"336:3:7","nodeType":"YulTypedName","src":"336:3:7","type":""},{"name":"length","nativeSrc":"341:6:7","nodeType":"YulTypedName","src":"341:6:7","type":""}],"src":"287:246:7"},{"body":{"nativeSrc":"587:54:7","nodeType":"YulBlock","src":"587:54:7","statements":[{"nativeSrc":"597:38:7","nodeType":"YulAssignment","src":"597:38:7","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:7","nodeType":"YulIdentifier","src":"615:5:7"},{"kind":"number","nativeSrc":"622:2:7","nodeType":"YulLiteral","src":"622:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:7","nodeType":"YulIdentifier","src":"611:3:7"},"nativeSrc":"611:14:7","nodeType":"YulFunctionCall","src":"611:14:7"},{"arguments":[{"kind":"number","nativeSrc":"631:2:7","nodeType":"YulLiteral","src":"631:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:7","nodeType":"YulIdentifier","src":"627:3:7"},"nativeSrc":"627:7:7","nodeType":"YulFunctionCall","src":"627:7:7"}],"functionName":{"name":"and","nativeSrc":"607:3:7","nodeType":"YulIdentifier","src":"607:3:7"},"nativeSrc":"607:28:7","nodeType":"YulFunctionCall","src":"607:28:7"},"variableNames":[{"name":"result","nativeSrc":"597:6:7","nodeType":"YulIdentifier","src":"597:6:7"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:7","nodeType":"YulTypedName","src":"570:5:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:7","nodeType":"YulTypedName","src":"580:6:7","type":""}],"src":"539:102:7"},{"body":{"nativeSrc":"739:285:7","nodeType":"YulBlock","src":"739:285:7","statements":[{"nativeSrc":"749:53:7","nodeType":"YulVariableDeclaration","src":"749:53:7","value":{"arguments":[{"name":"value","nativeSrc":"796:5:7","nodeType":"YulIdentifier","src":"796:5:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:7","nodeType":"YulIdentifier","src":"763:32:7"},"nativeSrc":"763:39:7","nodeType":"YulFunctionCall","src":"763:39:7"},"variables":[{"name":"length","nativeSrc":"753:6:7","nodeType":"YulTypedName","src":"753:6:7","type":""}]},{"nativeSrc":"811:78:7","nodeType":"YulAssignment","src":"811:78:7","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:7","nodeType":"YulIdentifier","src":"877:3:7"},{"name":"length","nativeSrc":"882:6:7","nodeType":"YulIdentifier","src":"882:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:7","nodeType":"YulIdentifier","src":"818:58:7"},"nativeSrc":"818:71:7","nodeType":"YulFunctionCall","src":"818:71:7"},"variableNames":[{"name":"pos","nativeSrc":"811:3:7","nodeType":"YulIdentifier","src":"811:3:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:7","nodeType":"YulIdentifier","src":"937:5:7"},{"kind":"number","nativeSrc":"944:4:7","nodeType":"YulLiteral","src":"944:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:7","nodeType":"YulIdentifier","src":"933:3:7"},"nativeSrc":"933:16:7","nodeType":"YulFunctionCall","src":"933:16:7"},{"name":"pos","nativeSrc":"951:3:7","nodeType":"YulIdentifier","src":"951:3:7"},{"name":"length","nativeSrc":"956:6:7","nodeType":"YulIdentifier","src":"956:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:7","nodeType":"YulIdentifier","src":"898:34:7"},"nativeSrc":"898:65:7","nodeType":"YulFunctionCall","src":"898:65:7"},"nativeSrc":"898:65:7","nodeType":"YulExpressionStatement","src":"898:65:7"},{"nativeSrc":"972:46:7","nodeType":"YulAssignment","src":"972:46:7","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:7","nodeType":"YulIdentifier","src":"983:3:7"},{"arguments":[{"name":"length","nativeSrc":"1010:6:7","nodeType":"YulIdentifier","src":"1010:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:7","nodeType":"YulIdentifier","src":"988:21:7"},"nativeSrc":"988:29:7","nodeType":"YulFunctionCall","src":"988:29:7"}],"functionName":{"name":"add","nativeSrc":"979:3:7","nodeType":"YulIdentifier","src":"979:3:7"},"nativeSrc":"979:39:7","nodeType":"YulFunctionCall","src":"979:39:7"},"variableNames":[{"name":"end","nativeSrc":"972:3:7","nodeType":"YulIdentifier","src":"972:3:7"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:7","nodeType":"YulTypedName","src":"720:5:7","type":""},{"name":"pos","nativeSrc":"727:3:7","nodeType":"YulTypedName","src":"727:3:7","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:7","nodeType":"YulTypedName","src":"735:3:7","type":""}],"src":"647:377:7"},{"body":{"nativeSrc":"1148:195:7","nodeType":"YulBlock","src":"1148:195:7","statements":[{"nativeSrc":"1158:26:7","nodeType":"YulAssignment","src":"1158:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:7","nodeType":"YulIdentifier","src":"1170:9:7"},{"kind":"number","nativeSrc":"1181:2:7","nodeType":"YulLiteral","src":"1181:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:7","nodeType":"YulIdentifier","src":"1166:3:7"},"nativeSrc":"1166:18:7","nodeType":"YulFunctionCall","src":"1166:18:7"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:7","nodeType":"YulIdentifier","src":"1158:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:7","nodeType":"YulIdentifier","src":"1205:9:7"},{"kind":"number","nativeSrc":"1216:1:7","nodeType":"YulLiteral","src":"1216:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:7","nodeType":"YulIdentifier","src":"1201:3:7"},"nativeSrc":"1201:17:7","nodeType":"YulFunctionCall","src":"1201:17:7"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:7","nodeType":"YulIdentifier","src":"1224:4:7"},{"name":"headStart","nativeSrc":"1230:9:7","nodeType":"YulIdentifier","src":"1230:9:7"}],"functionName":{"name":"sub","nativeSrc":"1220:3:7","nodeType":"YulIdentifier","src":"1220:3:7"},"nativeSrc":"1220:20:7","nodeType":"YulFunctionCall","src":"1220:20:7"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:7","nodeType":"YulIdentifier","src":"1194:6:7"},"nativeSrc":"1194:47:7","nodeType":"YulFunctionCall","src":"1194:47:7"},"nativeSrc":"1194:47:7","nodeType":"YulExpressionStatement","src":"1194:47:7"},{"nativeSrc":"1250:86:7","nodeType":"YulAssignment","src":"1250:86:7","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:7","nodeType":"YulIdentifier","src":"1322:6:7"},{"name":"tail","nativeSrc":"1331:4:7","nodeType":"YulIdentifier","src":"1331:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:7","nodeType":"YulIdentifier","src":"1258:63:7"},"nativeSrc":"1258:78:7","nodeType":"YulFunctionCall","src":"1258:78:7"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:7","nodeType":"YulIdentifier","src":"1250:4:7"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:7","nodeType":"YulTypedName","src":"1120:9:7","type":""},{"name":"value0","nativeSrc":"1132:6:7","nodeType":"YulTypedName","src":"1132:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:7","nodeType":"YulTypedName","src":"1143:4:7","type":""}],"src":"1030:313:7"},{"body":{"nativeSrc":"1389:35:7","nodeType":"YulBlock","src":"1389:35:7","statements":[{"nativeSrc":"1399:19:7","nodeType":"YulAssignment","src":"1399:19:7","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:7","nodeType":"YulLiteral","src":"1415:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:7","nodeType":"YulIdentifier","src":"1409:5:7"},"nativeSrc":"1409:9:7","nodeType":"YulFunctionCall","src":"1409:9:7"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:7","nodeType":"YulIdentifier","src":"1399:6:7"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:7","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:7","nodeType":"YulTypedName","src":"1382:6:7","type":""}],"src":"1349:75:7"},{"body":{"nativeSrc":"1519:28:7","nodeType":"YulBlock","src":"1519:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:7","nodeType":"YulLiteral","src":"1536:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:7","nodeType":"YulLiteral","src":"1539:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:7","nodeType":"YulIdentifier","src":"1529:6:7"},"nativeSrc":"1529:12:7","nodeType":"YulFunctionCall","src":"1529:12:7"},"nativeSrc":"1529:12:7","nodeType":"YulExpressionStatement","src":"1529:12:7"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:7","nodeType":"YulFunctionDefinition","src":"1430:117:7"},{"body":{"nativeSrc":"1642:28:7","nodeType":"YulBlock","src":"1642:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:7","nodeType":"YulLiteral","src":"1659:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:7","nodeType":"YulLiteral","src":"1662:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:7","nodeType":"YulIdentifier","src":"1652:6:7"},"nativeSrc":"1652:12:7","nodeType":"YulFunctionCall","src":"1652:12:7"},"nativeSrc":"1652:12:7","nodeType":"YulExpressionStatement","src":"1652:12:7"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:7","nodeType":"YulFunctionDefinition","src":"1553:117:7"},{"body":{"nativeSrc":"1721:81:7","nodeType":"YulBlock","src":"1721:81:7","statements":[{"nativeSrc":"1731:65:7","nodeType":"YulAssignment","src":"1731:65:7","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:7","nodeType":"YulIdentifier","src":"1746:5:7"},{"kind":"number","nativeSrc":"1753:42:7","nodeType":"YulLiteral","src":"1753:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:7","nodeType":"YulIdentifier","src":"1742:3:7"},"nativeSrc":"1742:54:7","nodeType":"YulFunctionCall","src":"1742:54:7"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:7","nodeType":"YulIdentifier","src":"1731:7:7"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:7","nodeType":"YulTypedName","src":"1703:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:7","nodeType":"YulTypedName","src":"1713:7:7","type":""}],"src":"1676:126:7"},{"body":{"nativeSrc":"1853:51:7","nodeType":"YulBlock","src":"1853:51:7","statements":[{"nativeSrc":"1863:35:7","nodeType":"YulAssignment","src":"1863:35:7","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:7","nodeType":"YulIdentifier","src":"1892:5:7"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:7","nodeType":"YulIdentifier","src":"1874:17:7"},"nativeSrc":"1874:24:7","nodeType":"YulFunctionCall","src":"1874:24:7"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:7","nodeType":"YulIdentifier","src":"1863:7:7"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:7","nodeType":"YulTypedName","src":"1835:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:7","nodeType":"YulTypedName","src":"1845:7:7","type":""}],"src":"1808:96:7"},{"body":{"nativeSrc":"1953:79:7","nodeType":"YulBlock","src":"1953:79:7","statements":[{"body":{"nativeSrc":"2010:16:7","nodeType":"YulBlock","src":"2010:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:7","nodeType":"YulLiteral","src":"2019:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:7","nodeType":"YulLiteral","src":"2022:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:7","nodeType":"YulIdentifier","src":"2012:6:7"},"nativeSrc":"2012:12:7","nodeType":"YulFunctionCall","src":"2012:12:7"},"nativeSrc":"2012:12:7","nodeType":"YulExpressionStatement","src":"2012:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:7","nodeType":"YulIdentifier","src":"1976:5:7"},{"arguments":[{"name":"value","nativeSrc":"2001:5:7","nodeType":"YulIdentifier","src":"2001:5:7"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:7","nodeType":"YulIdentifier","src":"1983:17:7"},"nativeSrc":"1983:24:7","nodeType":"YulFunctionCall","src":"1983:24:7"}],"functionName":{"name":"eq","nativeSrc":"1973:2:7","nodeType":"YulIdentifier","src":"1973:2:7"},"nativeSrc":"1973:35:7","nodeType":"YulFunctionCall","src":"1973:35:7"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:7","nodeType":"YulIdentifier","src":"1966:6:7"},"nativeSrc":"1966:43:7","nodeType":"YulFunctionCall","src":"1966:43:7"},"nativeSrc":"1963:63:7","nodeType":"YulIf","src":"1963:63:7"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:7","nodeType":"YulTypedName","src":"1946:5:7","type":""}],"src":"1910:122:7"},{"body":{"nativeSrc":"2090:87:7","nodeType":"YulBlock","src":"2090:87:7","statements":[{"nativeSrc":"2100:29:7","nodeType":"YulAssignment","src":"2100:29:7","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:7","nodeType":"YulIdentifier","src":"2122:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:7","nodeType":"YulIdentifier","src":"2109:12:7"},"nativeSrc":"2109:20:7","nodeType":"YulFunctionCall","src":"2109:20:7"},"variableNames":[{"name":"value","nativeSrc":"2100:5:7","nodeType":"YulIdentifier","src":"2100:5:7"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:7","nodeType":"YulIdentifier","src":"2165:5:7"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:7","nodeType":"YulIdentifier","src":"2138:26:7"},"nativeSrc":"2138:33:7","nodeType":"YulFunctionCall","src":"2138:33:7"},"nativeSrc":"2138:33:7","nodeType":"YulExpressionStatement","src":"2138:33:7"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:7","nodeType":"YulTypedName","src":"2068:6:7","type":""},{"name":"end","nativeSrc":"2076:3:7","nodeType":"YulTypedName","src":"2076:3:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:7","nodeType":"YulTypedName","src":"2084:5:7","type":""}],"src":"2038:139:7"},{"body":{"nativeSrc":"2228:32:7","nodeType":"YulBlock","src":"2228:32:7","statements":[{"nativeSrc":"2238:16:7","nodeType":"YulAssignment","src":"2238:16:7","value":{"name":"value","nativeSrc":"2249:5:7","nodeType":"YulIdentifier","src":"2249:5:7"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:7","nodeType":"YulIdentifier","src":"2238:7:7"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:7","nodeType":"YulTypedName","src":"2210:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:7","nodeType":"YulTypedName","src":"2220:7:7","type":""}],"src":"2183:77:7"},{"body":{"nativeSrc":"2309:79:7","nodeType":"YulBlock","src":"2309:79:7","statements":[{"body":{"nativeSrc":"2366:16:7","nodeType":"YulBlock","src":"2366:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:7","nodeType":"YulLiteral","src":"2375:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:7","nodeType":"YulLiteral","src":"2378:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:7","nodeType":"YulIdentifier","src":"2368:6:7"},"nativeSrc":"2368:12:7","nodeType":"YulFunctionCall","src":"2368:12:7"},"nativeSrc":"2368:12:7","nodeType":"YulExpressionStatement","src":"2368:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:7","nodeType":"YulIdentifier","src":"2332:5:7"},{"arguments":[{"name":"value","nativeSrc":"2357:5:7","nodeType":"YulIdentifier","src":"2357:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:7","nodeType":"YulIdentifier","src":"2339:17:7"},"nativeSrc":"2339:24:7","nodeType":"YulFunctionCall","src":"2339:24:7"}],"functionName":{"name":"eq","nativeSrc":"2329:2:7","nodeType":"YulIdentifier","src":"2329:2:7"},"nativeSrc":"2329:35:7","nodeType":"YulFunctionCall","src":"2329:35:7"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:7","nodeType":"YulIdentifier","src":"2322:6:7"},"nativeSrc":"2322:43:7","nodeType":"YulFunctionCall","src":"2322:43:7"},"nativeSrc":"2319:63:7","nodeType":"YulIf","src":"2319:63:7"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:7","nodeType":"YulTypedName","src":"2302:5:7","type":""}],"src":"2266:122:7"},{"body":{"nativeSrc":"2446:87:7","nodeType":"YulBlock","src":"2446:87:7","statements":[{"nativeSrc":"2456:29:7","nodeType":"YulAssignment","src":"2456:29:7","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:7","nodeType":"YulIdentifier","src":"2478:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:7","nodeType":"YulIdentifier","src":"2465:12:7"},"nativeSrc":"2465:20:7","nodeType":"YulFunctionCall","src":"2465:20:7"},"variableNames":[{"name":"value","nativeSrc":"2456:5:7","nodeType":"YulIdentifier","src":"2456:5:7"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:7","nodeType":"YulIdentifier","src":"2521:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:7","nodeType":"YulIdentifier","src":"2494:26:7"},"nativeSrc":"2494:33:7","nodeType":"YulFunctionCall","src":"2494:33:7"},"nativeSrc":"2494:33:7","nodeType":"YulExpressionStatement","src":"2494:33:7"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:7","nodeType":"YulTypedName","src":"2424:6:7","type":""},{"name":"end","nativeSrc":"2432:3:7","nodeType":"YulTypedName","src":"2432:3:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:7","nodeType":"YulTypedName","src":"2440:5:7","type":""}],"src":"2394:139:7"},{"body":{"nativeSrc":"2622:391:7","nodeType":"YulBlock","src":"2622:391:7","statements":[{"body":{"nativeSrc":"2668:83:7","nodeType":"YulBlock","src":"2668:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:7","nodeType":"YulIdentifier","src":"2670:77:7"},"nativeSrc":"2670:79:7","nodeType":"YulFunctionCall","src":"2670:79:7"},"nativeSrc":"2670:79:7","nodeType":"YulExpressionStatement","src":"2670:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:7","nodeType":"YulIdentifier","src":"2643:7:7"},{"name":"headStart","nativeSrc":"2652:9:7","nodeType":"YulIdentifier","src":"2652:9:7"}],"functionName":{"name":"sub","nativeSrc":"2639:3:7","nodeType":"YulIdentifier","src":"2639:3:7"},"nativeSrc":"2639:23:7","nodeType":"YulFunctionCall","src":"2639:23:7"},{"kind":"number","nativeSrc":"2664:2:7","nodeType":"YulLiteral","src":"2664:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:7","nodeType":"YulIdentifier","src":"2635:3:7"},"nativeSrc":"2635:32:7","nodeType":"YulFunctionCall","src":"2635:32:7"},"nativeSrc":"2632:119:7","nodeType":"YulIf","src":"2632:119:7"},{"nativeSrc":"2761:117:7","nodeType":"YulBlock","src":"2761:117:7","statements":[{"nativeSrc":"2776:15:7","nodeType":"YulVariableDeclaration","src":"2776:15:7","value":{"kind":"number","nativeSrc":"2790:1:7","nodeType":"YulLiteral","src":"2790:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:7","nodeType":"YulTypedName","src":"2780:6:7","type":""}]},{"nativeSrc":"2805:63:7","nodeType":"YulAssignment","src":"2805:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:7","nodeType":"YulIdentifier","src":"2840:9:7"},{"name":"offset","nativeSrc":"2851:6:7","nodeType":"YulIdentifier","src":"2851:6:7"}],"functionName":{"name":"add","nativeSrc":"2836:3:7","nodeType":"YulIdentifier","src":"2836:3:7"},"nativeSrc":"2836:22:7","nodeType":"YulFunctionCall","src":"2836:22:7"},{"name":"dataEnd","nativeSrc":"2860:7:7","nodeType":"YulIdentifier","src":"2860:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:7","nodeType":"YulIdentifier","src":"2815:20:7"},"nativeSrc":"2815:53:7","nodeType":"YulFunctionCall","src":"2815:53:7"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:7","nodeType":"YulIdentifier","src":"2805:6:7"}]}]},{"nativeSrc":"2888:118:7","nodeType":"YulBlock","src":"2888:118:7","statements":[{"nativeSrc":"2903:16:7","nodeType":"YulVariableDeclaration","src":"2903:16:7","value":{"kind":"number","nativeSrc":"2917:2:7","nodeType":"YulLiteral","src":"2917:2:7","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:7","nodeType":"YulTypedName","src":"2907:6:7","type":""}]},{"nativeSrc":"2933:63:7","nodeType":"YulAssignment","src":"2933:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:7","nodeType":"YulIdentifier","src":"2968:9:7"},{"name":"offset","nativeSrc":"2979:6:7","nodeType":"YulIdentifier","src":"2979:6:7"}],"functionName":{"name":"add","nativeSrc":"2964:3:7","nodeType":"YulIdentifier","src":"2964:3:7"},"nativeSrc":"2964:22:7","nodeType":"YulFunctionCall","src":"2964:22:7"},{"name":"dataEnd","nativeSrc":"2988:7:7","nodeType":"YulIdentifier","src":"2988:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:7","nodeType":"YulIdentifier","src":"2943:20:7"},"nativeSrc":"2943:53:7","nodeType":"YulFunctionCall","src":"2943:53:7"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:7","nodeType":"YulIdentifier","src":"2933:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:7","nodeType":"YulTypedName","src":"2584:9:7","type":""},{"name":"dataEnd","nativeSrc":"2595:7:7","nodeType":"YulTypedName","src":"2595:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:7","nodeType":"YulTypedName","src":"2607:6:7","type":""},{"name":"value1","nativeSrc":"2615:6:7","nodeType":"YulTypedName","src":"2615:6:7","type":""}],"src":"2539:474:7"},{"body":{"nativeSrc":"3061:48:7","nodeType":"YulBlock","src":"3061:48:7","statements":[{"nativeSrc":"3071:32:7","nodeType":"YulAssignment","src":"3071:32:7","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:7","nodeType":"YulIdentifier","src":"3096:5:7"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:7","nodeType":"YulIdentifier","src":"3089:6:7"},"nativeSrc":"3089:13:7","nodeType":"YulFunctionCall","src":"3089:13:7"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:7","nodeType":"YulIdentifier","src":"3082:6:7"},"nativeSrc":"3082:21:7","nodeType":"YulFunctionCall","src":"3082:21:7"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:7","nodeType":"YulIdentifier","src":"3071:7:7"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:7","nodeType":"YulTypedName","src":"3043:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:7","nodeType":"YulTypedName","src":"3053:7:7","type":""}],"src":"3019:90:7"},{"body":{"nativeSrc":"3174:50:7","nodeType":"YulBlock","src":"3174:50:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:7","nodeType":"YulIdentifier","src":"3191:3:7"},{"arguments":[{"name":"value","nativeSrc":"3211:5:7","nodeType":"YulIdentifier","src":"3211:5:7"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:7","nodeType":"YulIdentifier","src":"3196:14:7"},"nativeSrc":"3196:21:7","nodeType":"YulFunctionCall","src":"3196:21:7"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:7","nodeType":"YulIdentifier","src":"3184:6:7"},"nativeSrc":"3184:34:7","nodeType":"YulFunctionCall","src":"3184:34:7"},"nativeSrc":"3184:34:7","nodeType":"YulExpressionStatement","src":"3184:34:7"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:7","nodeType":"YulTypedName","src":"3162:5:7","type":""},{"name":"pos","nativeSrc":"3169:3:7","nodeType":"YulTypedName","src":"3169:3:7","type":""}],"src":"3115:109:7"},{"body":{"nativeSrc":"3322:118:7","nodeType":"YulBlock","src":"3322:118:7","statements":[{"nativeSrc":"3332:26:7","nodeType":"YulAssignment","src":"3332:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:7","nodeType":"YulIdentifier","src":"3344:9:7"},{"kind":"number","nativeSrc":"3355:2:7","nodeType":"YulLiteral","src":"3355:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:7","nodeType":"YulIdentifier","src":"3340:3:7"},"nativeSrc":"3340:18:7","nodeType":"YulFunctionCall","src":"3340:18:7"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:7","nodeType":"YulIdentifier","src":"3332:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:7","nodeType":"YulIdentifier","src":"3406:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:7","nodeType":"YulIdentifier","src":"3419:9:7"},{"kind":"number","nativeSrc":"3430:1:7","nodeType":"YulLiteral","src":"3430:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:7","nodeType":"YulIdentifier","src":"3415:3:7"},"nativeSrc":"3415:17:7","nodeType":"YulFunctionCall","src":"3415:17:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:7","nodeType":"YulIdentifier","src":"3368:37:7"},"nativeSrc":"3368:65:7","nodeType":"YulFunctionCall","src":"3368:65:7"},"nativeSrc":"3368:65:7","nodeType":"YulExpressionStatement","src":"3368:65:7"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:7","nodeType":"YulTypedName","src":"3294:9:7","type":""},{"name":"value0","nativeSrc":"3306:6:7","nodeType":"YulTypedName","src":"3306:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:7","nodeType":"YulTypedName","src":"3317:4:7","type":""}],"src":"3230:210:7"},{"body":{"nativeSrc":"3511:53:7","nodeType":"YulBlock","src":"3511:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3528:3:7","nodeType":"YulIdentifier","src":"3528:3:7"},{"arguments":[{"name":"value","nativeSrc":"3551:5:7","nodeType":"YulIdentifier","src":"3551:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3533:17:7","nodeType":"YulIdentifier","src":"3533:17:7"},"nativeSrc":"3533:24:7","nodeType":"YulFunctionCall","src":"3533:24:7"}],"functionName":{"name":"mstore","nativeSrc":"3521:6:7","nodeType":"YulIdentifier","src":"3521:6:7"},"nativeSrc":"3521:37:7","nodeType":"YulFunctionCall","src":"3521:37:7"},"nativeSrc":"3521:37:7","nodeType":"YulExpressionStatement","src":"3521:37:7"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3446:118:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3499:5:7","nodeType":"YulTypedName","src":"3499:5:7","type":""},{"name":"pos","nativeSrc":"3506:3:7","nodeType":"YulTypedName","src":"3506:3:7","type":""}],"src":"3446:118:7"},{"body":{"nativeSrc":"3668:124:7","nodeType":"YulBlock","src":"3668:124:7","statements":[{"nativeSrc":"3678:26:7","nodeType":"YulAssignment","src":"3678:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"3690:9:7","nodeType":"YulIdentifier","src":"3690:9:7"},{"kind":"number","nativeSrc":"3701:2:7","nodeType":"YulLiteral","src":"3701:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3686:3:7","nodeType":"YulIdentifier","src":"3686:3:7"},"nativeSrc":"3686:18:7","nodeType":"YulFunctionCall","src":"3686:18:7"},"variableNames":[{"name":"tail","nativeSrc":"3678:4:7","nodeType":"YulIdentifier","src":"3678:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3758:6:7","nodeType":"YulIdentifier","src":"3758:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"3771:9:7","nodeType":"YulIdentifier","src":"3771:9:7"},{"kind":"number","nativeSrc":"3782:1:7","nodeType":"YulLiteral","src":"3782:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3767:3:7","nodeType":"YulIdentifier","src":"3767:3:7"},"nativeSrc":"3767:17:7","nodeType":"YulFunctionCall","src":"3767:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3714:43:7","nodeType":"YulIdentifier","src":"3714:43:7"},"nativeSrc":"3714:71:7","nodeType":"YulFunctionCall","src":"3714:71:7"},"nativeSrc":"3714:71:7","nodeType":"YulExpressionStatement","src":"3714:71:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3570:222:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3640:9:7","nodeType":"YulTypedName","src":"3640:9:7","type":""},{"name":"value0","nativeSrc":"3652:6:7","nodeType":"YulTypedName","src":"3652:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3663:4:7","nodeType":"YulTypedName","src":"3663:4:7","type":""}],"src":"3570:222:7"},{"body":{"nativeSrc":"3898:519:7","nodeType":"YulBlock","src":"3898:519:7","statements":[{"body":{"nativeSrc":"3944:83:7","nodeType":"YulBlock","src":"3944:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3946:77:7","nodeType":"YulIdentifier","src":"3946:77:7"},"nativeSrc":"3946:79:7","nodeType":"YulFunctionCall","src":"3946:79:7"},"nativeSrc":"3946:79:7","nodeType":"YulExpressionStatement","src":"3946:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3919:7:7","nodeType":"YulIdentifier","src":"3919:7:7"},{"name":"headStart","nativeSrc":"3928:9:7","nodeType":"YulIdentifier","src":"3928:9:7"}],"functionName":{"name":"sub","nativeSrc":"3915:3:7","nodeType":"YulIdentifier","src":"3915:3:7"},"nativeSrc":"3915:23:7","nodeType":"YulFunctionCall","src":"3915:23:7"},{"kind":"number","nativeSrc":"3940:2:7","nodeType":"YulLiteral","src":"3940:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3911:3:7","nodeType":"YulIdentifier","src":"3911:3:7"},"nativeSrc":"3911:32:7","nodeType":"YulFunctionCall","src":"3911:32:7"},"nativeSrc":"3908:119:7","nodeType":"YulIf","src":"3908:119:7"},{"nativeSrc":"4037:117:7","nodeType":"YulBlock","src":"4037:117:7","statements":[{"nativeSrc":"4052:15:7","nodeType":"YulVariableDeclaration","src":"4052:15:7","value":{"kind":"number","nativeSrc":"4066:1:7","nodeType":"YulLiteral","src":"4066:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4056:6:7","nodeType":"YulTypedName","src":"4056:6:7","type":""}]},{"nativeSrc":"4081:63:7","nodeType":"YulAssignment","src":"4081:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:7","nodeType":"YulIdentifier","src":"4116:9:7"},{"name":"offset","nativeSrc":"4127:6:7","nodeType":"YulIdentifier","src":"4127:6:7"}],"functionName":{"name":"add","nativeSrc":"4112:3:7","nodeType":"YulIdentifier","src":"4112:3:7"},"nativeSrc":"4112:22:7","nodeType":"YulFunctionCall","src":"4112:22:7"},{"name":"dataEnd","nativeSrc":"4136:7:7","nodeType":"YulIdentifier","src":"4136:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4091:20:7","nodeType":"YulIdentifier","src":"4091:20:7"},"nativeSrc":"4091:53:7","nodeType":"YulFunctionCall","src":"4091:53:7"},"variableNames":[{"name":"value0","nativeSrc":"4081:6:7","nodeType":"YulIdentifier","src":"4081:6:7"}]}]},{"nativeSrc":"4164:118:7","nodeType":"YulBlock","src":"4164:118:7","statements":[{"nativeSrc":"4179:16:7","nodeType":"YulVariableDeclaration","src":"4179:16:7","value":{"kind":"number","nativeSrc":"4193:2:7","nodeType":"YulLiteral","src":"4193:2:7","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4183:6:7","nodeType":"YulTypedName","src":"4183:6:7","type":""}]},{"nativeSrc":"4209:63:7","nodeType":"YulAssignment","src":"4209:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4244:9:7","nodeType":"YulIdentifier","src":"4244:9:7"},{"name":"offset","nativeSrc":"4255:6:7","nodeType":"YulIdentifier","src":"4255:6:7"}],"functionName":{"name":"add","nativeSrc":"4240:3:7","nodeType":"YulIdentifier","src":"4240:3:7"},"nativeSrc":"4240:22:7","nodeType":"YulFunctionCall","src":"4240:22:7"},{"name":"dataEnd","nativeSrc":"4264:7:7","nodeType":"YulIdentifier","src":"4264:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4219:20:7","nodeType":"YulIdentifier","src":"4219:20:7"},"nativeSrc":"4219:53:7","nodeType":"YulFunctionCall","src":"4219:53:7"},"variableNames":[{"name":"value1","nativeSrc":"4209:6:7","nodeType":"YulIdentifier","src":"4209:6:7"}]}]},{"nativeSrc":"4292:118:7","nodeType":"YulBlock","src":"4292:118:7","statements":[{"nativeSrc":"4307:16:7","nodeType":"YulVariableDeclaration","src":"4307:16:7","value":{"kind":"number","nativeSrc":"4321:2:7","nodeType":"YulLiteral","src":"4321:2:7","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4311:6:7","nodeType":"YulTypedName","src":"4311:6:7","type":""}]},{"nativeSrc":"4337:63:7","nodeType":"YulAssignment","src":"4337:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:7","nodeType":"YulIdentifier","src":"4372:9:7"},{"name":"offset","nativeSrc":"4383:6:7","nodeType":"YulIdentifier","src":"4383:6:7"}],"functionName":{"name":"add","nativeSrc":"4368:3:7","nodeType":"YulIdentifier","src":"4368:3:7"},"nativeSrc":"4368:22:7","nodeType":"YulFunctionCall","src":"4368:22:7"},{"name":"dataEnd","nativeSrc":"4392:7:7","nodeType":"YulIdentifier","src":"4392:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4347:20:7","nodeType":"YulIdentifier","src":"4347:20:7"},"nativeSrc":"4347:53:7","nodeType":"YulFunctionCall","src":"4347:53:7"},"variableNames":[{"name":"value2","nativeSrc":"4337:6:7","nodeType":"YulIdentifier","src":"4337:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3798:619:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3852:9:7","nodeType":"YulTypedName","src":"3852:9:7","type":""},{"name":"dataEnd","nativeSrc":"3863:7:7","nodeType":"YulTypedName","src":"3863:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3875:6:7","nodeType":"YulTypedName","src":"3875:6:7","type":""},{"name":"value1","nativeSrc":"3883:6:7","nodeType":"YulTypedName","src":"3883:6:7","type":""},{"name":"value2","nativeSrc":"3891:6:7","nodeType":"YulTypedName","src":"3891:6:7","type":""}],"src":"3798:619:7"},{"body":{"nativeSrc":"4466:43:7","nodeType":"YulBlock","src":"4466:43:7","statements":[{"nativeSrc":"4476:27:7","nodeType":"YulAssignment","src":"4476:27:7","value":{"arguments":[{"name":"value","nativeSrc":"4491:5:7","nodeType":"YulIdentifier","src":"4491:5:7"},{"kind":"number","nativeSrc":"4498:4:7","nodeType":"YulLiteral","src":"4498:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4487:3:7","nodeType":"YulIdentifier","src":"4487:3:7"},"nativeSrc":"4487:16:7","nodeType":"YulFunctionCall","src":"4487:16:7"},"variableNames":[{"name":"cleaned","nativeSrc":"4476:7:7","nodeType":"YulIdentifier","src":"4476:7:7"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4423:86:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4448:5:7","nodeType":"YulTypedName","src":"4448:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4458:7:7","nodeType":"YulTypedName","src":"4458:7:7","type":""}],"src":"4423:86:7"},{"body":{"nativeSrc":"4576:51:7","nodeType":"YulBlock","src":"4576:51:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4593:3:7","nodeType":"YulIdentifier","src":"4593:3:7"},{"arguments":[{"name":"value","nativeSrc":"4614:5:7","nodeType":"YulIdentifier","src":"4614:5:7"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4598:15:7","nodeType":"YulIdentifier","src":"4598:15:7"},"nativeSrc":"4598:22:7","nodeType":"YulFunctionCall","src":"4598:22:7"}],"functionName":{"name":"mstore","nativeSrc":"4586:6:7","nodeType":"YulIdentifier","src":"4586:6:7"},"nativeSrc":"4586:35:7","nodeType":"YulFunctionCall","src":"4586:35:7"},"nativeSrc":"4586:35:7","nodeType":"YulExpressionStatement","src":"4586:35:7"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4515:112:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4564:5:7","nodeType":"YulTypedName","src":"4564:5:7","type":""},{"name":"pos","nativeSrc":"4571:3:7","nodeType":"YulTypedName","src":"4571:3:7","type":""}],"src":"4515:112:7"},{"body":{"nativeSrc":"4727:120:7","nodeType":"YulBlock","src":"4727:120:7","statements":[{"nativeSrc":"4737:26:7","nodeType":"YulAssignment","src":"4737:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"4749:9:7","nodeType":"YulIdentifier","src":"4749:9:7"},{"kind":"number","nativeSrc":"4760:2:7","nodeType":"YulLiteral","src":"4760:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4745:3:7","nodeType":"YulIdentifier","src":"4745:3:7"},"nativeSrc":"4745:18:7","nodeType":"YulFunctionCall","src":"4745:18:7"},"variableNames":[{"name":"tail","nativeSrc":"4737:4:7","nodeType":"YulIdentifier","src":"4737:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4813:6:7","nodeType":"YulIdentifier","src":"4813:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"4826:9:7","nodeType":"YulIdentifier","src":"4826:9:7"},{"kind":"number","nativeSrc":"4837:1:7","nodeType":"YulLiteral","src":"4837:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4822:3:7","nodeType":"YulIdentifier","src":"4822:3:7"},"nativeSrc":"4822:17:7","nodeType":"YulFunctionCall","src":"4822:17:7"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4773:39:7","nodeType":"YulIdentifier","src":"4773:39:7"},"nativeSrc":"4773:67:7","nodeType":"YulFunctionCall","src":"4773:67:7"},"nativeSrc":"4773:67:7","nodeType":"YulExpressionStatement","src":"4773:67:7"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4633:214:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:7","nodeType":"YulTypedName","src":"4699:9:7","type":""},{"name":"value0","nativeSrc":"4711:6:7","nodeType":"YulTypedName","src":"4711:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4722:4:7","nodeType":"YulTypedName","src":"4722:4:7","type":""}],"src":"4633:214:7"},{"body":{"nativeSrc":"4919:263:7","nodeType":"YulBlock","src":"4919:263:7","statements":[{"body":{"nativeSrc":"4965:83:7","nodeType":"YulBlock","src":"4965:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4967:77:7","nodeType":"YulIdentifier","src":"4967:77:7"},"nativeSrc":"4967:79:7","nodeType":"YulFunctionCall","src":"4967:79:7"},"nativeSrc":"4967:79:7","nodeType":"YulExpressionStatement","src":"4967:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4940:7:7","nodeType":"YulIdentifier","src":"4940:7:7"},{"name":"headStart","nativeSrc":"4949:9:7","nodeType":"YulIdentifier","src":"4949:9:7"}],"functionName":{"name":"sub","nativeSrc":"4936:3:7","nodeType":"YulIdentifier","src":"4936:3:7"},"nativeSrc":"4936:23:7","nodeType":"YulFunctionCall","src":"4936:23:7"},{"kind":"number","nativeSrc":"4961:2:7","nodeType":"YulLiteral","src":"4961:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4932:3:7","nodeType":"YulIdentifier","src":"4932:3:7"},"nativeSrc":"4932:32:7","nodeType":"YulFunctionCall","src":"4932:32:7"},"nativeSrc":"4929:119:7","nodeType":"YulIf","src":"4929:119:7"},{"nativeSrc":"5058:117:7","nodeType":"YulBlock","src":"5058:117:7","statements":[{"nativeSrc":"5073:15:7","nodeType":"YulVariableDeclaration","src":"5073:15:7","value":{"kind":"number","nativeSrc":"5087:1:7","nodeType":"YulLiteral","src":"5087:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5077:6:7","nodeType":"YulTypedName","src":"5077:6:7","type":""}]},{"nativeSrc":"5102:63:7","nodeType":"YulAssignment","src":"5102:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5137:9:7","nodeType":"YulIdentifier","src":"5137:9:7"},{"name":"offset","nativeSrc":"5148:6:7","nodeType":"YulIdentifier","src":"5148:6:7"}],"functionName":{"name":"add","nativeSrc":"5133:3:7","nodeType":"YulIdentifier","src":"5133:3:7"},"nativeSrc":"5133:22:7","nodeType":"YulFunctionCall","src":"5133:22:7"},{"name":"dataEnd","nativeSrc":"5157:7:7","nodeType":"YulIdentifier","src":"5157:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5112:20:7","nodeType":"YulIdentifier","src":"5112:20:7"},"nativeSrc":"5112:53:7","nodeType":"YulFunctionCall","src":"5112:53:7"},"variableNames":[{"name":"value0","nativeSrc":"5102:6:7","nodeType":"YulIdentifier","src":"5102:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"4853:329:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4889:9:7","nodeType":"YulTypedName","src":"4889:9:7","type":""},{"name":"dataEnd","nativeSrc":"4900:7:7","nodeType":"YulTypedName","src":"4900:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4912:6:7","nodeType":"YulTypedName","src":"4912:6:7","type":""}],"src":"4853:329:7"},{"body":{"nativeSrc":"5254:263:7","nodeType":"YulBlock","src":"5254:263:7","statements":[{"body":{"nativeSrc":"5300:83:7","nodeType":"YulBlock","src":"5300:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5302:77:7","nodeType":"YulIdentifier","src":"5302:77:7"},"nativeSrc":"5302:79:7","nodeType":"YulFunctionCall","src":"5302:79:7"},"nativeSrc":"5302:79:7","nodeType":"YulExpressionStatement","src":"5302:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5275:7:7","nodeType":"YulIdentifier","src":"5275:7:7"},{"name":"headStart","nativeSrc":"5284:9:7","nodeType":"YulIdentifier","src":"5284:9:7"}],"functionName":{"name":"sub","nativeSrc":"5271:3:7","nodeType":"YulIdentifier","src":"5271:3:7"},"nativeSrc":"5271:23:7","nodeType":"YulFunctionCall","src":"5271:23:7"},{"kind":"number","nativeSrc":"5296:2:7","nodeType":"YulLiteral","src":"5296:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5267:3:7","nodeType":"YulIdentifier","src":"5267:3:7"},"nativeSrc":"5267:32:7","nodeType":"YulFunctionCall","src":"5267:32:7"},"nativeSrc":"5264:119:7","nodeType":"YulIf","src":"5264:119:7"},{"nativeSrc":"5393:117:7","nodeType":"YulBlock","src":"5393:117:7","statements":[{"nativeSrc":"5408:15:7","nodeType":"YulVariableDeclaration","src":"5408:15:7","value":{"kind":"number","nativeSrc":"5422:1:7","nodeType":"YulLiteral","src":"5422:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5412:6:7","nodeType":"YulTypedName","src":"5412:6:7","type":""}]},{"nativeSrc":"5437:63:7","nodeType":"YulAssignment","src":"5437:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5472:9:7","nodeType":"YulIdentifier","src":"5472:9:7"},{"name":"offset","nativeSrc":"5483:6:7","nodeType":"YulIdentifier","src":"5483:6:7"}],"functionName":{"name":"add","nativeSrc":"5468:3:7","nodeType":"YulIdentifier","src":"5468:3:7"},"nativeSrc":"5468:22:7","nodeType":"YulFunctionCall","src":"5468:22:7"},{"name":"dataEnd","nativeSrc":"5492:7:7","nodeType":"YulIdentifier","src":"5492:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5447:20:7","nodeType":"YulIdentifier","src":"5447:20:7"},"nativeSrc":"5447:53:7","nodeType":"YulFunctionCall","src":"5447:53:7"},"variableNames":[{"name":"value0","nativeSrc":"5437:6:7","nodeType":"YulIdentifier","src":"5437:6:7"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5188:329:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5224:9:7","nodeType":"YulTypedName","src":"5224:9:7","type":""},{"name":"dataEnd","nativeSrc":"5235:7:7","nodeType":"YulTypedName","src":"5235:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5247:6:7","nodeType":"YulTypedName","src":"5247:6:7","type":""}],"src":"5188:329:7"},{"body":{"nativeSrc":"5612:28:7","nodeType":"YulBlock","src":"5612:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5629:1:7","nodeType":"YulLiteral","src":"5629:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5632:1:7","nodeType":"YulLiteral","src":"5632:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5622:6:7","nodeType":"YulIdentifier","src":"5622:6:7"},"nativeSrc":"5622:12:7","nodeType":"YulFunctionCall","src":"5622:12:7"},"nativeSrc":"5622:12:7","nodeType":"YulExpressionStatement","src":"5622:12:7"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5523:117:7","nodeType":"YulFunctionDefinition","src":"5523:117:7"},{"body":{"nativeSrc":"5735:28:7","nodeType":"YulBlock","src":"5735:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5752:1:7","nodeType":"YulLiteral","src":"5752:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5755:1:7","nodeType":"YulLiteral","src":"5755:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5745:6:7","nodeType":"YulIdentifier","src":"5745:6:7"},"nativeSrc":"5745:12:7","nodeType":"YulFunctionCall","src":"5745:12:7"},"nativeSrc":"5745:12:7","nodeType":"YulExpressionStatement","src":"5745:12:7"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"5646:117:7","nodeType":"YulFunctionDefinition","src":"5646:117:7"},{"body":{"nativeSrc":"5797:152:7","nodeType":"YulBlock","src":"5797:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5814:1:7","nodeType":"YulLiteral","src":"5814:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5817:77:7","nodeType":"YulLiteral","src":"5817:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5807:6:7","nodeType":"YulIdentifier","src":"5807:6:7"},"nativeSrc":"5807:88:7","nodeType":"YulFunctionCall","src":"5807:88:7"},"nativeSrc":"5807:88:7","nodeType":"YulExpressionStatement","src":"5807:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5911:1:7","nodeType":"YulLiteral","src":"5911:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"5914:4:7","nodeType":"YulLiteral","src":"5914:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"5904:6:7","nodeType":"YulIdentifier","src":"5904:6:7"},"nativeSrc":"5904:15:7","nodeType":"YulFunctionCall","src":"5904:15:7"},"nativeSrc":"5904:15:7","nodeType":"YulExpressionStatement","src":"5904:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5935:1:7","nodeType":"YulLiteral","src":"5935:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5938:4:7","nodeType":"YulLiteral","src":"5938:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5928:6:7","nodeType":"YulIdentifier","src":"5928:6:7"},"nativeSrc":"5928:15:7","nodeType":"YulFunctionCall","src":"5928:15:7"},"nativeSrc":"5928:15:7","nodeType":"YulExpressionStatement","src":"5928:15:7"}]},"name":"panic_error_0x41","nativeSrc":"5769:180:7","nodeType":"YulFunctionDefinition","src":"5769:180:7"},{"body":{"nativeSrc":"5998:238:7","nodeType":"YulBlock","src":"5998:238:7","statements":[{"nativeSrc":"6008:58:7","nodeType":"YulVariableDeclaration","src":"6008:58:7","value":{"arguments":[{"name":"memPtr","nativeSrc":"6030:6:7","nodeType":"YulIdentifier","src":"6030:6:7"},{"arguments":[{"name":"size","nativeSrc":"6060:4:7","nodeType":"YulIdentifier","src":"6060:4:7"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6038:21:7","nodeType":"YulIdentifier","src":"6038:21:7"},"nativeSrc":"6038:27:7","nodeType":"YulFunctionCall","src":"6038:27:7"}],"functionName":{"name":"add","nativeSrc":"6026:3:7","nodeType":"YulIdentifier","src":"6026:3:7"},"nativeSrc":"6026:40:7","nodeType":"YulFunctionCall","src":"6026:40:7"},"variables":[{"name":"newFreePtr","nativeSrc":"6012:10:7","nodeType":"YulTypedName","src":"6012:10:7","type":""}]},{"body":{"nativeSrc":"6177:22:7","nodeType":"YulBlock","src":"6177:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6179:16:7","nodeType":"YulIdentifier","src":"6179:16:7"},"nativeSrc":"6179:18:7","nodeType":"YulFunctionCall","src":"6179:18:7"},"nativeSrc":"6179:18:7","nodeType":"YulExpressionStatement","src":"6179:18:7"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"6120:10:7","nodeType":"YulIdentifier","src":"6120:10:7"},{"kind":"number","nativeSrc":"6132:18:7","nodeType":"YulLiteral","src":"6132:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6117:2:7","nodeType":"YulIdentifier","src":"6117:2:7"},"nativeSrc":"6117:34:7","nodeType":"YulFunctionCall","src":"6117:34:7"},{"arguments":[{"name":"newFreePtr","nativeSrc":"6156:10:7","nodeType":"YulIdentifier","src":"6156:10:7"},{"name":"memPtr","nativeSrc":"6168:6:7","nodeType":"YulIdentifier","src":"6168:6:7"}],"functionName":{"name":"lt","nativeSrc":"6153:2:7","nodeType":"YulIdentifier","src":"6153:2:7"},"nativeSrc":"6153:22:7","nodeType":"YulFunctionCall","src":"6153:22:7"}],"functionName":{"name":"or","nativeSrc":"6114:2:7","nodeType":"YulIdentifier","src":"6114:2:7"},"nativeSrc":"6114:62:7","nodeType":"YulFunctionCall","src":"6114:62:7"},"nativeSrc":"6111:88:7","nodeType":"YulIf","src":"6111:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6215:2:7","nodeType":"YulLiteral","src":"6215:2:7","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"6219:10:7","nodeType":"YulIdentifier","src":"6219:10:7"}],"functionName":{"name":"mstore","nativeSrc":"6208:6:7","nodeType":"YulIdentifier","src":"6208:6:7"},"nativeSrc":"6208:22:7","nodeType":"YulFunctionCall","src":"6208:22:7"},"nativeSrc":"6208:22:7","nodeType":"YulExpressionStatement","src":"6208:22:7"}]},"name":"finalize_allocation","nativeSrc":"5955:281:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5984:6:7","nodeType":"YulTypedName","src":"5984:6:7","type":""},{"name":"size","nativeSrc":"5992:4:7","nodeType":"YulTypedName","src":"5992:4:7","type":""}],"src":"5955:281:7"},{"body":{"nativeSrc":"6283:88:7","nodeType":"YulBlock","src":"6283:88:7","statements":[{"nativeSrc":"6293:30:7","nodeType":"YulAssignment","src":"6293:30:7","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"6303:18:7","nodeType":"YulIdentifier","src":"6303:18:7"},"nativeSrc":"6303:20:7","nodeType":"YulFunctionCall","src":"6303:20:7"},"variableNames":[{"name":"memPtr","nativeSrc":"6293:6:7","nodeType":"YulIdentifier","src":"6293:6:7"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"6352:6:7","nodeType":"YulIdentifier","src":"6352:6:7"},{"name":"size","nativeSrc":"6360:4:7","nodeType":"YulIdentifier","src":"6360:4:7"}],"functionName":{"name":"finalize_allocation","nativeSrc":"6332:19:7","nodeType":"YulIdentifier","src":"6332:19:7"},"nativeSrc":"6332:33:7","nodeType":"YulFunctionCall","src":"6332:33:7"},"nativeSrc":"6332:33:7","nodeType":"YulExpressionStatement","src":"6332:33:7"}]},"name":"allocate_memory","nativeSrc":"6242:129:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"6267:4:7","nodeType":"YulTypedName","src":"6267:4:7","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"6276:6:7","nodeType":"YulTypedName","src":"6276:6:7","type":""}],"src":"6242:129:7"},{"body":{"nativeSrc":"6443:241:7","nodeType":"YulBlock","src":"6443:241:7","statements":[{"body":{"nativeSrc":"6548:22:7","nodeType":"YulBlock","src":"6548:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6550:16:7","nodeType":"YulIdentifier","src":"6550:16:7"},"nativeSrc":"6550:18:7","nodeType":"YulFunctionCall","src":"6550:18:7"},"nativeSrc":"6550:18:7","nodeType":"YulExpressionStatement","src":"6550:18:7"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6520:6:7","nodeType":"YulIdentifier","src":"6520:6:7"},{"kind":"number","nativeSrc":"6528:18:7","nodeType":"YulLiteral","src":"6528:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6517:2:7","nodeType":"YulIdentifier","src":"6517:2:7"},"nativeSrc":"6517:30:7","nodeType":"YulFunctionCall","src":"6517:30:7"},"nativeSrc":"6514:56:7","nodeType":"YulIf","src":"6514:56:7"},{"nativeSrc":"6580:37:7","nodeType":"YulAssignment","src":"6580:37:7","value":{"arguments":[{"name":"length","nativeSrc":"6610:6:7","nodeType":"YulIdentifier","src":"6610:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6588:21:7","nodeType":"YulIdentifier","src":"6588:21:7"},"nativeSrc":"6588:29:7","nodeType":"YulFunctionCall","src":"6588:29:7"},"variableNames":[{"name":"size","nativeSrc":"6580:4:7","nodeType":"YulIdentifier","src":"6580:4:7"}]},{"nativeSrc":"6654:23:7","nodeType":"YulAssignment","src":"6654:23:7","value":{"arguments":[{"name":"size","nativeSrc":"6666:4:7","nodeType":"YulIdentifier","src":"6666:4:7"},{"kind":"number","nativeSrc":"6672:4:7","nodeType":"YulLiteral","src":"6672:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6662:3:7","nodeType":"YulIdentifier","src":"6662:3:7"},"nativeSrc":"6662:15:7","nodeType":"YulFunctionCall","src":"6662:15:7"},"variableNames":[{"name":"size","nativeSrc":"6654:4:7","nodeType":"YulIdentifier","src":"6654:4:7"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"6377:307:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"6427:6:7","nodeType":"YulTypedName","src":"6427:6:7","type":""}],"returnVariables":[{"name":"size","nativeSrc":"6438:4:7","nodeType":"YulTypedName","src":"6438:4:7","type":""}],"src":"6377:307:7"},{"body":{"nativeSrc":"6754:82:7","nodeType":"YulBlock","src":"6754:82:7","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"6777:3:7","nodeType":"YulIdentifier","src":"6777:3:7"},{"name":"src","nativeSrc":"6782:3:7","nodeType":"YulIdentifier","src":"6782:3:7"},{"name":"length","nativeSrc":"6787:6:7","nodeType":"YulIdentifier","src":"6787:6:7"}],"functionName":{"name":"calldatacopy","nativeSrc":"6764:12:7","nodeType":"YulIdentifier","src":"6764:12:7"},"nativeSrc":"6764:30:7","nodeType":"YulFunctionCall","src":"6764:30:7"},"nativeSrc":"6764:30:7","nodeType":"YulExpressionStatement","src":"6764:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6814:3:7","nodeType":"YulIdentifier","src":"6814:3:7"},{"name":"length","nativeSrc":"6819:6:7","nodeType":"YulIdentifier","src":"6819:6:7"}],"functionName":{"name":"add","nativeSrc":"6810:3:7","nodeType":"YulIdentifier","src":"6810:3:7"},"nativeSrc":"6810:16:7","nodeType":"YulFunctionCall","src":"6810:16:7"},{"kind":"number","nativeSrc":"6828:1:7","nodeType":"YulLiteral","src":"6828:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6803:6:7","nodeType":"YulIdentifier","src":"6803:6:7"},"nativeSrc":"6803:27:7","nodeType":"YulFunctionCall","src":"6803:27:7"},"nativeSrc":"6803:27:7","nodeType":"YulExpressionStatement","src":"6803:27:7"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"6690:146:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6736:3:7","nodeType":"YulTypedName","src":"6736:3:7","type":""},{"name":"dst","nativeSrc":"6741:3:7","nodeType":"YulTypedName","src":"6741:3:7","type":""},{"name":"length","nativeSrc":"6746:6:7","nodeType":"YulTypedName","src":"6746:6:7","type":""}],"src":"6690:146:7"},{"body":{"nativeSrc":"6925:340:7","nodeType":"YulBlock","src":"6925:340:7","statements":[{"nativeSrc":"6935:74:7","nodeType":"YulAssignment","src":"6935:74:7","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"7001:6:7","nodeType":"YulIdentifier","src":"7001:6:7"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"6960:40:7","nodeType":"YulIdentifier","src":"6960:40:7"},"nativeSrc":"6960:48:7","nodeType":"YulFunctionCall","src":"6960:48:7"}],"functionName":{"name":"allocate_memory","nativeSrc":"6944:15:7","nodeType":"YulIdentifier","src":"6944:15:7"},"nativeSrc":"6944:65:7","nodeType":"YulFunctionCall","src":"6944:65:7"},"variableNames":[{"name":"array","nativeSrc":"6935:5:7","nodeType":"YulIdentifier","src":"6935:5:7"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"7025:5:7","nodeType":"YulIdentifier","src":"7025:5:7"},{"name":"length","nativeSrc":"7032:6:7","nodeType":"YulIdentifier","src":"7032:6:7"}],"functionName":{"name":"mstore","nativeSrc":"7018:6:7","nodeType":"YulIdentifier","src":"7018:6:7"},"nativeSrc":"7018:21:7","nodeType":"YulFunctionCall","src":"7018:21:7"},"nativeSrc":"7018:21:7","nodeType":"YulExpressionStatement","src":"7018:21:7"},{"nativeSrc":"7048:27:7","nodeType":"YulVariableDeclaration","src":"7048:27:7","value":{"arguments":[{"name":"array","nativeSrc":"7063:5:7","nodeType":"YulIdentifier","src":"7063:5:7"},{"kind":"number","nativeSrc":"7070:4:7","nodeType":"YulLiteral","src":"7070:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7059:3:7","nodeType":"YulIdentifier","src":"7059:3:7"},"nativeSrc":"7059:16:7","nodeType":"YulFunctionCall","src":"7059:16:7"},"variables":[{"name":"dst","nativeSrc":"7052:3:7","nodeType":"YulTypedName","src":"7052:3:7","type":""}]},{"body":{"nativeSrc":"7113:83:7","nodeType":"YulBlock","src":"7113:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"7115:77:7","nodeType":"YulIdentifier","src":"7115:77:7"},"nativeSrc":"7115:79:7","nodeType":"YulFunctionCall","src":"7115:79:7"},"nativeSrc":"7115:79:7","nodeType":"YulExpressionStatement","src":"7115:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7094:3:7","nodeType":"YulIdentifier","src":"7094:3:7"},{"name":"length","nativeSrc":"7099:6:7","nodeType":"YulIdentifier","src":"7099:6:7"}],"functionName":{"name":"add","nativeSrc":"7090:3:7","nodeType":"YulIdentifier","src":"7090:3:7"},"nativeSrc":"7090:16:7","nodeType":"YulFunctionCall","src":"7090:16:7"},{"name":"end","nativeSrc":"7108:3:7","nodeType":"YulIdentifier","src":"7108:3:7"}],"functionName":{"name":"gt","nativeSrc":"7087:2:7","nodeType":"YulIdentifier","src":"7087:2:7"},"nativeSrc":"7087:25:7","nodeType":"YulFunctionCall","src":"7087:25:7"},"nativeSrc":"7084:112:7","nodeType":"YulIf","src":"7084:112:7"},{"expression":{"arguments":[{"name":"src","nativeSrc":"7242:3:7","nodeType":"YulIdentifier","src":"7242:3:7"},{"name":"dst","nativeSrc":"7247:3:7","nodeType":"YulIdentifier","src":"7247:3:7"},{"name":"length","nativeSrc":"7252:6:7","nodeType":"YulIdentifier","src":"7252:6:7"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"7205:36:7","nodeType":"YulIdentifier","src":"7205:36:7"},"nativeSrc":"7205:54:7","nodeType":"YulFunctionCall","src":"7205:54:7"},"nativeSrc":"7205:54:7","nodeType":"YulExpressionStatement","src":"7205:54:7"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"6842:423:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6898:3:7","nodeType":"YulTypedName","src":"6898:3:7","type":""},{"name":"length","nativeSrc":"6903:6:7","nodeType":"YulTypedName","src":"6903:6:7","type":""},{"name":"end","nativeSrc":"6911:3:7","nodeType":"YulTypedName","src":"6911:3:7","type":""}],"returnVariables":[{"name":"array","nativeSrc":"6919:5:7","nodeType":"YulTypedName","src":"6919:5:7","type":""}],"src":"6842:423:7"},{"body":{"nativeSrc":"7345:277:7","nodeType":"YulBlock","src":"7345:277:7","statements":[{"body":{"nativeSrc":"7394:83:7","nodeType":"YulBlock","src":"7394:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"7396:77:7","nodeType":"YulIdentifier","src":"7396:77:7"},"nativeSrc":"7396:79:7","nodeType":"YulFunctionCall","src":"7396:79:7"},"nativeSrc":"7396:79:7","nodeType":"YulExpressionStatement","src":"7396:79:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7373:6:7","nodeType":"YulIdentifier","src":"7373:6:7"},{"kind":"number","nativeSrc":"7381:4:7","nodeType":"YulLiteral","src":"7381:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7369:3:7","nodeType":"YulIdentifier","src":"7369:3:7"},"nativeSrc":"7369:17:7","nodeType":"YulFunctionCall","src":"7369:17:7"},{"name":"end","nativeSrc":"7388:3:7","nodeType":"YulIdentifier","src":"7388:3:7"}],"functionName":{"name":"slt","nativeSrc":"7365:3:7","nodeType":"YulIdentifier","src":"7365:3:7"},"nativeSrc":"7365:27:7","nodeType":"YulFunctionCall","src":"7365:27:7"}],"functionName":{"name":"iszero","nativeSrc":"7358:6:7","nodeType":"YulIdentifier","src":"7358:6:7"},"nativeSrc":"7358:35:7","nodeType":"YulFunctionCall","src":"7358:35:7"},"nativeSrc":"7355:122:7","nodeType":"YulIf","src":"7355:122:7"},{"nativeSrc":"7486:34:7","nodeType":"YulVariableDeclaration","src":"7486:34:7","value":{"arguments":[{"name":"offset","nativeSrc":"7513:6:7","nodeType":"YulIdentifier","src":"7513:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"7500:12:7","nodeType":"YulIdentifier","src":"7500:12:7"},"nativeSrc":"7500:20:7","nodeType":"YulFunctionCall","src":"7500:20:7"},"variables":[{"name":"length","nativeSrc":"7490:6:7","nodeType":"YulTypedName","src":"7490:6:7","type":""}]},{"nativeSrc":"7529:87:7","nodeType":"YulAssignment","src":"7529:87:7","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7589:6:7","nodeType":"YulIdentifier","src":"7589:6:7"},{"kind":"number","nativeSrc":"7597:4:7","nodeType":"YulLiteral","src":"7597:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7585:3:7","nodeType":"YulIdentifier","src":"7585:3:7"},"nativeSrc":"7585:17:7","nodeType":"YulFunctionCall","src":"7585:17:7"},{"name":"length","nativeSrc":"7604:6:7","nodeType":"YulIdentifier","src":"7604:6:7"},{"name":"end","nativeSrc":"7612:3:7","nodeType":"YulIdentifier","src":"7612:3:7"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"7538:46:7","nodeType":"YulIdentifier","src":"7538:46:7"},"nativeSrc":"7538:78:7","nodeType":"YulFunctionCall","src":"7538:78:7"},"variableNames":[{"name":"array","nativeSrc":"7529:5:7","nodeType":"YulIdentifier","src":"7529:5:7"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"7284:338:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7323:6:7","nodeType":"YulTypedName","src":"7323:6:7","type":""},{"name":"end","nativeSrc":"7331:3:7","nodeType":"YulTypedName","src":"7331:3:7","type":""}],"returnVariables":[{"name":"array","nativeSrc":"7339:5:7","nodeType":"YulTypedName","src":"7339:5:7","type":""}],"src":"7284:338:7"},{"body":{"nativeSrc":"7737:688:7","nodeType":"YulBlock","src":"7737:688:7","statements":[{"body":{"nativeSrc":"7783:83:7","nodeType":"YulBlock","src":"7783:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7785:77:7","nodeType":"YulIdentifier","src":"7785:77:7"},"nativeSrc":"7785:79:7","nodeType":"YulFunctionCall","src":"7785:79:7"},"nativeSrc":"7785:79:7","nodeType":"YulExpressionStatement","src":"7785:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7758:7:7","nodeType":"YulIdentifier","src":"7758:7:7"},{"name":"headStart","nativeSrc":"7767:9:7","nodeType":"YulIdentifier","src":"7767:9:7"}],"functionName":{"name":"sub","nativeSrc":"7754:3:7","nodeType":"YulIdentifier","src":"7754:3:7"},"nativeSrc":"7754:23:7","nodeType":"YulFunctionCall","src":"7754:23:7"},{"kind":"number","nativeSrc":"7779:2:7","nodeType":"YulLiteral","src":"7779:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"7750:3:7","nodeType":"YulIdentifier","src":"7750:3:7"},"nativeSrc":"7750:32:7","nodeType":"YulFunctionCall","src":"7750:32:7"},"nativeSrc":"7747:119:7","nodeType":"YulIf","src":"7747:119:7"},{"nativeSrc":"7876:117:7","nodeType":"YulBlock","src":"7876:117:7","statements":[{"nativeSrc":"7891:15:7","nodeType":"YulVariableDeclaration","src":"7891:15:7","value":{"kind":"number","nativeSrc":"7905:1:7","nodeType":"YulLiteral","src":"7905:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7895:6:7","nodeType":"YulTypedName","src":"7895:6:7","type":""}]},{"nativeSrc":"7920:63:7","nodeType":"YulAssignment","src":"7920:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7955:9:7","nodeType":"YulIdentifier","src":"7955:9:7"},{"name":"offset","nativeSrc":"7966:6:7","nodeType":"YulIdentifier","src":"7966:6:7"}],"functionName":{"name":"add","nativeSrc":"7951:3:7","nodeType":"YulIdentifier","src":"7951:3:7"},"nativeSrc":"7951:22:7","nodeType":"YulFunctionCall","src":"7951:22:7"},{"name":"dataEnd","nativeSrc":"7975:7:7","nodeType":"YulIdentifier","src":"7975:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7930:20:7","nodeType":"YulIdentifier","src":"7930:20:7"},"nativeSrc":"7930:53:7","nodeType":"YulFunctionCall","src":"7930:53:7"},"variableNames":[{"name":"value0","nativeSrc":"7920:6:7","nodeType":"YulIdentifier","src":"7920:6:7"}]}]},{"nativeSrc":"8003:118:7","nodeType":"YulBlock","src":"8003:118:7","statements":[{"nativeSrc":"8018:16:7","nodeType":"YulVariableDeclaration","src":"8018:16:7","value":{"kind":"number","nativeSrc":"8032:2:7","nodeType":"YulLiteral","src":"8032:2:7","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8022:6:7","nodeType":"YulTypedName","src":"8022:6:7","type":""}]},{"nativeSrc":"8048:63:7","nodeType":"YulAssignment","src":"8048:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8083:9:7","nodeType":"YulIdentifier","src":"8083:9:7"},{"name":"offset","nativeSrc":"8094:6:7","nodeType":"YulIdentifier","src":"8094:6:7"}],"functionName":{"name":"add","nativeSrc":"8079:3:7","nodeType":"YulIdentifier","src":"8079:3:7"},"nativeSrc":"8079:22:7","nodeType":"YulFunctionCall","src":"8079:22:7"},{"name":"dataEnd","nativeSrc":"8103:7:7","nodeType":"YulIdentifier","src":"8103:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8058:20:7","nodeType":"YulIdentifier","src":"8058:20:7"},"nativeSrc":"8058:53:7","nodeType":"YulFunctionCall","src":"8058:53:7"},"variableNames":[{"name":"value1","nativeSrc":"8048:6:7","nodeType":"YulIdentifier","src":"8048:6:7"}]}]},{"nativeSrc":"8131:287:7","nodeType":"YulBlock","src":"8131:287:7","statements":[{"nativeSrc":"8146:46:7","nodeType":"YulVariableDeclaration","src":"8146:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8177:9:7","nodeType":"YulIdentifier","src":"8177:9:7"},{"kind":"number","nativeSrc":"8188:2:7","nodeType":"YulLiteral","src":"8188:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8173:3:7","nodeType":"YulIdentifier","src":"8173:3:7"},"nativeSrc":"8173:18:7","nodeType":"YulFunctionCall","src":"8173:18:7"}],"functionName":{"name":"calldataload","nativeSrc":"8160:12:7","nodeType":"YulIdentifier","src":"8160:12:7"},"nativeSrc":"8160:32:7","nodeType":"YulFunctionCall","src":"8160:32:7"},"variables":[{"name":"offset","nativeSrc":"8150:6:7","nodeType":"YulTypedName","src":"8150:6:7","type":""}]},{"body":{"nativeSrc":"8239:83:7","nodeType":"YulBlock","src":"8239:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"8241:77:7","nodeType":"YulIdentifier","src":"8241:77:7"},"nativeSrc":"8241:79:7","nodeType":"YulFunctionCall","src":"8241:79:7"},"nativeSrc":"8241:79:7","nodeType":"YulExpressionStatement","src":"8241:79:7"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8211:6:7","nodeType":"YulIdentifier","src":"8211:6:7"},{"kind":"number","nativeSrc":"8219:18:7","nodeType":"YulLiteral","src":"8219:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8208:2:7","nodeType":"YulIdentifier","src":"8208:2:7"},"nativeSrc":"8208:30:7","nodeType":"YulFunctionCall","src":"8208:30:7"},"nativeSrc":"8205:117:7","nodeType":"YulIf","src":"8205:117:7"},{"nativeSrc":"8336:72:7","nodeType":"YulAssignment","src":"8336:72:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8380:9:7","nodeType":"YulIdentifier","src":"8380:9:7"},{"name":"offset","nativeSrc":"8391:6:7","nodeType":"YulIdentifier","src":"8391:6:7"}],"functionName":{"name":"add","nativeSrc":"8376:3:7","nodeType":"YulIdentifier","src":"8376:3:7"},"nativeSrc":"8376:22:7","nodeType":"YulFunctionCall","src":"8376:22:7"},{"name":"dataEnd","nativeSrc":"8400:7:7","nodeType":"YulIdentifier","src":"8400:7:7"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"8346:29:7","nodeType":"YulIdentifier","src":"8346:29:7"},"nativeSrc":"8346:62:7","nodeType":"YulFunctionCall","src":"8346:62:7"},"variableNames":[{"name":"value2","nativeSrc":"8336:6:7","nodeType":"YulIdentifier","src":"8336:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr","nativeSrc":"7628:797:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7691:9:7","nodeType":"YulTypedName","src":"7691:9:7","type":""},{"name":"dataEnd","nativeSrc":"7702:7:7","nodeType":"YulTypedName","src":"7702:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7714:6:7","nodeType":"YulTypedName","src":"7714:6:7","type":""},{"name":"value1","nativeSrc":"7722:6:7","nodeType":"YulTypedName","src":"7722:6:7","type":""},{"name":"value2","nativeSrc":"7730:6:7","nodeType":"YulTypedName","src":"7730:6:7","type":""}],"src":"7628:797:7"},{"body":{"nativeSrc":"8514:391:7","nodeType":"YulBlock","src":"8514:391:7","statements":[{"body":{"nativeSrc":"8560:83:7","nodeType":"YulBlock","src":"8560:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8562:77:7","nodeType":"YulIdentifier","src":"8562:77:7"},"nativeSrc":"8562:79:7","nodeType":"YulFunctionCall","src":"8562:79:7"},"nativeSrc":"8562:79:7","nodeType":"YulExpressionStatement","src":"8562:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8535:7:7","nodeType":"YulIdentifier","src":"8535:7:7"},{"name":"headStart","nativeSrc":"8544:9:7","nodeType":"YulIdentifier","src":"8544:9:7"}],"functionName":{"name":"sub","nativeSrc":"8531:3:7","nodeType":"YulIdentifier","src":"8531:3:7"},"nativeSrc":"8531:23:7","nodeType":"YulFunctionCall","src":"8531:23:7"},{"kind":"number","nativeSrc":"8556:2:7","nodeType":"YulLiteral","src":"8556:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"8527:3:7","nodeType":"YulIdentifier","src":"8527:3:7"},"nativeSrc":"8527:32:7","nodeType":"YulFunctionCall","src":"8527:32:7"},"nativeSrc":"8524:119:7","nodeType":"YulIf","src":"8524:119:7"},{"nativeSrc":"8653:117:7","nodeType":"YulBlock","src":"8653:117:7","statements":[{"nativeSrc":"8668:15:7","nodeType":"YulVariableDeclaration","src":"8668:15:7","value":{"kind":"number","nativeSrc":"8682:1:7","nodeType":"YulLiteral","src":"8682:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8672:6:7","nodeType":"YulTypedName","src":"8672:6:7","type":""}]},{"nativeSrc":"8697:63:7","nodeType":"YulAssignment","src":"8697:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8732:9:7","nodeType":"YulIdentifier","src":"8732:9:7"},{"name":"offset","nativeSrc":"8743:6:7","nodeType":"YulIdentifier","src":"8743:6:7"}],"functionName":{"name":"add","nativeSrc":"8728:3:7","nodeType":"YulIdentifier","src":"8728:3:7"},"nativeSrc":"8728:22:7","nodeType":"YulFunctionCall","src":"8728:22:7"},{"name":"dataEnd","nativeSrc":"8752:7:7","nodeType":"YulIdentifier","src":"8752:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8707:20:7","nodeType":"YulIdentifier","src":"8707:20:7"},"nativeSrc":"8707:53:7","nodeType":"YulFunctionCall","src":"8707:53:7"},"variableNames":[{"name":"value0","nativeSrc":"8697:6:7","nodeType":"YulIdentifier","src":"8697:6:7"}]}]},{"nativeSrc":"8780:118:7","nodeType":"YulBlock","src":"8780:118:7","statements":[{"nativeSrc":"8795:16:7","nodeType":"YulVariableDeclaration","src":"8795:16:7","value":{"kind":"number","nativeSrc":"8809:2:7","nodeType":"YulLiteral","src":"8809:2:7","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8799:6:7","nodeType":"YulTypedName","src":"8799:6:7","type":""}]},{"nativeSrc":"8825:63:7","nodeType":"YulAssignment","src":"8825:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8860:9:7","nodeType":"YulIdentifier","src":"8860:9:7"},{"name":"offset","nativeSrc":"8871:6:7","nodeType":"YulIdentifier","src":"8871:6:7"}],"functionName":{"name":"add","nativeSrc":"8856:3:7","nodeType":"YulIdentifier","src":"8856:3:7"},"nativeSrc":"8856:22:7","nodeType":"YulFunctionCall","src":"8856:22:7"},{"name":"dataEnd","nativeSrc":"8880:7:7","nodeType":"YulIdentifier","src":"8880:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8835:20:7","nodeType":"YulIdentifier","src":"8835:20:7"},"nativeSrc":"8835:53:7","nodeType":"YulFunctionCall","src":"8835:53:7"},"variableNames":[{"name":"value1","nativeSrc":"8825:6:7","nodeType":"YulIdentifier","src":"8825:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"8431:474:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8476:9:7","nodeType":"YulTypedName","src":"8476:9:7","type":""},{"name":"dataEnd","nativeSrc":"8487:7:7","nodeType":"YulTypedName","src":"8487:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8499:6:7","nodeType":"YulTypedName","src":"8499:6:7","type":""},{"name":"value1","nativeSrc":"8507:6:7","nodeType":"YulTypedName","src":"8507:6:7","type":""}],"src":"8431:474:7"},{"body":{"nativeSrc":"8939:152:7","nodeType":"YulBlock","src":"8939:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8956:1:7","nodeType":"YulLiteral","src":"8956:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"8959:77:7","nodeType":"YulLiteral","src":"8959:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8949:6:7","nodeType":"YulIdentifier","src":"8949:6:7"},"nativeSrc":"8949:88:7","nodeType":"YulFunctionCall","src":"8949:88:7"},"nativeSrc":"8949:88:7","nodeType":"YulExpressionStatement","src":"8949:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9053:1:7","nodeType":"YulLiteral","src":"9053:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"9056:4:7","nodeType":"YulLiteral","src":"9056:4:7","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"9046:6:7","nodeType":"YulIdentifier","src":"9046:6:7"},"nativeSrc":"9046:15:7","nodeType":"YulFunctionCall","src":"9046:15:7"},"nativeSrc":"9046:15:7","nodeType":"YulExpressionStatement","src":"9046:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9077:1:7","nodeType":"YulLiteral","src":"9077:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"9080:4:7","nodeType":"YulLiteral","src":"9080:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9070:6:7","nodeType":"YulIdentifier","src":"9070:6:7"},"nativeSrc":"9070:15:7","nodeType":"YulFunctionCall","src":"9070:15:7"},"nativeSrc":"9070:15:7","nodeType":"YulExpressionStatement","src":"9070:15:7"}]},"name":"panic_error_0x22","nativeSrc":"8911:180:7","nodeType":"YulFunctionDefinition","src":"8911:180:7"},{"body":{"nativeSrc":"9148:269:7","nodeType":"YulBlock","src":"9148:269:7","statements":[{"nativeSrc":"9158:22:7","nodeType":"YulAssignment","src":"9158:22:7","value":{"arguments":[{"name":"data","nativeSrc":"9172:4:7","nodeType":"YulIdentifier","src":"9172:4:7"},{"kind":"number","nativeSrc":"9178:1:7","nodeType":"YulLiteral","src":"9178:1:7","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"9168:3:7","nodeType":"YulIdentifier","src":"9168:3:7"},"nativeSrc":"9168:12:7","nodeType":"YulFunctionCall","src":"9168:12:7"},"variableNames":[{"name":"length","nativeSrc":"9158:6:7","nodeType":"YulIdentifier","src":"9158:6:7"}]},{"nativeSrc":"9189:38:7","nodeType":"YulVariableDeclaration","src":"9189:38:7","value":{"arguments":[{"name":"data","nativeSrc":"9219:4:7","nodeType":"YulIdentifier","src":"9219:4:7"},{"kind":"number","nativeSrc":"9225:1:7","nodeType":"YulLiteral","src":"9225:1:7","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"9215:3:7","nodeType":"YulIdentifier","src":"9215:3:7"},"nativeSrc":"9215:12:7","nodeType":"YulFunctionCall","src":"9215:12:7"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"9193:18:7","nodeType":"YulTypedName","src":"9193:18:7","type":""}]},{"body":{"nativeSrc":"9266:51:7","nodeType":"YulBlock","src":"9266:51:7","statements":[{"nativeSrc":"9280:27:7","nodeType":"YulAssignment","src":"9280:27:7","value":{"arguments":[{"name":"length","nativeSrc":"9294:6:7","nodeType":"YulIdentifier","src":"9294:6:7"},{"kind":"number","nativeSrc":"9302:4:7","nodeType":"YulLiteral","src":"9302:4:7","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"9290:3:7","nodeType":"YulIdentifier","src":"9290:3:7"},"nativeSrc":"9290:17:7","nodeType":"YulFunctionCall","src":"9290:17:7"},"variableNames":[{"name":"length","nativeSrc":"9280:6:7","nodeType":"YulIdentifier","src":"9280:6:7"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9246:18:7","nodeType":"YulIdentifier","src":"9246:18:7"}],"functionName":{"name":"iszero","nativeSrc":"9239:6:7","nodeType":"YulIdentifier","src":"9239:6:7"},"nativeSrc":"9239:26:7","nodeType":"YulFunctionCall","src":"9239:26:7"},"nativeSrc":"9236:81:7","nodeType":"YulIf","src":"9236:81:7"},{"body":{"nativeSrc":"9369:42:7","nodeType":"YulBlock","src":"9369:42:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"9383:16:7","nodeType":"YulIdentifier","src":"9383:16:7"},"nativeSrc":"9383:18:7","nodeType":"YulFunctionCall","src":"9383:18:7"},"nativeSrc":"9383:18:7","nodeType":"YulExpressionStatement","src":"9383:18:7"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9333:18:7","nodeType":"YulIdentifier","src":"9333:18:7"},{"arguments":[{"name":"length","nativeSrc":"9356:6:7","nodeType":"YulIdentifier","src":"9356:6:7"},{"kind":"number","nativeSrc":"9364:2:7","nodeType":"YulLiteral","src":"9364:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"9353:2:7","nodeType":"YulIdentifier","src":"9353:2:7"},"nativeSrc":"9353:14:7","nodeType":"YulFunctionCall","src":"9353:14:7"}],"functionName":{"name":"eq","nativeSrc":"9330:2:7","nodeType":"YulIdentifier","src":"9330:2:7"},"nativeSrc":"9330:38:7","nodeType":"YulFunctionCall","src":"9330:38:7"},"nativeSrc":"9327:84:7","nodeType":"YulIf","src":"9327:84:7"}]},"name":"extract_byte_array_length","nativeSrc":"9097:320:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"9132:4:7","nodeType":"YulTypedName","src":"9132:4:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"9141:6:7","nodeType":"YulTypedName","src":"9141:6:7","type":""}],"src":"9097:320:7"},{"body":{"nativeSrc":"9451:152:7","nodeType":"YulBlock","src":"9451:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9468:1:7","nodeType":"YulLiteral","src":"9468:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"9471:77:7","nodeType":"YulLiteral","src":"9471:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9461:6:7","nodeType":"YulIdentifier","src":"9461:6:7"},"nativeSrc":"9461:88:7","nodeType":"YulFunctionCall","src":"9461:88:7"},"nativeSrc":"9461:88:7","nodeType":"YulExpressionStatement","src":"9461:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9565:1:7","nodeType":"YulLiteral","src":"9565:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"9568:4:7","nodeType":"YulLiteral","src":"9568:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"9558:6:7","nodeType":"YulIdentifier","src":"9558:6:7"},"nativeSrc":"9558:15:7","nodeType":"YulFunctionCall","src":"9558:15:7"},"nativeSrc":"9558:15:7","nodeType":"YulExpressionStatement","src":"9558:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9589:1:7","nodeType":"YulLiteral","src":"9589:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"9592:4:7","nodeType":"YulLiteral","src":"9592:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9582:6:7","nodeType":"YulIdentifier","src":"9582:6:7"},"nativeSrc":"9582:15:7","nodeType":"YulFunctionCall","src":"9582:15:7"},"nativeSrc":"9582:15:7","nodeType":"YulExpressionStatement","src":"9582:15:7"}]},"name":"panic_error_0x11","nativeSrc":"9423:180:7","nodeType":"YulFunctionDefinition","src":"9423:180:7"},{"body":{"nativeSrc":"9654:149:7","nodeType":"YulBlock","src":"9654:149:7","statements":[{"nativeSrc":"9664:25:7","nodeType":"YulAssignment","src":"9664:25:7","value":{"arguments":[{"name":"x","nativeSrc":"9687:1:7","nodeType":"YulIdentifier","src":"9687:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9669:17:7","nodeType":"YulIdentifier","src":"9669:17:7"},"nativeSrc":"9669:20:7","nodeType":"YulFunctionCall","src":"9669:20:7"},"variableNames":[{"name":"x","nativeSrc":"9664:1:7","nodeType":"YulIdentifier","src":"9664:1:7"}]},{"nativeSrc":"9698:25:7","nodeType":"YulAssignment","src":"9698:25:7","value":{"arguments":[{"name":"y","nativeSrc":"9721:1:7","nodeType":"YulIdentifier","src":"9721:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9703:17:7","nodeType":"YulIdentifier","src":"9703:17:7"},"nativeSrc":"9703:20:7","nodeType":"YulFunctionCall","src":"9703:20:7"},"variableNames":[{"name":"y","nativeSrc":"9698:1:7","nodeType":"YulIdentifier","src":"9698:1:7"}]},{"nativeSrc":"9732:17:7","nodeType":"YulAssignment","src":"9732:17:7","value":{"arguments":[{"name":"x","nativeSrc":"9744:1:7","nodeType":"YulIdentifier","src":"9744:1:7"},{"name":"y","nativeSrc":"9747:1:7","nodeType":"YulIdentifier","src":"9747:1:7"}],"functionName":{"name":"sub","nativeSrc":"9740:3:7","nodeType":"YulIdentifier","src":"9740:3:7"},"nativeSrc":"9740:9:7","nodeType":"YulFunctionCall","src":"9740:9:7"},"variableNames":[{"name":"diff","nativeSrc":"9732:4:7","nodeType":"YulIdentifier","src":"9732:4:7"}]},{"body":{"nativeSrc":"9774:22:7","nodeType":"YulBlock","src":"9774:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9776:16:7","nodeType":"YulIdentifier","src":"9776:16:7"},"nativeSrc":"9776:18:7","nodeType":"YulFunctionCall","src":"9776:18:7"},"nativeSrc":"9776:18:7","nodeType":"YulExpressionStatement","src":"9776:18:7"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"9765:4:7","nodeType":"YulIdentifier","src":"9765:4:7"},{"name":"x","nativeSrc":"9771:1:7","nodeType":"YulIdentifier","src":"9771:1:7"}],"functionName":{"name":"gt","nativeSrc":"9762:2:7","nodeType":"YulIdentifier","src":"9762:2:7"},"nativeSrc":"9762:11:7","nodeType":"YulFunctionCall","src":"9762:11:7"},"nativeSrc":"9759:37:7","nodeType":"YulIf","src":"9759:37:7"}]},"name":"checked_sub_t_uint256","nativeSrc":"9609:194:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9640:1:7","nodeType":"YulTypedName","src":"9640:1:7","type":""},{"name":"y","nativeSrc":"9643:1:7","nodeType":"YulTypedName","src":"9643:1:7","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"9649:4:7","nodeType":"YulTypedName","src":"9649:4:7","type":""}],"src":"9609:194:7"},{"body":{"nativeSrc":"9874:53:7","nodeType":"YulBlock","src":"9874:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9891:3:7","nodeType":"YulIdentifier","src":"9891:3:7"},{"arguments":[{"name":"value","nativeSrc":"9914:5:7","nodeType":"YulIdentifier","src":"9914:5:7"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"9896:17:7","nodeType":"YulIdentifier","src":"9896:17:7"},"nativeSrc":"9896:24:7","nodeType":"YulFunctionCall","src":"9896:24:7"}],"functionName":{"name":"mstore","nativeSrc":"9884:6:7","nodeType":"YulIdentifier","src":"9884:6:7"},"nativeSrc":"9884:37:7","nodeType":"YulFunctionCall","src":"9884:37:7"},"nativeSrc":"9884:37:7","nodeType":"YulExpressionStatement","src":"9884:37:7"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9809:118:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9862:5:7","nodeType":"YulTypedName","src":"9862:5:7","type":""},{"name":"pos","nativeSrc":"9869:3:7","nodeType":"YulTypedName","src":"9869:3:7","type":""}],"src":"9809:118:7"},{"body":{"nativeSrc":"9991:40:7","nodeType":"YulBlock","src":"9991:40:7","statements":[{"nativeSrc":"10002:22:7","nodeType":"YulAssignment","src":"10002:22:7","value":{"arguments":[{"name":"value","nativeSrc":"10018:5:7","nodeType":"YulIdentifier","src":"10018:5:7"}],"functionName":{"name":"mload","nativeSrc":"10012:5:7","nodeType":"YulIdentifier","src":"10012:5:7"},"nativeSrc":"10012:12:7","nodeType":"YulFunctionCall","src":"10012:12:7"},"variableNames":[{"name":"length","nativeSrc":"10002:6:7","nodeType":"YulIdentifier","src":"10002:6:7"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"9933:98:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9974:5:7","nodeType":"YulTypedName","src":"9974:5:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"9984:6:7","nodeType":"YulTypedName","src":"9984:6:7","type":""}],"src":"9933:98:7"},{"body":{"nativeSrc":"10132:73:7","nodeType":"YulBlock","src":"10132:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10149:3:7","nodeType":"YulIdentifier","src":"10149:3:7"},{"name":"length","nativeSrc":"10154:6:7","nodeType":"YulIdentifier","src":"10154:6:7"}],"functionName":{"name":"mstore","nativeSrc":"10142:6:7","nodeType":"YulIdentifier","src":"10142:6:7"},"nativeSrc":"10142:19:7","nodeType":"YulFunctionCall","src":"10142:19:7"},"nativeSrc":"10142:19:7","nodeType":"YulExpressionStatement","src":"10142:19:7"},{"nativeSrc":"10170:29:7","nodeType":"YulAssignment","src":"10170:29:7","value":{"arguments":[{"name":"pos","nativeSrc":"10189:3:7","nodeType":"YulIdentifier","src":"10189:3:7"},{"kind":"number","nativeSrc":"10194:4:7","nodeType":"YulLiteral","src":"10194:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10185:3:7","nodeType":"YulIdentifier","src":"10185:3:7"},"nativeSrc":"10185:14:7","nodeType":"YulFunctionCall","src":"10185:14:7"},"variableNames":[{"name":"updated_pos","nativeSrc":"10170:11:7","nodeType":"YulIdentifier","src":"10170:11:7"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"10037:168:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10104:3:7","nodeType":"YulTypedName","src":"10104:3:7","type":""},{"name":"length","nativeSrc":"10109:6:7","nodeType":"YulTypedName","src":"10109:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"10120:11:7","nodeType":"YulTypedName","src":"10120:11:7","type":""}],"src":"10037:168:7"},{"body":{"nativeSrc":"10301:283:7","nodeType":"YulBlock","src":"10301:283:7","statements":[{"nativeSrc":"10311:52:7","nodeType":"YulVariableDeclaration","src":"10311:52:7","value":{"arguments":[{"name":"value","nativeSrc":"10357:5:7","nodeType":"YulIdentifier","src":"10357:5:7"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"10325:31:7","nodeType":"YulIdentifier","src":"10325:31:7"},"nativeSrc":"10325:38:7","nodeType":"YulFunctionCall","src":"10325:38:7"},"variables":[{"name":"length","nativeSrc":"10315:6:7","nodeType":"YulTypedName","src":"10315:6:7","type":""}]},{"nativeSrc":"10372:77:7","nodeType":"YulAssignment","src":"10372:77:7","value":{"arguments":[{"name":"pos","nativeSrc":"10437:3:7","nodeType":"YulIdentifier","src":"10437:3:7"},{"name":"length","nativeSrc":"10442:6:7","nodeType":"YulIdentifier","src":"10442:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"10379:57:7","nodeType":"YulIdentifier","src":"10379:57:7"},"nativeSrc":"10379:70:7","nodeType":"YulFunctionCall","src":"10379:70:7"},"variableNames":[{"name":"pos","nativeSrc":"10372:3:7","nodeType":"YulIdentifier","src":"10372:3:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10497:5:7","nodeType":"YulIdentifier","src":"10497:5:7"},{"kind":"number","nativeSrc":"10504:4:7","nodeType":"YulLiteral","src":"10504:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10493:3:7","nodeType":"YulIdentifier","src":"10493:3:7"},"nativeSrc":"10493:16:7","nodeType":"YulFunctionCall","src":"10493:16:7"},{"name":"pos","nativeSrc":"10511:3:7","nodeType":"YulIdentifier","src":"10511:3:7"},{"name":"length","nativeSrc":"10516:6:7","nodeType":"YulIdentifier","src":"10516:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10458:34:7","nodeType":"YulIdentifier","src":"10458:34:7"},"nativeSrc":"10458:65:7","nodeType":"YulFunctionCall","src":"10458:65:7"},"nativeSrc":"10458:65:7","nodeType":"YulExpressionStatement","src":"10458:65:7"},{"nativeSrc":"10532:46:7","nodeType":"YulAssignment","src":"10532:46:7","value":{"arguments":[{"name":"pos","nativeSrc":"10543:3:7","nodeType":"YulIdentifier","src":"10543:3:7"},{"arguments":[{"name":"length","nativeSrc":"10570:6:7","nodeType":"YulIdentifier","src":"10570:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10548:21:7","nodeType":"YulIdentifier","src":"10548:21:7"},"nativeSrc":"10548:29:7","nodeType":"YulFunctionCall","src":"10548:29:7"}],"functionName":{"name":"add","nativeSrc":"10539:3:7","nodeType":"YulIdentifier","src":"10539:3:7"},"nativeSrc":"10539:39:7","nodeType":"YulFunctionCall","src":"10539:39:7"},"variableNames":[{"name":"end","nativeSrc":"10532:3:7","nodeType":"YulIdentifier","src":"10532:3:7"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"10211:373:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10282:5:7","nodeType":"YulTypedName","src":"10282:5:7","type":""},{"name":"pos","nativeSrc":"10289:3:7","nodeType":"YulTypedName","src":"10289:3:7","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10297:3:7","nodeType":"YulTypedName","src":"10297:3:7","type":""}],"src":"10211:373:7"},{"body":{"nativeSrc":"10790:440:7","nodeType":"YulBlock","src":"10790:440:7","statements":[{"nativeSrc":"10800:27:7","nodeType":"YulAssignment","src":"10800:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"10812:9:7","nodeType":"YulIdentifier","src":"10812:9:7"},{"kind":"number","nativeSrc":"10823:3:7","nodeType":"YulLiteral","src":"10823:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10808:3:7","nodeType":"YulIdentifier","src":"10808:3:7"},"nativeSrc":"10808:19:7","nodeType":"YulFunctionCall","src":"10808:19:7"},"variableNames":[{"name":"tail","nativeSrc":"10800:4:7","nodeType":"YulIdentifier","src":"10800:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10881:6:7","nodeType":"YulIdentifier","src":"10881:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"10894:9:7","nodeType":"YulIdentifier","src":"10894:9:7"},{"kind":"number","nativeSrc":"10905:1:7","nodeType":"YulLiteral","src":"10905:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10890:3:7","nodeType":"YulIdentifier","src":"10890:3:7"},"nativeSrc":"10890:17:7","nodeType":"YulFunctionCall","src":"10890:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10837:43:7","nodeType":"YulIdentifier","src":"10837:43:7"},"nativeSrc":"10837:71:7","nodeType":"YulFunctionCall","src":"10837:71:7"},"nativeSrc":"10837:71:7","nodeType":"YulExpressionStatement","src":"10837:71:7"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10962:6:7","nodeType":"YulIdentifier","src":"10962:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"10975:9:7","nodeType":"YulIdentifier","src":"10975:9:7"},{"kind":"number","nativeSrc":"10986:2:7","nodeType":"YulLiteral","src":"10986:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10971:3:7","nodeType":"YulIdentifier","src":"10971:3:7"},"nativeSrc":"10971:18:7","nodeType":"YulFunctionCall","src":"10971:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10918:43:7","nodeType":"YulIdentifier","src":"10918:43:7"},"nativeSrc":"10918:72:7","nodeType":"YulFunctionCall","src":"10918:72:7"},"nativeSrc":"10918:72:7","nodeType":"YulExpressionStatement","src":"10918:72:7"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11044:6:7","nodeType":"YulIdentifier","src":"11044:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"11057:9:7","nodeType":"YulIdentifier","src":"11057:9:7"},{"kind":"number","nativeSrc":"11068:2:7","nodeType":"YulLiteral","src":"11068:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11053:3:7","nodeType":"YulIdentifier","src":"11053:3:7"},"nativeSrc":"11053:18:7","nodeType":"YulFunctionCall","src":"11053:18:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11000:43:7","nodeType":"YulIdentifier","src":"11000:43:7"},"nativeSrc":"11000:72:7","nodeType":"YulFunctionCall","src":"11000:72:7"},"nativeSrc":"11000:72:7","nodeType":"YulExpressionStatement","src":"11000:72:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11093:9:7","nodeType":"YulIdentifier","src":"11093:9:7"},{"kind":"number","nativeSrc":"11104:2:7","nodeType":"YulLiteral","src":"11104:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11089:3:7","nodeType":"YulIdentifier","src":"11089:3:7"},"nativeSrc":"11089:18:7","nodeType":"YulFunctionCall","src":"11089:18:7"},{"arguments":[{"name":"tail","nativeSrc":"11113:4:7","nodeType":"YulIdentifier","src":"11113:4:7"},{"name":"headStart","nativeSrc":"11119:9:7","nodeType":"YulIdentifier","src":"11119:9:7"}],"functionName":{"name":"sub","nativeSrc":"11109:3:7","nodeType":"YulIdentifier","src":"11109:3:7"},"nativeSrc":"11109:20:7","nodeType":"YulFunctionCall","src":"11109:20:7"}],"functionName":{"name":"mstore","nativeSrc":"11082:6:7","nodeType":"YulIdentifier","src":"11082:6:7"},"nativeSrc":"11082:48:7","nodeType":"YulFunctionCall","src":"11082:48:7"},"nativeSrc":"11082:48:7","nodeType":"YulExpressionStatement","src":"11082:48:7"},{"nativeSrc":"11139:84:7","nodeType":"YulAssignment","src":"11139:84:7","value":{"arguments":[{"name":"value3","nativeSrc":"11209:6:7","nodeType":"YulIdentifier","src":"11209:6:7"},{"name":"tail","nativeSrc":"11218:4:7","nodeType":"YulIdentifier","src":"11218:4:7"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"11147:61:7","nodeType":"YulIdentifier","src":"11147:61:7"},"nativeSrc":"11147:76:7","nodeType":"YulFunctionCall","src":"11147:76:7"},"variableNames":[{"name":"tail","nativeSrc":"11139:4:7","nodeType":"YulIdentifier","src":"11139:4:7"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address_t_bytes_memory_ptr__to_t_address_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"10590:640:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10738:9:7","nodeType":"YulTypedName","src":"10738:9:7","type":""},{"name":"value3","nativeSrc":"10750:6:7","nodeType":"YulTypedName","src":"10750:6:7","type":""},{"name":"value2","nativeSrc":"10758:6:7","nodeType":"YulTypedName","src":"10758:6:7","type":""},{"name":"value1","nativeSrc":"10766:6:7","nodeType":"YulTypedName","src":"10766:6:7","type":""},{"name":"value0","nativeSrc":"10774:6:7","nodeType":"YulTypedName","src":"10774:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10785:4:7","nodeType":"YulTypedName","src":"10785:4:7","type":""}],"src":"10590:640:7"},{"body":{"nativeSrc":"11280:147:7","nodeType":"YulBlock","src":"11280:147:7","statements":[{"nativeSrc":"11290:25:7","nodeType":"YulAssignment","src":"11290:25:7","value":{"arguments":[{"name":"x","nativeSrc":"11313:1:7","nodeType":"YulIdentifier","src":"11313:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11295:17:7","nodeType":"YulIdentifier","src":"11295:17:7"},"nativeSrc":"11295:20:7","nodeType":"YulFunctionCall","src":"11295:20:7"},"variableNames":[{"name":"x","nativeSrc":"11290:1:7","nodeType":"YulIdentifier","src":"11290:1:7"}]},{"nativeSrc":"11324:25:7","nodeType":"YulAssignment","src":"11324:25:7","value":{"arguments":[{"name":"y","nativeSrc":"11347:1:7","nodeType":"YulIdentifier","src":"11347:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11329:17:7","nodeType":"YulIdentifier","src":"11329:17:7"},"nativeSrc":"11329:20:7","nodeType":"YulFunctionCall","src":"11329:20:7"},"variableNames":[{"name":"y","nativeSrc":"11324:1:7","nodeType":"YulIdentifier","src":"11324:1:7"}]},{"nativeSrc":"11358:16:7","nodeType":"YulAssignment","src":"11358:16:7","value":{"arguments":[{"name":"x","nativeSrc":"11369:1:7","nodeType":"YulIdentifier","src":"11369:1:7"},{"name":"y","nativeSrc":"11372:1:7","nodeType":"YulIdentifier","src":"11372:1:7"}],"functionName":{"name":"add","nativeSrc":"11365:3:7","nodeType":"YulIdentifier","src":"11365:3:7"},"nativeSrc":"11365:9:7","nodeType":"YulFunctionCall","src":"11365:9:7"},"variableNames":[{"name":"sum","nativeSrc":"11358:3:7","nodeType":"YulIdentifier","src":"11358:3:7"}]},{"body":{"nativeSrc":"11398:22:7","nodeType":"YulBlock","src":"11398:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11400:16:7","nodeType":"YulIdentifier","src":"11400:16:7"},"nativeSrc":"11400:18:7","nodeType":"YulFunctionCall","src":"11400:18:7"},"nativeSrc":"11400:18:7","nodeType":"YulExpressionStatement","src":"11400:18:7"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"11390:1:7","nodeType":"YulIdentifier","src":"11390:1:7"},{"name":"sum","nativeSrc":"11393:3:7","nodeType":"YulIdentifier","src":"11393:3:7"}],"functionName":{"name":"gt","nativeSrc":"11387:2:7","nodeType":"YulIdentifier","src":"11387:2:7"},"nativeSrc":"11387:10:7","nodeType":"YulFunctionCall","src":"11387:10:7"},"nativeSrc":"11384:36:7","nodeType":"YulIf","src":"11384:36:7"}]},"name":"checked_add_t_uint256","nativeSrc":"11236:191:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11267:1:7","nodeType":"YulTypedName","src":"11267:1:7","type":""},{"name":"y","nativeSrc":"11270:1:7","nodeType":"YulTypedName","src":"11270:1:7","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"11276:3:7","nodeType":"YulTypedName","src":"11276:3:7","type":""}],"src":"11236:191:7"},{"body":{"nativeSrc":"11461:152:7","nodeType":"YulBlock","src":"11461:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11478:1:7","nodeType":"YulLiteral","src":"11478:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"11481:77:7","nodeType":"YulLiteral","src":"11481:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11471:6:7","nodeType":"YulIdentifier","src":"11471:6:7"},"nativeSrc":"11471:88:7","nodeType":"YulFunctionCall","src":"11471:88:7"},"nativeSrc":"11471:88:7","nodeType":"YulExpressionStatement","src":"11471:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11575:1:7","nodeType":"YulLiteral","src":"11575:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"11578:4:7","nodeType":"YulLiteral","src":"11578:4:7","type":"","value":"0x01"}],"functionName":{"name":"mstore","nativeSrc":"11568:6:7","nodeType":"YulIdentifier","src":"11568:6:7"},"nativeSrc":"11568:15:7","nodeType":"YulFunctionCall","src":"11568:15:7"},"nativeSrc":"11568:15:7","nodeType":"YulExpressionStatement","src":"11568:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11599:1:7","nodeType":"YulLiteral","src":"11599:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"11602:4:7","nodeType":"YulLiteral","src":"11602:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11592:6:7","nodeType":"YulIdentifier","src":"11592:6:7"},"nativeSrc":"11592:15:7","nodeType":"YulFunctionCall","src":"11592:15:7"},"nativeSrc":"11592:15:7","nodeType":"YulExpressionStatement","src":"11592:15:7"}]},"name":"panic_error_0x01","nativeSrc":"11433:180:7","nodeType":"YulFunctionDefinition","src":"11433:180:7"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_bytes_memory_ptr__to_t_address_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x281 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1219 JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x2BE SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2EA SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x337 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x30C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x337 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x31A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x560 DUP5 DUP5 DUP5 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x634 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x681 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x87C SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8C9 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x8E8 SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x914 SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x961 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x936 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x961 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x944 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x976 CALLER DUP5 DUP5 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SWAP1 POP PUSH2 0x990 DUP6 DUP6 PUSH2 0x33F JUMP JUMPDEST ISZERO PUSH2 0xA10 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8F4FFCB1 CALLER DUP7 ADDRESS DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP2 POP POP PUSH2 0xA12 JUMP JUMPDEST POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST LT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC36 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC8C SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xCF0 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD83 SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST EQ PUSH2 0xD91 JUMPI PUSH2 0xD90 PUSH2 0x1400 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF9 DUP3 PUSH2 0xD97 JUMP JUMPDEST PUSH2 0xE03 DUP2 DUP6 PUSH2 0xDA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xE13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0xE1C DUP2 PUSH2 0xDDD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE41 DUP2 DUP5 PUSH2 0xDEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE88 DUP3 PUSH2 0xE5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE98 DUP2 PUSH2 0xE7D JUMP JUMPDEST DUP2 EQ PUSH2 0xEA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB5 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECE DUP2 PUSH2 0xEBB JUMP JUMPDEST DUP2 EQ PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEEB DUP2 PUSH2 0xEC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF08 JUMPI PUSH2 0xF07 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF16 DUP6 DUP3 DUP7 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF27 DUP6 DUP3 DUP7 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF46 DUP2 PUSH2 0xF31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF70 DUP2 PUSH2 0xEBB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF8B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFAA JUMPI PUSH2 0xFA9 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB8 DUP7 DUP3 DUP8 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFC9 DUP7 DUP3 DUP8 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFDA DUP7 DUP3 DUP8 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFA DUP2 PUSH2 0xFE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1015 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1031 JUMPI PUSH2 0x1030 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x103F DUP5 DUP3 DUP6 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105E JUMPI PUSH2 0x105D PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x106C DUP5 DUP3 DUP6 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x10B7 DUP3 PUSH2 0xDDD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x10D6 JUMPI PUSH2 0x10D5 PUSH2 0x107F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E9 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP PUSH2 0x10F5 DUP3 DUP3 PUSH2 0x10AE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1115 JUMPI PUSH2 0x1114 PUSH2 0x107F JUMP JUMPDEST JUMPDEST PUSH2 0x111E DUP3 PUSH2 0xDDD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114D PUSH2 0x1148 DUP5 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1169 JUMPI PUSH2 0x1168 PUSH2 0x107A JUMP JUMPDEST JUMPDEST PUSH2 0x1174 DUP5 DUP3 DUP6 PUSH2 0x112B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1191 JUMPI PUSH2 0x1190 PUSH2 0x1075 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11A1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x113A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11C3 JUMPI PUSH2 0x11C2 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11D1 DUP7 DUP3 DUP8 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11E2 DUP7 DUP3 DUP8 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1203 JUMPI PUSH2 0x1202 PUSH2 0xE58 JUMP JUMPDEST JUMPDEST PUSH2 0x120F DUP7 DUP3 DUP8 ADD PUSH2 0x117C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1230 JUMPI PUSH2 0x122F PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x123E DUP6 DUP3 DUP7 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x124F DUP6 DUP3 DUP7 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12A0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12B3 JUMPI PUSH2 0x12B2 PUSH2 0x1259 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12F3 DUP3 PUSH2 0xEBB JUMP JUMPDEST SWAP2 POP PUSH2 0x12FE DUP4 PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1316 JUMPI PUSH2 0x1315 PUSH2 0x12B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1325 DUP2 PUSH2 0xE7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1352 DUP3 PUSH2 0x132B JUMP JUMPDEST PUSH2 0x135C DUP2 DUP6 PUSH2 0x1336 JUMP JUMPDEST SWAP4 POP PUSH2 0x136C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x1375 DUP2 PUSH2 0xDDD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1395 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x131C JUMP JUMPDEST PUSH2 0x13A2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x13AF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x131C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x13C1 DUP2 DUP5 PUSH2 0x1347 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D7 DUP3 PUSH2 0xEBB JUMP JUMPDEST SWAP2 POP PUSH2 0x13E2 DUP4 PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13FA JUMPI PUSH2 0x13F9 PUSH2 0x12B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xC1 MUL 0xAD PUSH11 0xA3A0EAECC65E99A283FCF9 PUSH26 0x5B4DD282F95BA59513ED80D367EA9864736F6C63430008180033 ","sourceMap":"219:5449:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;278:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3564:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;424:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3038:285;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;324:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4619:312;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;500:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5166:500;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;300:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2650:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4140:329;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;548:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;278:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3564:208::-;3639:12;3695:6;3661:9;:21;3671:10;3661:21;;;;;;;;;;;;;;;:31;3683:8;3661:31;;;;;;;;;;;;;;;:40;;;;3733:8;3712:38;;3721:10;3712:38;;;3743:6;3712:38;;;;;;:::i;:::-;;;;;;;;3763:4;3756:11;;3564:208;;;;:::o;424:26::-;;;;:::o;3038:285::-;3136:12;3174:9;:16;3184:5;3174:16;;;;;;;;;;;;;;;:28;3191:10;3174:28;;;;;;;;;;;;;;;;3164:6;:38;;3156:47;;;;;;3260:6;3228:9;:16;3238:5;3228:16;;;;;;;;;;;;;;;:28;3245:10;3228:28;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;3272:29;3282:5;3289:3;3294:6;3272:9;:29::i;:::-;3314:4;3307:11;;3038:285;;;;;:::o;324:26::-;;;;;;;;;;;;;:::o;4619:312::-;4665:12;4718:6;4693:9;:21;4703:10;4693:21;;;;;;;;;;;;;;;;:31;;4685:40;;;;;;4790:6;4765:9;:21;4775:10;4765:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;4845:6;4830:11;;:21;;;;;;;:::i;:::-;;;;;;;;4890:10;4885:24;;;4902:6;4885:24;;;;;;:::i;:::-;;;;;;;;4922:4;4915:11;;4619:312;;;:::o;500:44::-;;;;;;;;;;;;;;;;;:::o;5166:500::-;5239:12;5289:6;5269:9;:16;5279:5;5269:16;;;;;;;;;;;;;;;;:26;;5261:35;;;;;;5363:9;:16;5373:5;5363:16;;;;;;;;;;;;;;;:28;5380:10;5363:28;;;;;;;;;;;;;;;;5353:6;:38;;5345:47;;;;;;5437:6;5417:9;:16;5427:5;5417:16;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;5519:6;5487:9;:16;5497:5;5487:16;;;;;;;;;;;;;;;:28;5504:10;5487:28;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;5586:6;5571:11;;:21;;;;;;;:::i;:::-;;;;;;;;5630:5;5625:19;;;5637:6;5625:19;;;;;;:::i;:::-;;;;;;;;5657:4;5650:11;;5166:500;;;;:::o;300:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2650:139::-;2713:12;2733:34;2743:10;2755:3;2760:6;2733:9;:34::i;:::-;2780:4;2773:11;;2650:139;;;;:::o;4140:329::-;4255:12;4275:22;4315:8;4275:49;;4334:25;4342:8;4352:6;4334:7;:25::i;:::-;4330:135;;;4369:7;:23;;;4393:10;4405:6;4421:4;4428:10;4369:70;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4454:4;4447:11;;;;;4330:135;4269:200;4140:329;;;;;;:::o;548:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1671:796::-;1847:3;1832:19;;:3;:19;;;1824:28;;;;;;1924:6;1904:9;:16;1914:5;1904:16;;;;;;;;;;;;;;;;:26;;1896:35;;;;;;1999:9;:14;2009:3;1999:14;;;;;;;;;;;;;;;;1989:6;1972:9;:14;1982:3;1972:14;;;;;;;;;;;;;;;;:23;;;;:::i;:::-;:41;;1964:50;;;;;;2068:24;2114:9;:14;2124:3;2114:14;;;;;;;;;;;;;;;;2095:9;:16;2105:5;2095:16;;;;;;;;;;;;;;;;:33;;;;:::i;:::-;2068:60;;2186:6;2166:9;:16;2176:5;2166:16;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;2253:6;2235:9;:14;2245:3;2235:14;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;2286:3;2270:28;;2279:5;2270:28;;;2291:6;2270:28;;;;;;:::i;:::-;;;;;;;;2445:16;2427:9;:14;2437:3;2427:14;;;;;;;;;;;;;;;;2408:9;:16;2418:5;2408:16;;;;;;;;;;;;;;;;:33;;;;:::i;:::-;:53;2401:61;;;;:::i;:::-;;1759:708;1671:796;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:117::-;5632:1;5629;5622:12;5646:117;5755:1;5752;5745:12;5769:180;5817:77;5814:1;5807:88;5914:4;5911:1;5904:15;5938:4;5935:1;5928:15;5955:281;6038:27;6060:4;6038:27;:::i;:::-;6030:6;6026:40;6168:6;6156:10;6153:22;6132:18;6120:10;6117:34;6114:62;6111:88;;;6179:18;;:::i;:::-;6111:88;6219:10;6215:2;6208:22;5998:238;5955:281;;:::o;6242:129::-;6276:6;6303:20;;:::i;:::-;6293:30;;6332:33;6360:4;6352:6;6332:33;:::i;:::-;6242:129;;;:::o;6377:307::-;6438:4;6528:18;6520:6;6517:30;6514:56;;;6550:18;;:::i;:::-;6514:56;6588:29;6610:6;6588:29;:::i;:::-;6580:37;;6672:4;6666;6662:15;6654:23;;6377:307;;;:::o;6690:146::-;6787:6;6782:3;6777;6764:30;6828:1;6819:6;6814:3;6810:16;6803:27;6690:146;;;:::o;6842:423::-;6919:5;6944:65;6960:48;7001:6;6960:48;:::i;:::-;6944:65;:::i;:::-;6935:74;;7032:6;7025:5;7018:21;7070:4;7063:5;7059:16;7108:3;7099:6;7094:3;7090:16;7087:25;7084:112;;;7115:79;;:::i;:::-;7084:112;7205:54;7252:6;7247:3;7242;7205:54;:::i;:::-;6925:340;6842:423;;;;;:::o;7284:338::-;7339:5;7388:3;7381:4;7373:6;7369:17;7365:27;7355:122;;7396:79;;:::i;:::-;7355:122;7513:6;7500:20;7538:78;7612:3;7604:6;7597:4;7589:6;7585:17;7538:78;:::i;:::-;7529:87;;7345:277;7284:338;;;;:::o;7628:797::-;7714:6;7722;7730;7779:2;7767:9;7758:7;7754:23;7750:32;7747:119;;;7785:79;;:::i;:::-;7747:119;7905:1;7930:53;7975:7;7966:6;7955:9;7951:22;7930:53;:::i;:::-;7920:63;;7876:117;8032:2;8058:53;8103:7;8094:6;8083:9;8079:22;8058:53;:::i;:::-;8048:63;;8003:118;8188:2;8177:9;8173:18;8160:32;8219:18;8211:6;8208:30;8205:117;;;8241:79;;:::i;:::-;8205:117;8346:62;8400:7;8391:6;8380:9;8376:22;8346:62;:::i;:::-;8336:72;;8131:287;7628:797;;;;;:::o;8431:474::-;8499:6;8507;8556:2;8544:9;8535:7;8531:23;8527:32;8524:119;;;8562:79;;:::i;:::-;8524:119;8682:1;8707:53;8752:7;8743:6;8732:9;8728:22;8707:53;:::i;:::-;8697:63;;8653:117;8809:2;8835:53;8880:7;8871:6;8860:9;8856:22;8835:53;:::i;:::-;8825:63;;8780:118;8431:474;;;;;:::o;8911:180::-;8959:77;8956:1;8949:88;9056:4;9053:1;9046:15;9080:4;9077:1;9070:15;9097:320;9141:6;9178:1;9172:4;9168:12;9158:22;;9225:1;9219:4;9215:12;9246:18;9236:81;;9302:4;9294:6;9290:17;9280:27;;9236:81;9364:2;9356:6;9353:14;9333:18;9330:38;9327:84;;9383:18;;:::i;:::-;9327:84;9148:269;9097:320;;;:::o;9423:180::-;9471:77;9468:1;9461:88;9568:4;9565:1;9558:15;9592:4;9589:1;9582:15;9609:194;9649:4;9669:20;9687:1;9669:20;:::i;:::-;9664:25;;9703:20;9721:1;9703:20;:::i;:::-;9698:25;;9747:1;9744;9740:9;9732:17;;9771:1;9765:4;9762:11;9759:37;;;9776:18;;:::i;:::-;9759:37;9609:194;;;;:::o;9809:118::-;9896:24;9914:5;9896:24;:::i;:::-;9891:3;9884:37;9809:118;;:::o;9933:98::-;9984:6;10018:5;10012:12;10002:22;;9933:98;;;:::o;10037:168::-;10120:11;10154:6;10149:3;10142:19;10194:4;10189:3;10185:14;10170:29;;10037:168;;;;:::o;10211:373::-;10297:3;10325:38;10357:5;10325:38;:::i;:::-;10379:70;10442:6;10437:3;10379:70;:::i;:::-;10372:77;;10458:65;10516:6;10511:3;10504:4;10497:5;10493:16;10458:65;:::i;:::-;10548:29;10570:6;10548:29;:::i;:::-;10543:3;10539:39;10532:46;;10301:283;10211:373;;;;:::o;10590:640::-;10785:4;10823:3;10812:9;10808:19;10800:27;;10837:71;10905:1;10894:9;10890:17;10881:6;10837:71;:::i;:::-;10918:72;10986:2;10975:9;10971:18;10962:6;10918:72;:::i;:::-;11000;11068:2;11057:9;11053:18;11044:6;11000:72;:::i;:::-;11119:9;11113:4;11109:20;11104:2;11093:9;11089:18;11082:48;11147:76;11218:4;11209:6;11147:76;:::i;:::-;11139:84;;10590:640;;;;;;;:::o;11236:191::-;11276:3;11295:20;11313:1;11295:20;:::i;:::-;11290:25;;11329:20;11347:1;11329:20;:::i;:::-;11324:25;;11372:1;11369;11365:9;11358:16;;11393:3;11390:1;11387:10;11384:36;;;11400:18;;:::i;:::-;11384:36;11236:191;;;;:::o;11433:180::-;11481:77;11478:1;11471:88;11578:4;11575:1;11568:15;11602:4;11599:1;11592:15"},"gasEstimates":{"creation":{"codeDepositCost":"1044200","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","approveAndCall(address,uint256,bytes)":"infinite","balanceOf(address)":"2814","burn(uint256)":"infinite","burnFrom(address,uint256)":"infinite","decimals()":"2560","name()":"infinite","symbol()":"infinite","totalSupply()":"2474","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"params\":{\"_spender\":\"The address authorized to spend\",\"_value\":\"the max amount they can spend\"}},\"approveAndCall(address,uint256,bytes)\":{\"params\":{\"_extraData\":\"some extra information to send to the approved contract\",\"_spender\":\"The address authorized to spend\",\"_value\":\"the max amount they can spend\"}},\"burn(uint256)\":{\"params\":{\"_value\":\"the amount of money to burn\"}},\"burnFrom(address,uint256)\":{\"params\":{\"_from\":\"the address of the sender\",\"_value\":\"the amount of money to burn\"}},\"transfer(address,uint256)\":{\"params\":{\"_to\":\"The address of the recipient\",\"_value\":\"the amount to send\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"_from\":\"The address of the sender\",\"_to\":\"The address of the recipient\",\"_value\":\"the amount to send\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Set allowance for other address Allows `_spender` to spend no more than `_value` tokens on your behalf\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"Set allowance for other address and notify Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\"},\"burn(uint256)\":{\"notice\":\"Destroy tokens Remove `_value` tokens from the system irreversibly\"},\"burnFrom(address,uint256)\":{\"notice\":\"Destroy tokens from other account Remove `_value` tokens from the system irreversibly on behalf of `_from`.\"},\"constructor\":{\"notice\":\"Constructor function Initializes contract with initial supply tokens to the creator of the contract\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer tokens Send `_value` tokens to `_to` from your account\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer tokens from other address Send `_value` tokens to `_to` on behalf of `_from`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ManualTokem.sol\":\"TokenERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ManualTokem.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\ninterface tokenRecipient {\\n  function receiveApproval(\\n    address _from,\\n    uint256 _value,\\n    address _token,\\n    bytes calldata _extraData\\n  ) external;\\n}\\n\\ncontract TokenERC20 {\\n  // Public variables of the token\\n  string public name;\\n  string public symbol;\\n  uint8 public decimals = 18;\\n  // 18 decimals is the strongly suggested default, avoid changing it\\n  uint256 public totalSupply;\\n\\n  // This creates an array with all balances\\n  mapping(address => uint256) public balanceOf;\\n  mapping(address => mapping(address => uint256)) public allowance;\\n\\n  // This generates a public event on the blockchain that will notify clients\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  // This generates a public event on the blockchain that will notify clients\\n  event Approval(\\n    address indexed _owner,\\n    address indexed _spender,\\n    uint256 _value\\n  );\\n\\n  // This notifies clients about the amount burnt\\n  event Burn(address indexed from, uint256 value);\\n\\n  /**\\n   * Constructor function\\n   *\\n   * Initializes contract with initial supply tokens to the creator of the contract\\n   */\\n  constructor(\\n    uint256 initialSupply,\\n    string memory tokenName,\\n    string memory tokenSymbol\\n  ) {\\n    totalSupply = initialSupply * 10**uint256(decimals); // Update total supply with the decimal amount\\n    balanceOf[msg.sender] = totalSupply; // Give the creator all initial tokens\\n    name = tokenName; // Set the name for display purposes\\n    symbol = tokenSymbol; // Set the symbol for display purposes\\n  }\\n\\n  /**\\n   * Internal transfer, only can be called by this contract\\n   */\\n  function _transfer(\\n    address _from,\\n    address _to,\\n    uint256 _value\\n  ) internal {\\n    // Prevent transfer to 0x0 address. Use burn() instead\\n    require(_to != address(0x0));\\n    // Check if the sender has enough\\n    require(balanceOf[_from] >= _value);\\n    // Check for overflows\\n    require(balanceOf[_to] + _value >= balanceOf[_to]);\\n    // Save this for an assertion in the future\\n    uint256 previousBalances = balanceOf[_from] + balanceOf[_to];\\n    // Subtract from the sender\\n    balanceOf[_from] -= _value;\\n    // Add the same to the recipient\\n    balanceOf[_to] += _value;\\n    emit Transfer(_from, _to, _value);\\n    // Asserts are used to use static analysis to find bugs in your code. They should never fail\\n    assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\\n  }\\n\\n  /**\\n   * Transfer tokens\\n   *\\n   * Send `_value` tokens to `_to` from your account\\n   *\\n   * @param _to The address of the recipient\\n   * @param _value the amount to send\\n   */\\n  function transfer(address _to, uint256 _value) public returns (bool success) {\\n    _transfer(msg.sender, _to, _value);\\n    return true;\\n  }\\n\\n  /**\\n   * Transfer tokens from other address\\n   *\\n   * Send `_value` tokens to `_to` on behalf of `_from`\\n   *\\n   * @param _from The address of the sender\\n   * @param _to The address of the recipient\\n   * @param _value the amount to send\\n   */\\n  function transferFrom(\\n    address _from,\\n    address _to,\\n    uint256 _value\\n  ) public returns (bool success) {\\n    require(_value <= allowance[_from][msg.sender]); // Check allowance\\n    allowance[_from][msg.sender] -= _value;\\n    _transfer(_from, _to, _value);\\n    return true;\\n  }\\n\\n  /**\\n   * Set allowance for other address\\n   *\\n   * Allows `_spender` to spend no more than `_value` tokens on your behalf\\n   *\\n   * @param _spender The address authorized to spend\\n   * @param _value the max amount they can spend\\n   */\\n  function approve(address _spender, uint256 _value)\\n    public\\n    returns (bool success)\\n  {\\n    allowance[msg.sender][_spender] = _value;\\n    emit Approval(msg.sender, _spender, _value);\\n    return true;\\n  }\\n\\n  /**\\n   * Set allowance for other address and notify\\n   *\\n   * Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\\n   *\\n   * @param _spender The address authorized to spend\\n   * @param _value the max amount they can spend\\n   * @param _extraData some extra information to send to the approved contract\\n   */\\n  function approveAndCall(\\n    address _spender,\\n    uint256 _value,\\n    bytes memory _extraData\\n  ) public returns (bool success) {\\n    tokenRecipient spender = tokenRecipient(_spender);\\n    if (approve(_spender, _value)) {\\n      spender.receiveApproval(msg.sender, _value, address(this), _extraData);\\n      return true;\\n    }\\n  }\\n\\n  /**\\n   * Destroy tokens\\n   *\\n   * Remove `_value` tokens from the system irreversibly\\n   *\\n   * @param _value the amount of money to burn\\n   */\\n  function burn(uint256 _value) public returns (bool success) {\\n    require(balanceOf[msg.sender] >= _value); // Check if the sender has enough\\n    balanceOf[msg.sender] -= _value; // Subtract from the sender\\n    totalSupply -= _value; // Updates totalSupply\\n    emit Burn(msg.sender, _value);\\n    return true;\\n  }\\n\\n  /**\\n   * Destroy tokens from other account\\n   *\\n   * Remove `_value` tokens from the system irreversibly on behalf of `_from`.\\n   *\\n   * @param _from the address of the sender\\n   * @param _value the amount of money to burn\\n   */\\n  function burnFrom(address _from, uint256 _value)\\n    public\\n    returns (bool success)\\n  {\\n    require(balanceOf[_from] >= _value); // Check if the targeted balance is enough\\n    require(_value <= allowance[_from][msg.sender]); // Check allowance\\n    balanceOf[_from] -= _value; // Subtract from the targeted balance\\n    allowance[_from][msg.sender] -= _value; // Subtract from the sender's allowance\\n    totalSupply -= _value; // Update totalSupply\\n    emit Burn(_from, _value);\\n    return true;\\n  }\\n}\",\"keccak256\":\"0xfb48888136011f1301b38c4ac7deaa05b0e76cccfc737f6357a6ad9fe1f99a0f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":801,"contract":"contracts/ManualTokem.sol:TokenERC20","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":803,"contract":"contracts/ManualTokem.sol:TokenERC20","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":806,"contract":"contracts/ManualTokem.sol:TokenERC20","label":"decimals","offset":0,"slot":"2","type":"t_uint8"},{"astId":808,"contract":"contracts/ManualTokem.sol:TokenERC20","label":"totalSupply","offset":0,"slot":"3","type":"t_uint256"},{"astId":812,"contract":"contracts/ManualTokem.sol:TokenERC20","label":"balanceOf","offset":0,"slot":"4","type":"t_mapping(t_address,t_uint256)"},{"astId":818,"contract":"contracts/ManualTokem.sol:TokenERC20","label":"allowance","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"approve(address,uint256)":{"notice":"Set allowance for other address Allows `_spender` to spend no more than `_value` tokens on your behalf"},"approveAndCall(address,uint256,bytes)":{"notice":"Set allowance for other address and notify Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it"},"burn(uint256)":{"notice":"Destroy tokens Remove `_value` tokens from the system irreversibly"},"burnFrom(address,uint256)":{"notice":"Destroy tokens from other account Remove `_value` tokens from the system irreversibly on behalf of `_from`."},"constructor":{"notice":"Constructor function Initializes contract with initial supply tokens to the creator of the contract"},"transfer(address,uint256)":{"notice":"Transfer tokens Send `_value` tokens to `_to` from your account"},"transferFrom(address,address,uint256)":{"notice":"Transfer tokens from other address Send `_value` tokens to `_to` on behalf of `_from`"}},"version":1}},"tokenRecipient":{"abi":[{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"receiveApproval","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"receiveApproval(address,uint256,address,bytes)":"8f4ffcb1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ManualTokem.sol\":\"tokenRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ManualTokem.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\ninterface tokenRecipient {\\n  function receiveApproval(\\n    address _from,\\n    uint256 _value,\\n    address _token,\\n    bytes calldata _extraData\\n  ) external;\\n}\\n\\ncontract TokenERC20 {\\n  // Public variables of the token\\n  string public name;\\n  string public symbol;\\n  uint8 public decimals = 18;\\n  // 18 decimals is the strongly suggested default, avoid changing it\\n  uint256 public totalSupply;\\n\\n  // This creates an array with all balances\\n  mapping(address => uint256) public balanceOf;\\n  mapping(address => mapping(address => uint256)) public allowance;\\n\\n  // This generates a public event on the blockchain that will notify clients\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  // This generates a public event on the blockchain that will notify clients\\n  event Approval(\\n    address indexed _owner,\\n    address indexed _spender,\\n    uint256 _value\\n  );\\n\\n  // This notifies clients about the amount burnt\\n  event Burn(address indexed from, uint256 value);\\n\\n  /**\\n   * Constructor function\\n   *\\n   * Initializes contract with initial supply tokens to the creator of the contract\\n   */\\n  constructor(\\n    uint256 initialSupply,\\n    string memory tokenName,\\n    string memory tokenSymbol\\n  ) {\\n    totalSupply = initialSupply * 10**uint256(decimals); // Update total supply with the decimal amount\\n    balanceOf[msg.sender] = totalSupply; // Give the creator all initial tokens\\n    name = tokenName; // Set the name for display purposes\\n    symbol = tokenSymbol; // Set the symbol for display purposes\\n  }\\n\\n  /**\\n   * Internal transfer, only can be called by this contract\\n   */\\n  function _transfer(\\n    address _from,\\n    address _to,\\n    uint256 _value\\n  ) internal {\\n    // Prevent transfer to 0x0 address. Use burn() instead\\n    require(_to != address(0x0));\\n    // Check if the sender has enough\\n    require(balanceOf[_from] >= _value);\\n    // Check for overflows\\n    require(balanceOf[_to] + _value >= balanceOf[_to]);\\n    // Save this for an assertion in the future\\n    uint256 previousBalances = balanceOf[_from] + balanceOf[_to];\\n    // Subtract from the sender\\n    balanceOf[_from] -= _value;\\n    // Add the same to the recipient\\n    balanceOf[_to] += _value;\\n    emit Transfer(_from, _to, _value);\\n    // Asserts are used to use static analysis to find bugs in your code. They should never fail\\n    assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\\n  }\\n\\n  /**\\n   * Transfer tokens\\n   *\\n   * Send `_value` tokens to `_to` from your account\\n   *\\n   * @param _to The address of the recipient\\n   * @param _value the amount to send\\n   */\\n  function transfer(address _to, uint256 _value) public returns (bool success) {\\n    _transfer(msg.sender, _to, _value);\\n    return true;\\n  }\\n\\n  /**\\n   * Transfer tokens from other address\\n   *\\n   * Send `_value` tokens to `_to` on behalf of `_from`\\n   *\\n   * @param _from The address of the sender\\n   * @param _to The address of the recipient\\n   * @param _value the amount to send\\n   */\\n  function transferFrom(\\n    address _from,\\n    address _to,\\n    uint256 _value\\n  ) public returns (bool success) {\\n    require(_value <= allowance[_from][msg.sender]); // Check allowance\\n    allowance[_from][msg.sender] -= _value;\\n    _transfer(_from, _to, _value);\\n    return true;\\n  }\\n\\n  /**\\n   * Set allowance for other address\\n   *\\n   * Allows `_spender` to spend no more than `_value` tokens on your behalf\\n   *\\n   * @param _spender The address authorized to spend\\n   * @param _value the max amount they can spend\\n   */\\n  function approve(address _spender, uint256 _value)\\n    public\\n    returns (bool success)\\n  {\\n    allowance[msg.sender][_spender] = _value;\\n    emit Approval(msg.sender, _spender, _value);\\n    return true;\\n  }\\n\\n  /**\\n   * Set allowance for other address and notify\\n   *\\n   * Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\\n   *\\n   * @param _spender The address authorized to spend\\n   * @param _value the max amount they can spend\\n   * @param _extraData some extra information to send to the approved contract\\n   */\\n  function approveAndCall(\\n    address _spender,\\n    uint256 _value,\\n    bytes memory _extraData\\n  ) public returns (bool success) {\\n    tokenRecipient spender = tokenRecipient(_spender);\\n    if (approve(_spender, _value)) {\\n      spender.receiveApproval(msg.sender, _value, address(this), _extraData);\\n      return true;\\n    }\\n  }\\n\\n  /**\\n   * Destroy tokens\\n   *\\n   * Remove `_value` tokens from the system irreversibly\\n   *\\n   * @param _value the amount of money to burn\\n   */\\n  function burn(uint256 _value) public returns (bool success) {\\n    require(balanceOf[msg.sender] >= _value); // Check if the sender has enough\\n    balanceOf[msg.sender] -= _value; // Subtract from the sender\\n    totalSupply -= _value; // Updates totalSupply\\n    emit Burn(msg.sender, _value);\\n    return true;\\n  }\\n\\n  /**\\n   * Destroy tokens from other account\\n   *\\n   * Remove `_value` tokens from the system irreversibly on behalf of `_from`.\\n   *\\n   * @param _from the address of the sender\\n   * @param _value the amount of money to burn\\n   */\\n  function burnFrom(address _from, uint256 _value)\\n    public\\n    returns (bool success)\\n  {\\n    require(balanceOf[_from] >= _value); // Check if the targeted balance is enough\\n    require(_value <= allowance[_from][msg.sender]); // Check allowance\\n    balanceOf[_from] -= _value; // Subtract from the targeted balance\\n    allowance[_from][msg.sender] -= _value; // Subtract from the sender's allowance\\n    totalSupply -= _value; // Update totalSupply\\n    emit Burn(_from, _value);\\n    return true;\\n  }\\n}\",\"keccak256\":\"0xfb48888136011f1301b38c4ac7deaa05b0e76cccfc737f6357a6ad9fe1f99a0f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/OurToken.sol":{"OurToken":{"abi":[{"inputs":[{"internalType":"uint256","name":"initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1203":{"entryPoint":null,"id":1203,"parameterSlots":1,"returnSlots":0},"@_188":{"entryPoint":null,"id":188,"parameterSlots":2,"returnSlots":0},"@_mint_491":{"entryPoint":226,"id":491,"parameterSlots":2,"returnSlots":0},"@_update_458":{"entryPoint":367,"id":458,"parameterSlots":3,"returnSlots":0},"abi_decode_t_uint256_fromMemory":{"entryPoint":968,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1948,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2100,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2117,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2178,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1199,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1041,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2041,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1510,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1928,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1896,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":932,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1471,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1345,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1665,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1220,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1146,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1635,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1335,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1603,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1994,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1099,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1052,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1385,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":927,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1236,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1590,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1443,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1249,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1395,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1438,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:7961:7","nodeType":"YulBlock","src":"0:7961:7","statements":[{"body":{"nativeSrc":"47:35:7","nodeType":"YulBlock","src":"47:35:7","statements":[{"nativeSrc":"57:19:7","nodeType":"YulAssignment","src":"57:19:7","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:7","nodeType":"YulLiteral","src":"73:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:7","nodeType":"YulIdentifier","src":"67:5:7"},"nativeSrc":"67:9:7","nodeType":"YulFunctionCall","src":"67:9:7"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:7","nodeType":"YulIdentifier","src":"57:6:7"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:7","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:7","nodeType":"YulTypedName","src":"40:6:7","type":""}],"src":"7:75:7"},{"body":{"nativeSrc":"177:28:7","nodeType":"YulBlock","src":"177:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:7","nodeType":"YulLiteral","src":"194:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:7","nodeType":"YulLiteral","src":"197:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:7","nodeType":"YulIdentifier","src":"187:6:7"},"nativeSrc":"187:12:7","nodeType":"YulFunctionCall","src":"187:12:7"},"nativeSrc":"187:12:7","nodeType":"YulExpressionStatement","src":"187:12:7"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:7","nodeType":"YulFunctionDefinition","src":"88:117:7"},{"body":{"nativeSrc":"300:28:7","nodeType":"YulBlock","src":"300:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:7","nodeType":"YulLiteral","src":"317:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:7","nodeType":"YulLiteral","src":"320:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:7","nodeType":"YulIdentifier","src":"310:6:7"},"nativeSrc":"310:12:7","nodeType":"YulFunctionCall","src":"310:12:7"},"nativeSrc":"310:12:7","nodeType":"YulExpressionStatement","src":"310:12:7"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:7","nodeType":"YulFunctionDefinition","src":"211:117:7"},{"body":{"nativeSrc":"379:32:7","nodeType":"YulBlock","src":"379:32:7","statements":[{"nativeSrc":"389:16:7","nodeType":"YulAssignment","src":"389:16:7","value":{"name":"value","nativeSrc":"400:5:7","nodeType":"YulIdentifier","src":"400:5:7"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:7","nodeType":"YulIdentifier","src":"389:7:7"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:7","nodeType":"YulTypedName","src":"361:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:7","nodeType":"YulTypedName","src":"371:7:7","type":""}],"src":"334:77:7"},{"body":{"nativeSrc":"460:79:7","nodeType":"YulBlock","src":"460:79:7","statements":[{"body":{"nativeSrc":"517:16:7","nodeType":"YulBlock","src":"517:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:7","nodeType":"YulLiteral","src":"526:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:7","nodeType":"YulLiteral","src":"529:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:7","nodeType":"YulIdentifier","src":"519:6:7"},"nativeSrc":"519:12:7","nodeType":"YulFunctionCall","src":"519:12:7"},"nativeSrc":"519:12:7","nodeType":"YulExpressionStatement","src":"519:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:7","nodeType":"YulIdentifier","src":"483:5:7"},{"arguments":[{"name":"value","nativeSrc":"508:5:7","nodeType":"YulIdentifier","src":"508:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:7","nodeType":"YulIdentifier","src":"490:17:7"},"nativeSrc":"490:24:7","nodeType":"YulFunctionCall","src":"490:24:7"}],"functionName":{"name":"eq","nativeSrc":"480:2:7","nodeType":"YulIdentifier","src":"480:2:7"},"nativeSrc":"480:35:7","nodeType":"YulFunctionCall","src":"480:35:7"}],"functionName":{"name":"iszero","nativeSrc":"473:6:7","nodeType":"YulIdentifier","src":"473:6:7"},"nativeSrc":"473:43:7","nodeType":"YulFunctionCall","src":"473:43:7"},"nativeSrc":"470:63:7","nodeType":"YulIf","src":"470:63:7"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:7","nodeType":"YulTypedName","src":"453:5:7","type":""}],"src":"417:122:7"},{"body":{"nativeSrc":"608:80:7","nodeType":"YulBlock","src":"608:80:7","statements":[{"nativeSrc":"618:22:7","nodeType":"YulAssignment","src":"618:22:7","value":{"arguments":[{"name":"offset","nativeSrc":"633:6:7","nodeType":"YulIdentifier","src":"633:6:7"}],"functionName":{"name":"mload","nativeSrc":"627:5:7","nodeType":"YulIdentifier","src":"627:5:7"},"nativeSrc":"627:13:7","nodeType":"YulFunctionCall","src":"627:13:7"},"variableNames":[{"name":"value","nativeSrc":"618:5:7","nodeType":"YulIdentifier","src":"618:5:7"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"676:5:7","nodeType":"YulIdentifier","src":"676:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"649:26:7","nodeType":"YulIdentifier","src":"649:26:7"},"nativeSrc":"649:33:7","nodeType":"YulFunctionCall","src":"649:33:7"},"nativeSrc":"649:33:7","nodeType":"YulExpressionStatement","src":"649:33:7"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"545:143:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"586:6:7","nodeType":"YulTypedName","src":"586:6:7","type":""},{"name":"end","nativeSrc":"594:3:7","nodeType":"YulTypedName","src":"594:3:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"602:5:7","nodeType":"YulTypedName","src":"602:5:7","type":""}],"src":"545:143:7"},{"body":{"nativeSrc":"771:274:7","nodeType":"YulBlock","src":"771:274:7","statements":[{"body":{"nativeSrc":"817:83:7","nodeType":"YulBlock","src":"817:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"819:77:7","nodeType":"YulIdentifier","src":"819:77:7"},"nativeSrc":"819:79:7","nodeType":"YulFunctionCall","src":"819:79:7"},"nativeSrc":"819:79:7","nodeType":"YulExpressionStatement","src":"819:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"792:7:7","nodeType":"YulIdentifier","src":"792:7:7"},{"name":"headStart","nativeSrc":"801:9:7","nodeType":"YulIdentifier","src":"801:9:7"}],"functionName":{"name":"sub","nativeSrc":"788:3:7","nodeType":"YulIdentifier","src":"788:3:7"},"nativeSrc":"788:23:7","nodeType":"YulFunctionCall","src":"788:23:7"},{"kind":"number","nativeSrc":"813:2:7","nodeType":"YulLiteral","src":"813:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"784:3:7","nodeType":"YulIdentifier","src":"784:3:7"},"nativeSrc":"784:32:7","nodeType":"YulFunctionCall","src":"784:32:7"},"nativeSrc":"781:119:7","nodeType":"YulIf","src":"781:119:7"},{"nativeSrc":"910:128:7","nodeType":"YulBlock","src":"910:128:7","statements":[{"nativeSrc":"925:15:7","nodeType":"YulVariableDeclaration","src":"925:15:7","value":{"kind":"number","nativeSrc":"939:1:7","nodeType":"YulLiteral","src":"939:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"929:6:7","nodeType":"YulTypedName","src":"929:6:7","type":""}]},{"nativeSrc":"954:74:7","nodeType":"YulAssignment","src":"954:74:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1000:9:7","nodeType":"YulIdentifier","src":"1000:9:7"},{"name":"offset","nativeSrc":"1011:6:7","nodeType":"YulIdentifier","src":"1011:6:7"}],"functionName":{"name":"add","nativeSrc":"996:3:7","nodeType":"YulIdentifier","src":"996:3:7"},"nativeSrc":"996:22:7","nodeType":"YulFunctionCall","src":"996:22:7"},{"name":"dataEnd","nativeSrc":"1020:7:7","nodeType":"YulIdentifier","src":"1020:7:7"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"964:31:7","nodeType":"YulIdentifier","src":"964:31:7"},"nativeSrc":"964:64:7","nodeType":"YulFunctionCall","src":"964:64:7"},"variableNames":[{"name":"value0","nativeSrc":"954:6:7","nodeType":"YulIdentifier","src":"954:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"694:351:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"741:9:7","nodeType":"YulTypedName","src":"741:9:7","type":""},{"name":"dataEnd","nativeSrc":"752:7:7","nodeType":"YulTypedName","src":"752:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"764:6:7","nodeType":"YulTypedName","src":"764:6:7","type":""}],"src":"694:351:7"},{"body":{"nativeSrc":"1110:40:7","nodeType":"YulBlock","src":"1110:40:7","statements":[{"nativeSrc":"1121:22:7","nodeType":"YulAssignment","src":"1121:22:7","value":{"arguments":[{"name":"value","nativeSrc":"1137:5:7","nodeType":"YulIdentifier","src":"1137:5:7"}],"functionName":{"name":"mload","nativeSrc":"1131:5:7","nodeType":"YulIdentifier","src":"1131:5:7"},"nativeSrc":"1131:12:7","nodeType":"YulFunctionCall","src":"1131:12:7"},"variableNames":[{"name":"length","nativeSrc":"1121:6:7","nodeType":"YulIdentifier","src":"1121:6:7"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1051:99:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1093:5:7","nodeType":"YulTypedName","src":"1093:5:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1103:6:7","nodeType":"YulTypedName","src":"1103:6:7","type":""}],"src":"1051:99:7"},{"body":{"nativeSrc":"1184:152:7","nodeType":"YulBlock","src":"1184:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1201:1:7","nodeType":"YulLiteral","src":"1201:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1204:77:7","nodeType":"YulLiteral","src":"1204:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:7","nodeType":"YulIdentifier","src":"1194:6:7"},"nativeSrc":"1194:88:7","nodeType":"YulFunctionCall","src":"1194:88:7"},"nativeSrc":"1194:88:7","nodeType":"YulExpressionStatement","src":"1194:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1298:1:7","nodeType":"YulLiteral","src":"1298:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"1301:4:7","nodeType":"YulLiteral","src":"1301:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1291:6:7","nodeType":"YulIdentifier","src":"1291:6:7"},"nativeSrc":"1291:15:7","nodeType":"YulFunctionCall","src":"1291:15:7"},"nativeSrc":"1291:15:7","nodeType":"YulExpressionStatement","src":"1291:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1322:1:7","nodeType":"YulLiteral","src":"1322:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1325:4:7","nodeType":"YulLiteral","src":"1325:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1315:6:7","nodeType":"YulIdentifier","src":"1315:6:7"},"nativeSrc":"1315:15:7","nodeType":"YulFunctionCall","src":"1315:15:7"},"nativeSrc":"1315:15:7","nodeType":"YulExpressionStatement","src":"1315:15:7"}]},"name":"panic_error_0x41","nativeSrc":"1156:180:7","nodeType":"YulFunctionDefinition","src":"1156:180:7"},{"body":{"nativeSrc":"1370:152:7","nodeType":"YulBlock","src":"1370:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1387:1:7","nodeType":"YulLiteral","src":"1387:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1390:77:7","nodeType":"YulLiteral","src":"1390:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1380:6:7","nodeType":"YulIdentifier","src":"1380:6:7"},"nativeSrc":"1380:88:7","nodeType":"YulFunctionCall","src":"1380:88:7"},"nativeSrc":"1380:88:7","nodeType":"YulExpressionStatement","src":"1380:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1484:1:7","nodeType":"YulLiteral","src":"1484:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"1487:4:7","nodeType":"YulLiteral","src":"1487:4:7","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1477:6:7","nodeType":"YulIdentifier","src":"1477:6:7"},"nativeSrc":"1477:15:7","nodeType":"YulFunctionCall","src":"1477:15:7"},"nativeSrc":"1477:15:7","nodeType":"YulExpressionStatement","src":"1477:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1508:1:7","nodeType":"YulLiteral","src":"1508:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1511:4:7","nodeType":"YulLiteral","src":"1511:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1501:6:7","nodeType":"YulIdentifier","src":"1501:6:7"},"nativeSrc":"1501:15:7","nodeType":"YulFunctionCall","src":"1501:15:7"},"nativeSrc":"1501:15:7","nodeType":"YulExpressionStatement","src":"1501:15:7"}]},"name":"panic_error_0x22","nativeSrc":"1342:180:7","nodeType":"YulFunctionDefinition","src":"1342:180:7"},{"body":{"nativeSrc":"1579:269:7","nodeType":"YulBlock","src":"1579:269:7","statements":[{"nativeSrc":"1589:22:7","nodeType":"YulAssignment","src":"1589:22:7","value":{"arguments":[{"name":"data","nativeSrc":"1603:4:7","nodeType":"YulIdentifier","src":"1603:4:7"},{"kind":"number","nativeSrc":"1609:1:7","nodeType":"YulLiteral","src":"1609:1:7","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"1599:3:7","nodeType":"YulIdentifier","src":"1599:3:7"},"nativeSrc":"1599:12:7","nodeType":"YulFunctionCall","src":"1599:12:7"},"variableNames":[{"name":"length","nativeSrc":"1589:6:7","nodeType":"YulIdentifier","src":"1589:6:7"}]},{"nativeSrc":"1620:38:7","nodeType":"YulVariableDeclaration","src":"1620:38:7","value":{"arguments":[{"name":"data","nativeSrc":"1650:4:7","nodeType":"YulIdentifier","src":"1650:4:7"},{"kind":"number","nativeSrc":"1656:1:7","nodeType":"YulLiteral","src":"1656:1:7","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1646:3:7","nodeType":"YulIdentifier","src":"1646:3:7"},"nativeSrc":"1646:12:7","nodeType":"YulFunctionCall","src":"1646:12:7"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1624:18:7","nodeType":"YulTypedName","src":"1624:18:7","type":""}]},{"body":{"nativeSrc":"1697:51:7","nodeType":"YulBlock","src":"1697:51:7","statements":[{"nativeSrc":"1711:27:7","nodeType":"YulAssignment","src":"1711:27:7","value":{"arguments":[{"name":"length","nativeSrc":"1725:6:7","nodeType":"YulIdentifier","src":"1725:6:7"},{"kind":"number","nativeSrc":"1733:4:7","nodeType":"YulLiteral","src":"1733:4:7","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"1721:3:7","nodeType":"YulIdentifier","src":"1721:3:7"},"nativeSrc":"1721:17:7","nodeType":"YulFunctionCall","src":"1721:17:7"},"variableNames":[{"name":"length","nativeSrc":"1711:6:7","nodeType":"YulIdentifier","src":"1711:6:7"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1677:18:7","nodeType":"YulIdentifier","src":"1677:18:7"}],"functionName":{"name":"iszero","nativeSrc":"1670:6:7","nodeType":"YulIdentifier","src":"1670:6:7"},"nativeSrc":"1670:26:7","nodeType":"YulFunctionCall","src":"1670:26:7"},"nativeSrc":"1667:81:7","nodeType":"YulIf","src":"1667:81:7"},{"body":{"nativeSrc":"1800:42:7","nodeType":"YulBlock","src":"1800:42:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"1814:16:7","nodeType":"YulIdentifier","src":"1814:16:7"},"nativeSrc":"1814:18:7","nodeType":"YulFunctionCall","src":"1814:18:7"},"nativeSrc":"1814:18:7","nodeType":"YulExpressionStatement","src":"1814:18:7"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1764:18:7","nodeType":"YulIdentifier","src":"1764:18:7"},{"arguments":[{"name":"length","nativeSrc":"1787:6:7","nodeType":"YulIdentifier","src":"1787:6:7"},{"kind":"number","nativeSrc":"1795:2:7","nodeType":"YulLiteral","src":"1795:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"1784:2:7","nodeType":"YulIdentifier","src":"1784:2:7"},"nativeSrc":"1784:14:7","nodeType":"YulFunctionCall","src":"1784:14:7"}],"functionName":{"name":"eq","nativeSrc":"1761:2:7","nodeType":"YulIdentifier","src":"1761:2:7"},"nativeSrc":"1761:38:7","nodeType":"YulFunctionCall","src":"1761:38:7"},"nativeSrc":"1758:84:7","nodeType":"YulIf","src":"1758:84:7"}]},"name":"extract_byte_array_length","nativeSrc":"1528:320:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1563:4:7","nodeType":"YulTypedName","src":"1563:4:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1572:6:7","nodeType":"YulTypedName","src":"1572:6:7","type":""}],"src":"1528:320:7"},{"body":{"nativeSrc":"1908:87:7","nodeType":"YulBlock","src":"1908:87:7","statements":[{"nativeSrc":"1918:11:7","nodeType":"YulAssignment","src":"1918:11:7","value":{"name":"ptr","nativeSrc":"1926:3:7","nodeType":"YulIdentifier","src":"1926:3:7"},"variableNames":[{"name":"data","nativeSrc":"1918:4:7","nodeType":"YulIdentifier","src":"1918:4:7"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1946:1:7","nodeType":"YulLiteral","src":"1946:1:7","type":"","value":"0"},{"name":"ptr","nativeSrc":"1949:3:7","nodeType":"YulIdentifier","src":"1949:3:7"}],"functionName":{"name":"mstore","nativeSrc":"1939:6:7","nodeType":"YulIdentifier","src":"1939:6:7"},"nativeSrc":"1939:14:7","nodeType":"YulFunctionCall","src":"1939:14:7"},"nativeSrc":"1939:14:7","nodeType":"YulExpressionStatement","src":"1939:14:7"},{"nativeSrc":"1962:26:7","nodeType":"YulAssignment","src":"1962:26:7","value":{"arguments":[{"kind":"number","nativeSrc":"1980:1:7","nodeType":"YulLiteral","src":"1980:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1983:4:7","nodeType":"YulLiteral","src":"1983:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1970:9:7","nodeType":"YulIdentifier","src":"1970:9:7"},"nativeSrc":"1970:18:7","nodeType":"YulFunctionCall","src":"1970:18:7"},"variableNames":[{"name":"data","nativeSrc":"1962:4:7","nodeType":"YulIdentifier","src":"1962:4:7"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"1854:141:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"1895:3:7","nodeType":"YulTypedName","src":"1895:3:7","type":""}],"returnVariables":[{"name":"data","nativeSrc":"1903:4:7","nodeType":"YulTypedName","src":"1903:4:7","type":""}],"src":"1854:141:7"},{"body":{"nativeSrc":"2045:49:7","nodeType":"YulBlock","src":"2045:49:7","statements":[{"nativeSrc":"2055:33:7","nodeType":"YulAssignment","src":"2055:33:7","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2073:5:7","nodeType":"YulIdentifier","src":"2073:5:7"},{"kind":"number","nativeSrc":"2080:2:7","nodeType":"YulLiteral","src":"2080:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2069:3:7","nodeType":"YulIdentifier","src":"2069:3:7"},"nativeSrc":"2069:14:7","nodeType":"YulFunctionCall","src":"2069:14:7"},{"kind":"number","nativeSrc":"2085:2:7","nodeType":"YulLiteral","src":"2085:2:7","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2065:3:7","nodeType":"YulIdentifier","src":"2065:3:7"},"nativeSrc":"2065:23:7","nodeType":"YulFunctionCall","src":"2065:23:7"},"variableNames":[{"name":"result","nativeSrc":"2055:6:7","nodeType":"YulIdentifier","src":"2055:6:7"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2001:93:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2028:5:7","nodeType":"YulTypedName","src":"2028:5:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2038:6:7","nodeType":"YulTypedName","src":"2038:6:7","type":""}],"src":"2001:93:7"},{"body":{"nativeSrc":"2153:54:7","nodeType":"YulBlock","src":"2153:54:7","statements":[{"nativeSrc":"2163:37:7","nodeType":"YulAssignment","src":"2163:37:7","value":{"arguments":[{"name":"bits","nativeSrc":"2188:4:7","nodeType":"YulIdentifier","src":"2188:4:7"},{"name":"value","nativeSrc":"2194:5:7","nodeType":"YulIdentifier","src":"2194:5:7"}],"functionName":{"name":"shl","nativeSrc":"2184:3:7","nodeType":"YulIdentifier","src":"2184:3:7"},"nativeSrc":"2184:16:7","nodeType":"YulFunctionCall","src":"2184:16:7"},"variableNames":[{"name":"newValue","nativeSrc":"2163:8:7","nodeType":"YulIdentifier","src":"2163:8:7"}]}]},"name":"shift_left_dynamic","nativeSrc":"2100:107:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2128:4:7","nodeType":"YulTypedName","src":"2128:4:7","type":""},{"name":"value","nativeSrc":"2134:5:7","nodeType":"YulTypedName","src":"2134:5:7","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2144:8:7","nodeType":"YulTypedName","src":"2144:8:7","type":""}],"src":"2100:107:7"},{"body":{"nativeSrc":"2289:317:7","nodeType":"YulBlock","src":"2289:317:7","statements":[{"nativeSrc":"2299:35:7","nodeType":"YulVariableDeclaration","src":"2299:35:7","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2320:10:7","nodeType":"YulIdentifier","src":"2320:10:7"},{"kind":"number","nativeSrc":"2332:1:7","nodeType":"YulLiteral","src":"2332:1:7","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2316:3:7","nodeType":"YulIdentifier","src":"2316:3:7"},"nativeSrc":"2316:18:7","nodeType":"YulFunctionCall","src":"2316:18:7"},"variables":[{"name":"shiftBits","nativeSrc":"2303:9:7","nodeType":"YulTypedName","src":"2303:9:7","type":""}]},{"nativeSrc":"2343:109:7","nodeType":"YulVariableDeclaration","src":"2343:109:7","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2374:9:7","nodeType":"YulIdentifier","src":"2374:9:7"},{"kind":"number","nativeSrc":"2385:66:7","nodeType":"YulLiteral","src":"2385:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2355:18:7","nodeType":"YulIdentifier","src":"2355:18:7"},"nativeSrc":"2355:97:7","nodeType":"YulFunctionCall","src":"2355:97:7"},"variables":[{"name":"mask","nativeSrc":"2347:4:7","nodeType":"YulTypedName","src":"2347:4:7","type":""}]},{"nativeSrc":"2461:51:7","nodeType":"YulAssignment","src":"2461:51:7","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2492:9:7","nodeType":"YulIdentifier","src":"2492:9:7"},{"name":"toInsert","nativeSrc":"2503:8:7","nodeType":"YulIdentifier","src":"2503:8:7"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2473:18:7","nodeType":"YulIdentifier","src":"2473:18:7"},"nativeSrc":"2473:39:7","nodeType":"YulFunctionCall","src":"2473:39:7"},"variableNames":[{"name":"toInsert","nativeSrc":"2461:8:7","nodeType":"YulIdentifier","src":"2461:8:7"}]},{"nativeSrc":"2521:30:7","nodeType":"YulAssignment","src":"2521:30:7","value":{"arguments":[{"name":"value","nativeSrc":"2534:5:7","nodeType":"YulIdentifier","src":"2534:5:7"},{"arguments":[{"name":"mask","nativeSrc":"2545:4:7","nodeType":"YulIdentifier","src":"2545:4:7"}],"functionName":{"name":"not","nativeSrc":"2541:3:7","nodeType":"YulIdentifier","src":"2541:3:7"},"nativeSrc":"2541:9:7","nodeType":"YulFunctionCall","src":"2541:9:7"}],"functionName":{"name":"and","nativeSrc":"2530:3:7","nodeType":"YulIdentifier","src":"2530:3:7"},"nativeSrc":"2530:21:7","nodeType":"YulFunctionCall","src":"2530:21:7"},"variableNames":[{"name":"value","nativeSrc":"2521:5:7","nodeType":"YulIdentifier","src":"2521:5:7"}]},{"nativeSrc":"2560:40:7","nodeType":"YulAssignment","src":"2560:40:7","value":{"arguments":[{"name":"value","nativeSrc":"2573:5:7","nodeType":"YulIdentifier","src":"2573:5:7"},{"arguments":[{"name":"toInsert","nativeSrc":"2584:8:7","nodeType":"YulIdentifier","src":"2584:8:7"},{"name":"mask","nativeSrc":"2594:4:7","nodeType":"YulIdentifier","src":"2594:4:7"}],"functionName":{"name":"and","nativeSrc":"2580:3:7","nodeType":"YulIdentifier","src":"2580:3:7"},"nativeSrc":"2580:19:7","nodeType":"YulFunctionCall","src":"2580:19:7"}],"functionName":{"name":"or","nativeSrc":"2570:2:7","nodeType":"YulIdentifier","src":"2570:2:7"},"nativeSrc":"2570:30:7","nodeType":"YulFunctionCall","src":"2570:30:7"},"variableNames":[{"name":"result","nativeSrc":"2560:6:7","nodeType":"YulIdentifier","src":"2560:6:7"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2213:393:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2250:5:7","nodeType":"YulTypedName","src":"2250:5:7","type":""},{"name":"shiftBytes","nativeSrc":"2257:10:7","nodeType":"YulTypedName","src":"2257:10:7","type":""},{"name":"toInsert","nativeSrc":"2269:8:7","nodeType":"YulTypedName","src":"2269:8:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2282:6:7","nodeType":"YulTypedName","src":"2282:6:7","type":""}],"src":"2213:393:7"},{"body":{"nativeSrc":"2644:28:7","nodeType":"YulBlock","src":"2644:28:7","statements":[{"nativeSrc":"2654:12:7","nodeType":"YulAssignment","src":"2654:12:7","value":{"name":"value","nativeSrc":"2661:5:7","nodeType":"YulIdentifier","src":"2661:5:7"},"variableNames":[{"name":"ret","nativeSrc":"2654:3:7","nodeType":"YulIdentifier","src":"2654:3:7"}]}]},"name":"identity","nativeSrc":"2612:60:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2630:5:7","nodeType":"YulTypedName","src":"2630:5:7","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2640:3:7","nodeType":"YulTypedName","src":"2640:3:7","type":""}],"src":"2612:60:7"},{"body":{"nativeSrc":"2738:82:7","nodeType":"YulBlock","src":"2738:82:7","statements":[{"nativeSrc":"2748:66:7","nodeType":"YulAssignment","src":"2748:66:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2806:5:7","nodeType":"YulIdentifier","src":"2806:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2788:17:7","nodeType":"YulIdentifier","src":"2788:17:7"},"nativeSrc":"2788:24:7","nodeType":"YulFunctionCall","src":"2788:24:7"}],"functionName":{"name":"identity","nativeSrc":"2779:8:7","nodeType":"YulIdentifier","src":"2779:8:7"},"nativeSrc":"2779:34:7","nodeType":"YulFunctionCall","src":"2779:34:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2761:17:7","nodeType":"YulIdentifier","src":"2761:17:7"},"nativeSrc":"2761:53:7","nodeType":"YulFunctionCall","src":"2761:53:7"},"variableNames":[{"name":"converted","nativeSrc":"2748:9:7","nodeType":"YulIdentifier","src":"2748:9:7"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2678:142:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2718:5:7","nodeType":"YulTypedName","src":"2718:5:7","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2728:9:7","nodeType":"YulTypedName","src":"2728:9:7","type":""}],"src":"2678:142:7"},{"body":{"nativeSrc":"2873:28:7","nodeType":"YulBlock","src":"2873:28:7","statements":[{"nativeSrc":"2883:12:7","nodeType":"YulAssignment","src":"2883:12:7","value":{"name":"value","nativeSrc":"2890:5:7","nodeType":"YulIdentifier","src":"2890:5:7"},"variableNames":[{"name":"ret","nativeSrc":"2883:3:7","nodeType":"YulIdentifier","src":"2883:3:7"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"2826:75:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2859:5:7","nodeType":"YulTypedName","src":"2859:5:7","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2869:3:7","nodeType":"YulTypedName","src":"2869:3:7","type":""}],"src":"2826:75:7"},{"body":{"nativeSrc":"2983:193:7","nodeType":"YulBlock","src":"2983:193:7","statements":[{"nativeSrc":"2993:63:7","nodeType":"YulVariableDeclaration","src":"2993:63:7","value":{"arguments":[{"name":"value_0","nativeSrc":"3048:7:7","nodeType":"YulIdentifier","src":"3048:7:7"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3017:30:7","nodeType":"YulIdentifier","src":"3017:30:7"},"nativeSrc":"3017:39:7","nodeType":"YulFunctionCall","src":"3017:39:7"},"variables":[{"name":"convertedValue_0","nativeSrc":"2997:16:7","nodeType":"YulTypedName","src":"2997:16:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3072:4:7","nodeType":"YulIdentifier","src":"3072:4:7"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3112:4:7","nodeType":"YulIdentifier","src":"3112:4:7"}],"functionName":{"name":"sload","nativeSrc":"3106:5:7","nodeType":"YulIdentifier","src":"3106:5:7"},"nativeSrc":"3106:11:7","nodeType":"YulFunctionCall","src":"3106:11:7"},{"name":"offset","nativeSrc":"3119:6:7","nodeType":"YulIdentifier","src":"3119:6:7"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3151:16:7","nodeType":"YulIdentifier","src":"3151:16:7"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3127:23:7","nodeType":"YulIdentifier","src":"3127:23:7"},"nativeSrc":"3127:41:7","nodeType":"YulFunctionCall","src":"3127:41:7"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3078:27:7","nodeType":"YulIdentifier","src":"3078:27:7"},"nativeSrc":"3078:91:7","nodeType":"YulFunctionCall","src":"3078:91:7"}],"functionName":{"name":"sstore","nativeSrc":"3065:6:7","nodeType":"YulIdentifier","src":"3065:6:7"},"nativeSrc":"3065:105:7","nodeType":"YulFunctionCall","src":"3065:105:7"},"nativeSrc":"3065:105:7","nodeType":"YulExpressionStatement","src":"3065:105:7"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"2907:269:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2960:4:7","nodeType":"YulTypedName","src":"2960:4:7","type":""},{"name":"offset","nativeSrc":"2966:6:7","nodeType":"YulTypedName","src":"2966:6:7","type":""},{"name":"value_0","nativeSrc":"2974:7:7","nodeType":"YulTypedName","src":"2974:7:7","type":""}],"src":"2907:269:7"},{"body":{"nativeSrc":"3231:24:7","nodeType":"YulBlock","src":"3231:24:7","statements":[{"nativeSrc":"3241:8:7","nodeType":"YulAssignment","src":"3241:8:7","value":{"kind":"number","nativeSrc":"3248:1:7","nodeType":"YulLiteral","src":"3248:1:7","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3241:3:7","nodeType":"YulIdentifier","src":"3241:3:7"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3182:73:7","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3227:3:7","nodeType":"YulTypedName","src":"3227:3:7","type":""}],"src":"3182:73:7"},{"body":{"nativeSrc":"3314:136:7","nodeType":"YulBlock","src":"3314:136:7","statements":[{"nativeSrc":"3324:46:7","nodeType":"YulVariableDeclaration","src":"3324:46:7","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3338:30:7","nodeType":"YulIdentifier","src":"3338:30:7"},"nativeSrc":"3338:32:7","nodeType":"YulFunctionCall","src":"3338:32:7"},"variables":[{"name":"zero_0","nativeSrc":"3328:6:7","nodeType":"YulTypedName","src":"3328:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3423:4:7","nodeType":"YulIdentifier","src":"3423:4:7"},{"name":"offset","nativeSrc":"3429:6:7","nodeType":"YulIdentifier","src":"3429:6:7"},{"name":"zero_0","nativeSrc":"3437:6:7","nodeType":"YulIdentifier","src":"3437:6:7"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3379:43:7","nodeType":"YulIdentifier","src":"3379:43:7"},"nativeSrc":"3379:65:7","nodeType":"YulFunctionCall","src":"3379:65:7"},"nativeSrc":"3379:65:7","nodeType":"YulExpressionStatement","src":"3379:65:7"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3261:189:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3300:4:7","nodeType":"YulTypedName","src":"3300:4:7","type":""},{"name":"offset","nativeSrc":"3306:6:7","nodeType":"YulTypedName","src":"3306:6:7","type":""}],"src":"3261:189:7"},{"body":{"nativeSrc":"3506:136:7","nodeType":"YulBlock","src":"3506:136:7","statements":[{"body":{"nativeSrc":"3573:63:7","nodeType":"YulBlock","src":"3573:63:7","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"3617:5:7","nodeType":"YulIdentifier","src":"3617:5:7"},{"kind":"number","nativeSrc":"3624:1:7","nodeType":"YulLiteral","src":"3624:1:7","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"3587:29:7","nodeType":"YulIdentifier","src":"3587:29:7"},"nativeSrc":"3587:39:7","nodeType":"YulFunctionCall","src":"3587:39:7"},"nativeSrc":"3587:39:7","nodeType":"YulExpressionStatement","src":"3587:39:7"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3526:5:7","nodeType":"YulIdentifier","src":"3526:5:7"},{"name":"end","nativeSrc":"3533:3:7","nodeType":"YulIdentifier","src":"3533:3:7"}],"functionName":{"name":"lt","nativeSrc":"3523:2:7","nodeType":"YulIdentifier","src":"3523:2:7"},"nativeSrc":"3523:14:7","nodeType":"YulFunctionCall","src":"3523:14:7"},"nativeSrc":"3516:120:7","nodeType":"YulForLoop","post":{"nativeSrc":"3538:26:7","nodeType":"YulBlock","src":"3538:26:7","statements":[{"nativeSrc":"3540:22:7","nodeType":"YulAssignment","src":"3540:22:7","value":{"arguments":[{"name":"start","nativeSrc":"3553:5:7","nodeType":"YulIdentifier","src":"3553:5:7"},{"kind":"number","nativeSrc":"3560:1:7","nodeType":"YulLiteral","src":"3560:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3549:3:7","nodeType":"YulIdentifier","src":"3549:3:7"},"nativeSrc":"3549:13:7","nodeType":"YulFunctionCall","src":"3549:13:7"},"variableNames":[{"name":"start","nativeSrc":"3540:5:7","nodeType":"YulIdentifier","src":"3540:5:7"}]}]},"pre":{"nativeSrc":"3520:2:7","nodeType":"YulBlock","src":"3520:2:7","statements":[]},"src":"3516:120:7"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"3456:186:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"3494:5:7","nodeType":"YulTypedName","src":"3494:5:7","type":""},{"name":"end","nativeSrc":"3501:3:7","nodeType":"YulTypedName","src":"3501:3:7","type":""}],"src":"3456:186:7"},{"body":{"nativeSrc":"3727:464:7","nodeType":"YulBlock","src":"3727:464:7","statements":[{"body":{"nativeSrc":"3753:431:7","nodeType":"YulBlock","src":"3753:431:7","statements":[{"nativeSrc":"3767:54:7","nodeType":"YulVariableDeclaration","src":"3767:54:7","value":{"arguments":[{"name":"array","nativeSrc":"3815:5:7","nodeType":"YulIdentifier","src":"3815:5:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"3783:31:7","nodeType":"YulIdentifier","src":"3783:31:7"},"nativeSrc":"3783:38:7","nodeType":"YulFunctionCall","src":"3783:38:7"},"variables":[{"name":"dataArea","nativeSrc":"3771:8:7","nodeType":"YulTypedName","src":"3771:8:7","type":""}]},{"nativeSrc":"3834:63:7","nodeType":"YulVariableDeclaration","src":"3834:63:7","value":{"arguments":[{"name":"dataArea","nativeSrc":"3857:8:7","nodeType":"YulIdentifier","src":"3857:8:7"},{"arguments":[{"name":"startIndex","nativeSrc":"3885:10:7","nodeType":"YulIdentifier","src":"3885:10:7"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"3867:17:7","nodeType":"YulIdentifier","src":"3867:17:7"},"nativeSrc":"3867:29:7","nodeType":"YulFunctionCall","src":"3867:29:7"}],"functionName":{"name":"add","nativeSrc":"3853:3:7","nodeType":"YulIdentifier","src":"3853:3:7"},"nativeSrc":"3853:44:7","nodeType":"YulFunctionCall","src":"3853:44:7"},"variables":[{"name":"deleteStart","nativeSrc":"3838:11:7","nodeType":"YulTypedName","src":"3838:11:7","type":""}]},{"body":{"nativeSrc":"4054:27:7","nodeType":"YulBlock","src":"4054:27:7","statements":[{"nativeSrc":"4056:23:7","nodeType":"YulAssignment","src":"4056:23:7","value":{"name":"dataArea","nativeSrc":"4071:8:7","nodeType":"YulIdentifier","src":"4071:8:7"},"variableNames":[{"name":"deleteStart","nativeSrc":"4056:11:7","nodeType":"YulIdentifier","src":"4056:11:7"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4038:10:7","nodeType":"YulIdentifier","src":"4038:10:7"},{"kind":"number","nativeSrc":"4050:2:7","nodeType":"YulLiteral","src":"4050:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4035:2:7","nodeType":"YulIdentifier","src":"4035:2:7"},"nativeSrc":"4035:18:7","nodeType":"YulFunctionCall","src":"4035:18:7"},"nativeSrc":"4032:49:7","nodeType":"YulIf","src":"4032:49:7"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4123:11:7","nodeType":"YulIdentifier","src":"4123:11:7"},{"arguments":[{"name":"dataArea","nativeSrc":"4140:8:7","nodeType":"YulIdentifier","src":"4140:8:7"},{"arguments":[{"name":"len","nativeSrc":"4168:3:7","nodeType":"YulIdentifier","src":"4168:3:7"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4150:17:7","nodeType":"YulIdentifier","src":"4150:17:7"},"nativeSrc":"4150:22:7","nodeType":"YulFunctionCall","src":"4150:22:7"}],"functionName":{"name":"add","nativeSrc":"4136:3:7","nodeType":"YulIdentifier","src":"4136:3:7"},"nativeSrc":"4136:37:7","nodeType":"YulFunctionCall","src":"4136:37:7"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4094:28:7","nodeType":"YulIdentifier","src":"4094:28:7"},"nativeSrc":"4094:80:7","nodeType":"YulFunctionCall","src":"4094:80:7"},"nativeSrc":"4094:80:7","nodeType":"YulExpressionStatement","src":"4094:80:7"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"3744:3:7","nodeType":"YulIdentifier","src":"3744:3:7"},{"kind":"number","nativeSrc":"3749:2:7","nodeType":"YulLiteral","src":"3749:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3741:2:7","nodeType":"YulIdentifier","src":"3741:2:7"},"nativeSrc":"3741:11:7","nodeType":"YulFunctionCall","src":"3741:11:7"},"nativeSrc":"3738:446:7","nodeType":"YulIf","src":"3738:446:7"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"3648:543:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"3703:5:7","nodeType":"YulTypedName","src":"3703:5:7","type":""},{"name":"len","nativeSrc":"3710:3:7","nodeType":"YulTypedName","src":"3710:3:7","type":""},{"name":"startIndex","nativeSrc":"3715:10:7","nodeType":"YulTypedName","src":"3715:10:7","type":""}],"src":"3648:543:7"},{"body":{"nativeSrc":"4260:54:7","nodeType":"YulBlock","src":"4260:54:7","statements":[{"nativeSrc":"4270:37:7","nodeType":"YulAssignment","src":"4270:37:7","value":{"arguments":[{"name":"bits","nativeSrc":"4295:4:7","nodeType":"YulIdentifier","src":"4295:4:7"},{"name":"value","nativeSrc":"4301:5:7","nodeType":"YulIdentifier","src":"4301:5:7"}],"functionName":{"name":"shr","nativeSrc":"4291:3:7","nodeType":"YulIdentifier","src":"4291:3:7"},"nativeSrc":"4291:16:7","nodeType":"YulFunctionCall","src":"4291:16:7"},"variableNames":[{"name":"newValue","nativeSrc":"4270:8:7","nodeType":"YulIdentifier","src":"4270:8:7"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4197:117:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4235:4:7","nodeType":"YulTypedName","src":"4235:4:7","type":""},{"name":"value","nativeSrc":"4241:5:7","nodeType":"YulTypedName","src":"4241:5:7","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4251:8:7","nodeType":"YulTypedName","src":"4251:8:7","type":""}],"src":"4197:117:7"},{"body":{"nativeSrc":"4371:118:7","nodeType":"YulBlock","src":"4371:118:7","statements":[{"nativeSrc":"4381:68:7","nodeType":"YulVariableDeclaration","src":"4381:68:7","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4430:1:7","nodeType":"YulLiteral","src":"4430:1:7","type":"","value":"8"},{"name":"bytes","nativeSrc":"4433:5:7","nodeType":"YulIdentifier","src":"4433:5:7"}],"functionName":{"name":"mul","nativeSrc":"4426:3:7","nodeType":"YulIdentifier","src":"4426:3:7"},"nativeSrc":"4426:13:7","nodeType":"YulFunctionCall","src":"4426:13:7"},{"arguments":[{"kind":"number","nativeSrc":"4445:1:7","nodeType":"YulLiteral","src":"4445:1:7","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4441:3:7","nodeType":"YulIdentifier","src":"4441:3:7"},"nativeSrc":"4441:6:7","nodeType":"YulFunctionCall","src":"4441:6:7"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4397:28:7","nodeType":"YulIdentifier","src":"4397:28:7"},"nativeSrc":"4397:51:7","nodeType":"YulFunctionCall","src":"4397:51:7"}],"functionName":{"name":"not","nativeSrc":"4393:3:7","nodeType":"YulIdentifier","src":"4393:3:7"},"nativeSrc":"4393:56:7","nodeType":"YulFunctionCall","src":"4393:56:7"},"variables":[{"name":"mask","nativeSrc":"4385:4:7","nodeType":"YulTypedName","src":"4385:4:7","type":""}]},{"nativeSrc":"4458:25:7","nodeType":"YulAssignment","src":"4458:25:7","value":{"arguments":[{"name":"data","nativeSrc":"4472:4:7","nodeType":"YulIdentifier","src":"4472:4:7"},{"name":"mask","nativeSrc":"4478:4:7","nodeType":"YulIdentifier","src":"4478:4:7"}],"functionName":{"name":"and","nativeSrc":"4468:3:7","nodeType":"YulIdentifier","src":"4468:3:7"},"nativeSrc":"4468:15:7","nodeType":"YulFunctionCall","src":"4468:15:7"},"variableNames":[{"name":"result","nativeSrc":"4458:6:7","nodeType":"YulIdentifier","src":"4458:6:7"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4320:169:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4348:4:7","nodeType":"YulTypedName","src":"4348:4:7","type":""},{"name":"bytes","nativeSrc":"4354:5:7","nodeType":"YulTypedName","src":"4354:5:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4364:6:7","nodeType":"YulTypedName","src":"4364:6:7","type":""}],"src":"4320:169:7"},{"body":{"nativeSrc":"4575:214:7","nodeType":"YulBlock","src":"4575:214:7","statements":[{"nativeSrc":"4708:37:7","nodeType":"YulAssignment","src":"4708:37:7","value":{"arguments":[{"name":"data","nativeSrc":"4735:4:7","nodeType":"YulIdentifier","src":"4735:4:7"},{"name":"len","nativeSrc":"4741:3:7","nodeType":"YulIdentifier","src":"4741:3:7"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4716:18:7","nodeType":"YulIdentifier","src":"4716:18:7"},"nativeSrc":"4716:29:7","nodeType":"YulFunctionCall","src":"4716:29:7"},"variableNames":[{"name":"data","nativeSrc":"4708:4:7","nodeType":"YulIdentifier","src":"4708:4:7"}]},{"nativeSrc":"4754:29:7","nodeType":"YulAssignment","src":"4754:29:7","value":{"arguments":[{"name":"data","nativeSrc":"4765:4:7","nodeType":"YulIdentifier","src":"4765:4:7"},{"arguments":[{"kind":"number","nativeSrc":"4775:1:7","nodeType":"YulLiteral","src":"4775:1:7","type":"","value":"2"},{"name":"len","nativeSrc":"4778:3:7","nodeType":"YulIdentifier","src":"4778:3:7"}],"functionName":{"name":"mul","nativeSrc":"4771:3:7","nodeType":"YulIdentifier","src":"4771:3:7"},"nativeSrc":"4771:11:7","nodeType":"YulFunctionCall","src":"4771:11:7"}],"functionName":{"name":"or","nativeSrc":"4762:2:7","nodeType":"YulIdentifier","src":"4762:2:7"},"nativeSrc":"4762:21:7","nodeType":"YulFunctionCall","src":"4762:21:7"},"variableNames":[{"name":"used","nativeSrc":"4754:4:7","nodeType":"YulIdentifier","src":"4754:4:7"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4494:295:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4556:4:7","nodeType":"YulTypedName","src":"4556:4:7","type":""},{"name":"len","nativeSrc":"4562:3:7","nodeType":"YulTypedName","src":"4562:3:7","type":""}],"returnVariables":[{"name":"used","nativeSrc":"4570:4:7","nodeType":"YulTypedName","src":"4570:4:7","type":""}],"src":"4494:295:7"},{"body":{"nativeSrc":"4886:1303:7","nodeType":"YulBlock","src":"4886:1303:7","statements":[{"nativeSrc":"4897:51:7","nodeType":"YulVariableDeclaration","src":"4897:51:7","value":{"arguments":[{"name":"src","nativeSrc":"4944:3:7","nodeType":"YulIdentifier","src":"4944:3:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"4911:32:7","nodeType":"YulIdentifier","src":"4911:32:7"},"nativeSrc":"4911:37:7","nodeType":"YulFunctionCall","src":"4911:37:7"},"variables":[{"name":"newLen","nativeSrc":"4901:6:7","nodeType":"YulTypedName","src":"4901:6:7","type":""}]},{"body":{"nativeSrc":"5033:22:7","nodeType":"YulBlock","src":"5033:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5035:16:7","nodeType":"YulIdentifier","src":"5035:16:7"},"nativeSrc":"5035:18:7","nodeType":"YulFunctionCall","src":"5035:18:7"},"nativeSrc":"5035:18:7","nodeType":"YulExpressionStatement","src":"5035:18:7"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5005:6:7","nodeType":"YulIdentifier","src":"5005:6:7"},{"kind":"number","nativeSrc":"5013:18:7","nodeType":"YulLiteral","src":"5013:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5002:2:7","nodeType":"YulIdentifier","src":"5002:2:7"},"nativeSrc":"5002:30:7","nodeType":"YulFunctionCall","src":"5002:30:7"},"nativeSrc":"4999:56:7","nodeType":"YulIf","src":"4999:56:7"},{"nativeSrc":"5065:52:7","nodeType":"YulVariableDeclaration","src":"5065:52:7","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5111:4:7","nodeType":"YulIdentifier","src":"5111:4:7"}],"functionName":{"name":"sload","nativeSrc":"5105:5:7","nodeType":"YulIdentifier","src":"5105:5:7"},"nativeSrc":"5105:11:7","nodeType":"YulFunctionCall","src":"5105:11:7"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5079:25:7","nodeType":"YulIdentifier","src":"5079:25:7"},"nativeSrc":"5079:38:7","nodeType":"YulFunctionCall","src":"5079:38:7"},"variables":[{"name":"oldLen","nativeSrc":"5069:6:7","nodeType":"YulTypedName","src":"5069:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5210:4:7","nodeType":"YulIdentifier","src":"5210:4:7"},{"name":"oldLen","nativeSrc":"5216:6:7","nodeType":"YulIdentifier","src":"5216:6:7"},{"name":"newLen","nativeSrc":"5224:6:7","nodeType":"YulIdentifier","src":"5224:6:7"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5164:45:7","nodeType":"YulIdentifier","src":"5164:45:7"},"nativeSrc":"5164:67:7","nodeType":"YulFunctionCall","src":"5164:67:7"},"nativeSrc":"5164:67:7","nodeType":"YulExpressionStatement","src":"5164:67:7"},{"nativeSrc":"5241:18:7","nodeType":"YulVariableDeclaration","src":"5241:18:7","value":{"kind":"number","nativeSrc":"5258:1:7","nodeType":"YulLiteral","src":"5258:1:7","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5245:9:7","nodeType":"YulTypedName","src":"5245:9:7","type":""}]},{"nativeSrc":"5269:17:7","nodeType":"YulAssignment","src":"5269:17:7","value":{"kind":"number","nativeSrc":"5282:4:7","nodeType":"YulLiteral","src":"5282:4:7","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5269:9:7","nodeType":"YulIdentifier","src":"5269:9:7"}]},{"cases":[{"body":{"nativeSrc":"5333:611:7","nodeType":"YulBlock","src":"5333:611:7","statements":[{"nativeSrc":"5347:37:7","nodeType":"YulVariableDeclaration","src":"5347:37:7","value":{"arguments":[{"name":"newLen","nativeSrc":"5366:6:7","nodeType":"YulIdentifier","src":"5366:6:7"},{"arguments":[{"kind":"number","nativeSrc":"5378:4:7","nodeType":"YulLiteral","src":"5378:4:7","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5374:3:7","nodeType":"YulIdentifier","src":"5374:3:7"},"nativeSrc":"5374:9:7","nodeType":"YulFunctionCall","src":"5374:9:7"}],"functionName":{"name":"and","nativeSrc":"5362:3:7","nodeType":"YulIdentifier","src":"5362:3:7"},"nativeSrc":"5362:22:7","nodeType":"YulFunctionCall","src":"5362:22:7"},"variables":[{"name":"loopEnd","nativeSrc":"5351:7:7","nodeType":"YulTypedName","src":"5351:7:7","type":""}]},{"nativeSrc":"5398:51:7","nodeType":"YulVariableDeclaration","src":"5398:51:7","value":{"arguments":[{"name":"slot","nativeSrc":"5444:4:7","nodeType":"YulIdentifier","src":"5444:4:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5412:31:7","nodeType":"YulIdentifier","src":"5412:31:7"},"nativeSrc":"5412:37:7","nodeType":"YulFunctionCall","src":"5412:37:7"},"variables":[{"name":"dstPtr","nativeSrc":"5402:6:7","nodeType":"YulTypedName","src":"5402:6:7","type":""}]},{"nativeSrc":"5462:10:7","nodeType":"YulVariableDeclaration","src":"5462:10:7","value":{"kind":"number","nativeSrc":"5471:1:7","nodeType":"YulLiteral","src":"5471:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5466:1:7","nodeType":"YulTypedName","src":"5466:1:7","type":""}]},{"body":{"nativeSrc":"5530:163:7","nodeType":"YulBlock","src":"5530:163:7","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5555:6:7","nodeType":"YulIdentifier","src":"5555:6:7"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5573:3:7","nodeType":"YulIdentifier","src":"5573:3:7"},{"name":"srcOffset","nativeSrc":"5578:9:7","nodeType":"YulIdentifier","src":"5578:9:7"}],"functionName":{"name":"add","nativeSrc":"5569:3:7","nodeType":"YulIdentifier","src":"5569:3:7"},"nativeSrc":"5569:19:7","nodeType":"YulFunctionCall","src":"5569:19:7"}],"functionName":{"name":"mload","nativeSrc":"5563:5:7","nodeType":"YulIdentifier","src":"5563:5:7"},"nativeSrc":"5563:26:7","nodeType":"YulFunctionCall","src":"5563:26:7"}],"functionName":{"name":"sstore","nativeSrc":"5548:6:7","nodeType":"YulIdentifier","src":"5548:6:7"},"nativeSrc":"5548:42:7","nodeType":"YulFunctionCall","src":"5548:42:7"},"nativeSrc":"5548:42:7","nodeType":"YulExpressionStatement","src":"5548:42:7"},{"nativeSrc":"5607:24:7","nodeType":"YulAssignment","src":"5607:24:7","value":{"arguments":[{"name":"dstPtr","nativeSrc":"5621:6:7","nodeType":"YulIdentifier","src":"5621:6:7"},{"kind":"number","nativeSrc":"5629:1:7","nodeType":"YulLiteral","src":"5629:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5617:3:7","nodeType":"YulIdentifier","src":"5617:3:7"},"nativeSrc":"5617:14:7","nodeType":"YulFunctionCall","src":"5617:14:7"},"variableNames":[{"name":"dstPtr","nativeSrc":"5607:6:7","nodeType":"YulIdentifier","src":"5607:6:7"}]},{"nativeSrc":"5648:31:7","nodeType":"YulAssignment","src":"5648:31:7","value":{"arguments":[{"name":"srcOffset","nativeSrc":"5665:9:7","nodeType":"YulIdentifier","src":"5665:9:7"},{"kind":"number","nativeSrc":"5676:2:7","nodeType":"YulLiteral","src":"5676:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5661:3:7","nodeType":"YulIdentifier","src":"5661:3:7"},"nativeSrc":"5661:18:7","nodeType":"YulFunctionCall","src":"5661:18:7"},"variableNames":[{"name":"srcOffset","nativeSrc":"5648:9:7","nodeType":"YulIdentifier","src":"5648:9:7"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5496:1:7","nodeType":"YulIdentifier","src":"5496:1:7"},{"name":"loopEnd","nativeSrc":"5499:7:7","nodeType":"YulIdentifier","src":"5499:7:7"}],"functionName":{"name":"lt","nativeSrc":"5493:2:7","nodeType":"YulIdentifier","src":"5493:2:7"},"nativeSrc":"5493:14:7","nodeType":"YulFunctionCall","src":"5493:14:7"},"nativeSrc":"5485:208:7","nodeType":"YulForLoop","post":{"nativeSrc":"5508:21:7","nodeType":"YulBlock","src":"5508:21:7","statements":[{"nativeSrc":"5510:17:7","nodeType":"YulAssignment","src":"5510:17:7","value":{"arguments":[{"name":"i","nativeSrc":"5519:1:7","nodeType":"YulIdentifier","src":"5519:1:7"},{"kind":"number","nativeSrc":"5522:4:7","nodeType":"YulLiteral","src":"5522:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5515:3:7","nodeType":"YulIdentifier","src":"5515:3:7"},"nativeSrc":"5515:12:7","nodeType":"YulFunctionCall","src":"5515:12:7"},"variableNames":[{"name":"i","nativeSrc":"5510:1:7","nodeType":"YulIdentifier","src":"5510:1:7"}]}]},"pre":{"nativeSrc":"5489:3:7","nodeType":"YulBlock","src":"5489:3:7","statements":[]},"src":"5485:208:7"},{"body":{"nativeSrc":"5729:156:7","nodeType":"YulBlock","src":"5729:156:7","statements":[{"nativeSrc":"5747:43:7","nodeType":"YulVariableDeclaration","src":"5747:43:7","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5774:3:7","nodeType":"YulIdentifier","src":"5774:3:7"},{"name":"srcOffset","nativeSrc":"5779:9:7","nodeType":"YulIdentifier","src":"5779:9:7"}],"functionName":{"name":"add","nativeSrc":"5770:3:7","nodeType":"YulIdentifier","src":"5770:3:7"},"nativeSrc":"5770:19:7","nodeType":"YulFunctionCall","src":"5770:19:7"}],"functionName":{"name":"mload","nativeSrc":"5764:5:7","nodeType":"YulIdentifier","src":"5764:5:7"},"nativeSrc":"5764:26:7","nodeType":"YulFunctionCall","src":"5764:26:7"},"variables":[{"name":"lastValue","nativeSrc":"5751:9:7","nodeType":"YulTypedName","src":"5751:9:7","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5814:6:7","nodeType":"YulIdentifier","src":"5814:6:7"},{"arguments":[{"name":"lastValue","nativeSrc":"5841:9:7","nodeType":"YulIdentifier","src":"5841:9:7"},{"arguments":[{"name":"newLen","nativeSrc":"5856:6:7","nodeType":"YulIdentifier","src":"5856:6:7"},{"kind":"number","nativeSrc":"5864:4:7","nodeType":"YulLiteral","src":"5864:4:7","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"5852:3:7","nodeType":"YulIdentifier","src":"5852:3:7"},"nativeSrc":"5852:17:7","nodeType":"YulFunctionCall","src":"5852:17:7"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5822:18:7","nodeType":"YulIdentifier","src":"5822:18:7"},"nativeSrc":"5822:48:7","nodeType":"YulFunctionCall","src":"5822:48:7"}],"functionName":{"name":"sstore","nativeSrc":"5807:6:7","nodeType":"YulIdentifier","src":"5807:6:7"},"nativeSrc":"5807:64:7","nodeType":"YulFunctionCall","src":"5807:64:7"},"nativeSrc":"5807:64:7","nodeType":"YulExpressionStatement","src":"5807:64:7"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"5712:7:7","nodeType":"YulIdentifier","src":"5712:7:7"},{"name":"newLen","nativeSrc":"5721:6:7","nodeType":"YulIdentifier","src":"5721:6:7"}],"functionName":{"name":"lt","nativeSrc":"5709:2:7","nodeType":"YulIdentifier","src":"5709:2:7"},"nativeSrc":"5709:19:7","nodeType":"YulFunctionCall","src":"5709:19:7"},"nativeSrc":"5706:179:7","nodeType":"YulIf","src":"5706:179:7"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5905:4:7","nodeType":"YulIdentifier","src":"5905:4:7"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"5919:6:7","nodeType":"YulIdentifier","src":"5919:6:7"},{"kind":"number","nativeSrc":"5927:1:7","nodeType":"YulLiteral","src":"5927:1:7","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"5915:3:7","nodeType":"YulIdentifier","src":"5915:3:7"},"nativeSrc":"5915:14:7","nodeType":"YulFunctionCall","src":"5915:14:7"},{"kind":"number","nativeSrc":"5931:1:7","nodeType":"YulLiteral","src":"5931:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5911:3:7","nodeType":"YulIdentifier","src":"5911:3:7"},"nativeSrc":"5911:22:7","nodeType":"YulFunctionCall","src":"5911:22:7"}],"functionName":{"name":"sstore","nativeSrc":"5898:6:7","nodeType":"YulIdentifier","src":"5898:6:7"},"nativeSrc":"5898:36:7","nodeType":"YulFunctionCall","src":"5898:36:7"},"nativeSrc":"5898:36:7","nodeType":"YulExpressionStatement","src":"5898:36:7"}]},"nativeSrc":"5326:618:7","nodeType":"YulCase","src":"5326:618:7","value":{"kind":"number","nativeSrc":"5331:1:7","nodeType":"YulLiteral","src":"5331:1:7","type":"","value":"1"}},{"body":{"nativeSrc":"5961:222:7","nodeType":"YulBlock","src":"5961:222:7","statements":[{"nativeSrc":"5975:14:7","nodeType":"YulVariableDeclaration","src":"5975:14:7","value":{"kind":"number","nativeSrc":"5988:1:7","nodeType":"YulLiteral","src":"5988:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5979:5:7","nodeType":"YulTypedName","src":"5979:5:7","type":""}]},{"body":{"nativeSrc":"6012:67:7","nodeType":"YulBlock","src":"6012:67:7","statements":[{"nativeSrc":"6030:35:7","nodeType":"YulAssignment","src":"6030:35:7","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6049:3:7","nodeType":"YulIdentifier","src":"6049:3:7"},{"name":"srcOffset","nativeSrc":"6054:9:7","nodeType":"YulIdentifier","src":"6054:9:7"}],"functionName":{"name":"add","nativeSrc":"6045:3:7","nodeType":"YulIdentifier","src":"6045:3:7"},"nativeSrc":"6045:19:7","nodeType":"YulFunctionCall","src":"6045:19:7"}],"functionName":{"name":"mload","nativeSrc":"6039:5:7","nodeType":"YulIdentifier","src":"6039:5:7"},"nativeSrc":"6039:26:7","nodeType":"YulFunctionCall","src":"6039:26:7"},"variableNames":[{"name":"value","nativeSrc":"6030:5:7","nodeType":"YulIdentifier","src":"6030:5:7"}]}]},"condition":{"name":"newLen","nativeSrc":"6005:6:7","nodeType":"YulIdentifier","src":"6005:6:7"},"nativeSrc":"6002:77:7","nodeType":"YulIf","src":"6002:77:7"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6099:4:7","nodeType":"YulIdentifier","src":"6099:4:7"},{"arguments":[{"name":"value","nativeSrc":"6158:5:7","nodeType":"YulIdentifier","src":"6158:5:7"},{"name":"newLen","nativeSrc":"6165:6:7","nodeType":"YulIdentifier","src":"6165:6:7"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6105:52:7","nodeType":"YulIdentifier","src":"6105:52:7"},"nativeSrc":"6105:67:7","nodeType":"YulFunctionCall","src":"6105:67:7"}],"functionName":{"name":"sstore","nativeSrc":"6092:6:7","nodeType":"YulIdentifier","src":"6092:6:7"},"nativeSrc":"6092:81:7","nodeType":"YulFunctionCall","src":"6092:81:7"},"nativeSrc":"6092:81:7","nodeType":"YulExpressionStatement","src":"6092:81:7"}]},"nativeSrc":"5953:230:7","nodeType":"YulCase","src":"5953:230:7","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5306:6:7","nodeType":"YulIdentifier","src":"5306:6:7"},{"kind":"number","nativeSrc":"5314:2:7","nodeType":"YulLiteral","src":"5314:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5303:2:7","nodeType":"YulIdentifier","src":"5303:2:7"},"nativeSrc":"5303:14:7","nodeType":"YulFunctionCall","src":"5303:14:7"},"nativeSrc":"5296:887:7","nodeType":"YulSwitch","src":"5296:887:7"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"4794:1395:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"4875:4:7","nodeType":"YulTypedName","src":"4875:4:7","type":""},{"name":"src","nativeSrc":"4881:3:7","nodeType":"YulTypedName","src":"4881:3:7","type":""}],"src":"4794:1395:7"},{"body":{"nativeSrc":"6240:81:7","nodeType":"YulBlock","src":"6240:81:7","statements":[{"nativeSrc":"6250:65:7","nodeType":"YulAssignment","src":"6250:65:7","value":{"arguments":[{"name":"value","nativeSrc":"6265:5:7","nodeType":"YulIdentifier","src":"6265:5:7"},{"kind":"number","nativeSrc":"6272:42:7","nodeType":"YulLiteral","src":"6272:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6261:3:7","nodeType":"YulIdentifier","src":"6261:3:7"},"nativeSrc":"6261:54:7","nodeType":"YulFunctionCall","src":"6261:54:7"},"variableNames":[{"name":"cleaned","nativeSrc":"6250:7:7","nodeType":"YulIdentifier","src":"6250:7:7"}]}]},"name":"cleanup_t_uint160","nativeSrc":"6195:126:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6222:5:7","nodeType":"YulTypedName","src":"6222:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6232:7:7","nodeType":"YulTypedName","src":"6232:7:7","type":""}],"src":"6195:126:7"},{"body":{"nativeSrc":"6372:51:7","nodeType":"YulBlock","src":"6372:51:7","statements":[{"nativeSrc":"6382:35:7","nodeType":"YulAssignment","src":"6382:35:7","value":{"arguments":[{"name":"value","nativeSrc":"6411:5:7","nodeType":"YulIdentifier","src":"6411:5:7"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"6393:17:7","nodeType":"YulIdentifier","src":"6393:17:7"},"nativeSrc":"6393:24:7","nodeType":"YulFunctionCall","src":"6393:24:7"},"variableNames":[{"name":"cleaned","nativeSrc":"6382:7:7","nodeType":"YulIdentifier","src":"6382:7:7"}]}]},"name":"cleanup_t_address","nativeSrc":"6327:96:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6354:5:7","nodeType":"YulTypedName","src":"6354:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6364:7:7","nodeType":"YulTypedName","src":"6364:7:7","type":""}],"src":"6327:96:7"},{"body":{"nativeSrc":"6494:53:7","nodeType":"YulBlock","src":"6494:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6511:3:7","nodeType":"YulIdentifier","src":"6511:3:7"},{"arguments":[{"name":"value","nativeSrc":"6534:5:7","nodeType":"YulIdentifier","src":"6534:5:7"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6516:17:7","nodeType":"YulIdentifier","src":"6516:17:7"},"nativeSrc":"6516:24:7","nodeType":"YulFunctionCall","src":"6516:24:7"}],"functionName":{"name":"mstore","nativeSrc":"6504:6:7","nodeType":"YulIdentifier","src":"6504:6:7"},"nativeSrc":"6504:37:7","nodeType":"YulFunctionCall","src":"6504:37:7"},"nativeSrc":"6504:37:7","nodeType":"YulExpressionStatement","src":"6504:37:7"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6429:118:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6482:5:7","nodeType":"YulTypedName","src":"6482:5:7","type":""},{"name":"pos","nativeSrc":"6489:3:7","nodeType":"YulTypedName","src":"6489:3:7","type":""}],"src":"6429:118:7"},{"body":{"nativeSrc":"6651:124:7","nodeType":"YulBlock","src":"6651:124:7","statements":[{"nativeSrc":"6661:26:7","nodeType":"YulAssignment","src":"6661:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"6673:9:7","nodeType":"YulIdentifier","src":"6673:9:7"},{"kind":"number","nativeSrc":"6684:2:7","nodeType":"YulLiteral","src":"6684:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6669:3:7","nodeType":"YulIdentifier","src":"6669:3:7"},"nativeSrc":"6669:18:7","nodeType":"YulFunctionCall","src":"6669:18:7"},"variableNames":[{"name":"tail","nativeSrc":"6661:4:7","nodeType":"YulIdentifier","src":"6661:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6741:6:7","nodeType":"YulIdentifier","src":"6741:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"6754:9:7","nodeType":"YulIdentifier","src":"6754:9:7"},{"kind":"number","nativeSrc":"6765:1:7","nodeType":"YulLiteral","src":"6765:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6750:3:7","nodeType":"YulIdentifier","src":"6750:3:7"},"nativeSrc":"6750:17:7","nodeType":"YulFunctionCall","src":"6750:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6697:43:7","nodeType":"YulIdentifier","src":"6697:43:7"},"nativeSrc":"6697:71:7","nodeType":"YulFunctionCall","src":"6697:71:7"},"nativeSrc":"6697:71:7","nodeType":"YulExpressionStatement","src":"6697:71:7"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6553:222:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6623:9:7","nodeType":"YulTypedName","src":"6623:9:7","type":""},{"name":"value0","nativeSrc":"6635:6:7","nodeType":"YulTypedName","src":"6635:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6646:4:7","nodeType":"YulTypedName","src":"6646:4:7","type":""}],"src":"6553:222:7"},{"body":{"nativeSrc":"6809:152:7","nodeType":"YulBlock","src":"6809:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6826:1:7","nodeType":"YulLiteral","src":"6826:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"6829:77:7","nodeType":"YulLiteral","src":"6829:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6819:6:7","nodeType":"YulIdentifier","src":"6819:6:7"},"nativeSrc":"6819:88:7","nodeType":"YulFunctionCall","src":"6819:88:7"},"nativeSrc":"6819:88:7","nodeType":"YulExpressionStatement","src":"6819:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6923:1:7","nodeType":"YulLiteral","src":"6923:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"6926:4:7","nodeType":"YulLiteral","src":"6926:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6916:6:7","nodeType":"YulIdentifier","src":"6916:6:7"},"nativeSrc":"6916:15:7","nodeType":"YulFunctionCall","src":"6916:15:7"},"nativeSrc":"6916:15:7","nodeType":"YulExpressionStatement","src":"6916:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6947:1:7","nodeType":"YulLiteral","src":"6947:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"6950:4:7","nodeType":"YulLiteral","src":"6950:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6940:6:7","nodeType":"YulIdentifier","src":"6940:6:7"},"nativeSrc":"6940:15:7","nodeType":"YulFunctionCall","src":"6940:15:7"},"nativeSrc":"6940:15:7","nodeType":"YulExpressionStatement","src":"6940:15:7"}]},"name":"panic_error_0x11","nativeSrc":"6781:180:7","nodeType":"YulFunctionDefinition","src":"6781:180:7"},{"body":{"nativeSrc":"7011:147:7","nodeType":"YulBlock","src":"7011:147:7","statements":[{"nativeSrc":"7021:25:7","nodeType":"YulAssignment","src":"7021:25:7","value":{"arguments":[{"name":"x","nativeSrc":"7044:1:7","nodeType":"YulIdentifier","src":"7044:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7026:17:7","nodeType":"YulIdentifier","src":"7026:17:7"},"nativeSrc":"7026:20:7","nodeType":"YulFunctionCall","src":"7026:20:7"},"variableNames":[{"name":"x","nativeSrc":"7021:1:7","nodeType":"YulIdentifier","src":"7021:1:7"}]},{"nativeSrc":"7055:25:7","nodeType":"YulAssignment","src":"7055:25:7","value":{"arguments":[{"name":"y","nativeSrc":"7078:1:7","nodeType":"YulIdentifier","src":"7078:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7060:17:7","nodeType":"YulIdentifier","src":"7060:17:7"},"nativeSrc":"7060:20:7","nodeType":"YulFunctionCall","src":"7060:20:7"},"variableNames":[{"name":"y","nativeSrc":"7055:1:7","nodeType":"YulIdentifier","src":"7055:1:7"}]},{"nativeSrc":"7089:16:7","nodeType":"YulAssignment","src":"7089:16:7","value":{"arguments":[{"name":"x","nativeSrc":"7100:1:7","nodeType":"YulIdentifier","src":"7100:1:7"},{"name":"y","nativeSrc":"7103:1:7","nodeType":"YulIdentifier","src":"7103:1:7"}],"functionName":{"name":"add","nativeSrc":"7096:3:7","nodeType":"YulIdentifier","src":"7096:3:7"},"nativeSrc":"7096:9:7","nodeType":"YulFunctionCall","src":"7096:9:7"},"variableNames":[{"name":"sum","nativeSrc":"7089:3:7","nodeType":"YulIdentifier","src":"7089:3:7"}]},{"body":{"nativeSrc":"7129:22:7","nodeType":"YulBlock","src":"7129:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7131:16:7","nodeType":"YulIdentifier","src":"7131:16:7"},"nativeSrc":"7131:18:7","nodeType":"YulFunctionCall","src":"7131:18:7"},"nativeSrc":"7131:18:7","nodeType":"YulExpressionStatement","src":"7131:18:7"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7121:1:7","nodeType":"YulIdentifier","src":"7121:1:7"},{"name":"sum","nativeSrc":"7124:3:7","nodeType":"YulIdentifier","src":"7124:3:7"}],"functionName":{"name":"gt","nativeSrc":"7118:2:7","nodeType":"YulIdentifier","src":"7118:2:7"},"nativeSrc":"7118:10:7","nodeType":"YulFunctionCall","src":"7118:10:7"},"nativeSrc":"7115:36:7","nodeType":"YulIf","src":"7115:36:7"}]},"name":"checked_add_t_uint256","nativeSrc":"6967:191:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6998:1:7","nodeType":"YulTypedName","src":"6998:1:7","type":""},{"name":"y","nativeSrc":"7001:1:7","nodeType":"YulTypedName","src":"7001:1:7","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7007:3:7","nodeType":"YulTypedName","src":"7007:3:7","type":""}],"src":"6967:191:7"},{"body":{"nativeSrc":"7229:53:7","nodeType":"YulBlock","src":"7229:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7246:3:7","nodeType":"YulIdentifier","src":"7246:3:7"},{"arguments":[{"name":"value","nativeSrc":"7269:5:7","nodeType":"YulIdentifier","src":"7269:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7251:17:7","nodeType":"YulIdentifier","src":"7251:17:7"},"nativeSrc":"7251:24:7","nodeType":"YulFunctionCall","src":"7251:24:7"}],"functionName":{"name":"mstore","nativeSrc":"7239:6:7","nodeType":"YulIdentifier","src":"7239:6:7"},"nativeSrc":"7239:37:7","nodeType":"YulFunctionCall","src":"7239:37:7"},"nativeSrc":"7239:37:7","nodeType":"YulExpressionStatement","src":"7239:37:7"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7164:118:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7217:5:7","nodeType":"YulTypedName","src":"7217:5:7","type":""},{"name":"pos","nativeSrc":"7224:3:7","nodeType":"YulTypedName","src":"7224:3:7","type":""}],"src":"7164:118:7"},{"body":{"nativeSrc":"7442:288:7","nodeType":"YulBlock","src":"7442:288:7","statements":[{"nativeSrc":"7452:26:7","nodeType":"YulAssignment","src":"7452:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"7464:9:7","nodeType":"YulIdentifier","src":"7464:9:7"},{"kind":"number","nativeSrc":"7475:2:7","nodeType":"YulLiteral","src":"7475:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7460:3:7","nodeType":"YulIdentifier","src":"7460:3:7"},"nativeSrc":"7460:18:7","nodeType":"YulFunctionCall","src":"7460:18:7"},"variableNames":[{"name":"tail","nativeSrc":"7452:4:7","nodeType":"YulIdentifier","src":"7452:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7532:6:7","nodeType":"YulIdentifier","src":"7532:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"7545:9:7","nodeType":"YulIdentifier","src":"7545:9:7"},{"kind":"number","nativeSrc":"7556:1:7","nodeType":"YulLiteral","src":"7556:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7541:3:7","nodeType":"YulIdentifier","src":"7541:3:7"},"nativeSrc":"7541:17:7","nodeType":"YulFunctionCall","src":"7541:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7488:43:7","nodeType":"YulIdentifier","src":"7488:43:7"},"nativeSrc":"7488:71:7","nodeType":"YulFunctionCall","src":"7488:71:7"},"nativeSrc":"7488:71:7","nodeType":"YulExpressionStatement","src":"7488:71:7"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"7613:6:7","nodeType":"YulIdentifier","src":"7613:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"7626:9:7","nodeType":"YulIdentifier","src":"7626:9:7"},{"kind":"number","nativeSrc":"7637:2:7","nodeType":"YulLiteral","src":"7637:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7622:3:7","nodeType":"YulIdentifier","src":"7622:3:7"},"nativeSrc":"7622:18:7","nodeType":"YulFunctionCall","src":"7622:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7569:43:7","nodeType":"YulIdentifier","src":"7569:43:7"},"nativeSrc":"7569:72:7","nodeType":"YulFunctionCall","src":"7569:72:7"},"nativeSrc":"7569:72:7","nodeType":"YulExpressionStatement","src":"7569:72:7"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"7695:6:7","nodeType":"YulIdentifier","src":"7695:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"7708:9:7","nodeType":"YulIdentifier","src":"7708:9:7"},{"kind":"number","nativeSrc":"7719:2:7","nodeType":"YulLiteral","src":"7719:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7704:3:7","nodeType":"YulIdentifier","src":"7704:3:7"},"nativeSrc":"7704:18:7","nodeType":"YulFunctionCall","src":"7704:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7651:43:7","nodeType":"YulIdentifier","src":"7651:43:7"},"nativeSrc":"7651:72:7","nodeType":"YulFunctionCall","src":"7651:72:7"},"nativeSrc":"7651:72:7","nodeType":"YulExpressionStatement","src":"7651:72:7"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"7288:442:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7398:9:7","nodeType":"YulTypedName","src":"7398:9:7","type":""},{"name":"value2","nativeSrc":"7410:6:7","nodeType":"YulTypedName","src":"7410:6:7","type":""},{"name":"value1","nativeSrc":"7418:6:7","nodeType":"YulTypedName","src":"7418:6:7","type":""},{"name":"value0","nativeSrc":"7426:6:7","nodeType":"YulTypedName","src":"7426:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7437:4:7","nodeType":"YulTypedName","src":"7437:4:7","type":""}],"src":"7288:442:7"},{"body":{"nativeSrc":"7834:124:7","nodeType":"YulBlock","src":"7834:124:7","statements":[{"nativeSrc":"7844:26:7","nodeType":"YulAssignment","src":"7844:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"7856:9:7","nodeType":"YulIdentifier","src":"7856:9:7"},{"kind":"number","nativeSrc":"7867:2:7","nodeType":"YulLiteral","src":"7867:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7852:3:7","nodeType":"YulIdentifier","src":"7852:3:7"},"nativeSrc":"7852:18:7","nodeType":"YulFunctionCall","src":"7852:18:7"},"variableNames":[{"name":"tail","nativeSrc":"7844:4:7","nodeType":"YulIdentifier","src":"7844:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7924:6:7","nodeType":"YulIdentifier","src":"7924:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"7937:9:7","nodeType":"YulIdentifier","src":"7937:9:7"},{"kind":"number","nativeSrc":"7948:1:7","nodeType":"YulLiteral","src":"7948:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7933:3:7","nodeType":"YulIdentifier","src":"7933:3:7"},"nativeSrc":"7933:17:7","nodeType":"YulFunctionCall","src":"7933:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7880:43:7","nodeType":"YulIdentifier","src":"7880:43:7"},"nativeSrc":"7880:71:7","nodeType":"YulFunctionCall","src":"7880:71:7"},"nativeSrc":"7880:71:7","nodeType":"YulExpressionStatement","src":"7880:71:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"7736:222:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7806:9:7","nodeType":"YulTypedName","src":"7806:9:7","type":""},{"name":"value0","nativeSrc":"7818:6:7","nodeType":"YulTypedName","src":"7818:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7829:4:7","nodeType":"YulTypedName","src":"7829:4:7","type":""}],"src":"7736:222:7"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001704380380620017048339818101604052810190620000379190620003df565b6040518060400160405280600881526020017f4f7572546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f4f540000000000000000000000000000000000000000000000000000000000008152508160039081620000b4919062000681565b508060049081620000c6919062000681565b505050620000db3382620000e260201b60201c565b506200089f565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001575760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200014e9190620007ad565b60405180910390fd5b6200016b600083836200016f60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001c5578060026000828254620001b89190620007f9565b925050819055506200029b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000254578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200024b9392919062000845565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002e6578060026000828254039250508190555062000333565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000392919062000882565b60405180910390a3505050565b600080fd5b6000819050919050565b620003b981620003a4565b8114620003c557600080fd5b50565b600081519050620003d981620003ae565b92915050565b600060208284031215620003f857620003f76200039f565b5b60006200040884828501620003c8565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200049357607f821691505b602082108103620004a957620004a86200044b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004d4565b6200051f8683620004d4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620005626200055c6200055684620003a4565b62000537565b620003a4565b9050919050565b6000819050919050565b6200057e8362000541565b620005966200058d8262000569565b848454620004e1565b825550505050565b600090565b620005ad6200059e565b620005ba81848462000573565b505050565b5b81811015620005e257620005d6600082620005a3565b600181019050620005c0565b5050565b601f8211156200063157620005fb81620004af565b6200060684620004c4565b8101602085101562000616578190505b6200062e6200062585620004c4565b830182620005bf565b50505b505050565b600082821c905092915050565b6000620006566000198460080262000636565b1980831691505092915050565b600062000671838362000643565b9150826002028217905092915050565b6200068c8262000411565b67ffffffffffffffff811115620006a857620006a76200041c565b5b620006b482546200047a565b620006c1828285620005e6565b600060209050601f831160018114620006f95760008415620006e4578287015190505b620006f0858262000663565b86555062000760565b601f1984166200070986620004af565b60005b8281101562000733578489015182556001820191506020850194506020810190506200070c565b868310156200075357848901516200074f601f89168262000643565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007958262000768565b9050919050565b620007a78162000788565b82525050565b6000602082019050620007c460008301846200079c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200080682620003a4565b91506200081383620003a4565b92508282019050808211156200082e576200082d620007ca565b5b92915050565b6200083f81620003a4565b82525050565b60006060820190506200085c60008301866200079c565b6200086b602083018562000834565b6200087a604083018462000834565b949350505050565b600060208201905062000899600083018462000834565b92915050565b610e5580620008af6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610aa9565b60405180910390f35b6100d060048036038101906100cb9190610b64565b610292565b6040516100dd9190610bbf565b60405180910390f35b6100ee6102b5565b6040516100fb9190610be9565b60405180910390f35b61011e60048036038101906101199190610c04565b6102bf565b60405161012b9190610bbf565b60405180910390f35b61013c6102ee565b6040516101499190610c73565b60405180910390f35b61016c60048036038101906101679190610c8e565b6102f7565b6040516101799190610be9565b60405180910390f35b61018a61033f565b6040516101979190610aa9565b60405180910390f35b6101ba60048036038101906101b59190610b64565b6103d1565b6040516101c79190610bbf565b60405180910390f35b6101ea60048036038101906101e59190610cbb565b6103f4565b6040516101f79190610be9565b60405180910390f35b60606003805461020f90610d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610d2a565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b60008061029d61047b565b90506102aa818585610483565b600191505092915050565b6000600254905090565b6000806102ca61047b565b90506102d7858285610495565b6102e2858585610529565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461034e90610d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610d2a565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000806103dc61047b565b90506103e9818585610529565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b610490838383600161061d565b505050565b60006104a184846103f4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105235781811015610513578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050a93929190610d6a565b60405180910390fd5b6105228484848403600061061d565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059b5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105929190610da1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106049190610da1565b60405180910390fd5b6106188383836107f4565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361068f5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106869190610da1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107015760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106f89190610da1565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156107ee578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107e59190610be9565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084657806002600082825461083a9190610deb565b92505081905550610919565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156108d2578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108c993929190610d6a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096257806002600082825403925050819055506109af565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a0c9190610be9565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a53578082015181840152602081019050610a38565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a7b82610a19565b610a858185610a24565b9350610a95818560208601610a35565b610a9e81610a5f565b840191505092915050565b60006020820190508181036000830152610ac38184610a70565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610afb82610ad0565b9050919050565b610b0b81610af0565b8114610b1657600080fd5b50565b600081359050610b2881610b02565b92915050565b6000819050919050565b610b4181610b2e565b8114610b4c57600080fd5b50565b600081359050610b5e81610b38565b92915050565b60008060408385031215610b7b57610b7a610acb565b5b6000610b8985828601610b19565b9250506020610b9a85828601610b4f565b9150509250929050565b60008115159050919050565b610bb981610ba4565b82525050565b6000602082019050610bd46000830184610bb0565b92915050565b610be381610b2e565b82525050565b6000602082019050610bfe6000830184610bda565b92915050565b600080600060608486031215610c1d57610c1c610acb565b5b6000610c2b86828701610b19565b9350506020610c3c86828701610b19565b9250506040610c4d86828701610b4f565b9150509250925092565b600060ff82169050919050565b610c6d81610c57565b82525050565b6000602082019050610c886000830184610c64565b92915050565b600060208284031215610ca457610ca3610acb565b5b6000610cb284828501610b19565b91505092915050565b60008060408385031215610cd257610cd1610acb565b5b6000610ce085828601610b19565b9250506020610cf185828601610b19565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d4257607f821691505b602082108103610d5557610d54610cfb565b5b50919050565b610d6481610af0565b82525050565b6000606082019050610d7f6000830186610d5b565b610d8c6020830185610bda565b610d996040830184610bda565b949350505050565b6000602082019050610db66000830184610d5b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df682610b2e565b9150610e0183610b2e565b9250828201905080821115610e1957610e18610dbc565b5b9291505056fea26469706673582212204833c431f21bca4a24e23e80e02e9f3670bf86de80b645c51a8abc0bb1697b4c64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1704 CODESIZE SUB DUP1 PUSH3 0x1704 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F7572546F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F54000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0x681 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x681 JUMP JUMPDEST POP POP POP PUSH3 0xDB CALLER DUP3 PUSH3 0xE2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x89F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x157 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x14E SWAP2 SWAP1 PUSH3 0x7AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x16B PUSH1 0x0 DUP4 DUP4 PUSH3 0x16F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1C5 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1B8 SWAP2 SWAP1 PUSH3 0x7F9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x29B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x254 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x24B SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x845 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2E6 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x333 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x392 SWAP2 SWAP1 PUSH3 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3B9 DUP2 PUSH3 0x3A4 JUMP JUMPDEST DUP2 EQ PUSH3 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3D9 DUP2 PUSH3 0x3AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3F8 JUMPI PUSH3 0x3F7 PUSH3 0x39F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x408 DUP5 DUP3 DUP6 ADD PUSH3 0x3C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x493 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4A9 JUMPI PUSH3 0x4A8 PUSH3 0x44B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x513 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4D4 JUMP JUMPDEST PUSH3 0x51F DUP7 DUP4 PUSH3 0x4D4 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x562 PUSH3 0x55C PUSH3 0x556 DUP5 PUSH3 0x3A4 JUMP JUMPDEST PUSH3 0x537 JUMP JUMPDEST PUSH3 0x3A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x57E DUP4 PUSH3 0x541 JUMP JUMPDEST PUSH3 0x596 PUSH3 0x58D DUP3 PUSH3 0x569 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4E1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5AD PUSH3 0x59E JUMP JUMPDEST PUSH3 0x5BA DUP2 DUP5 DUP5 PUSH3 0x573 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5E2 JUMPI PUSH3 0x5D6 PUSH1 0x0 DUP3 PUSH3 0x5A3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x631 JUMPI PUSH3 0x5FB DUP2 PUSH3 0x4AF JUMP JUMPDEST PUSH3 0x606 DUP5 PUSH3 0x4C4 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x616 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x62E PUSH3 0x625 DUP6 PUSH3 0x4C4 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5BF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x656 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x636 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x671 DUP4 DUP4 PUSH3 0x643 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x68C DUP3 PUSH3 0x411 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A8 JUMPI PUSH3 0x6A7 PUSH3 0x41C JUMP JUMPDEST JUMPDEST PUSH3 0x6B4 DUP3 SLOAD PUSH3 0x47A JUMP JUMPDEST PUSH3 0x6C1 DUP3 DUP3 DUP6 PUSH3 0x5E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6F9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6E4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6F0 DUP6 DUP3 PUSH3 0x663 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x760 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x709 DUP7 PUSH3 0x4AF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x733 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x70C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x753 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x74F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x643 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x795 DUP3 PUSH3 0x768 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7A7 DUP2 PUSH3 0x788 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x7C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x79C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x806 DUP3 PUSH3 0x3A4 JUMP JUMPDEST SWAP2 POP PUSH3 0x813 DUP4 PUSH3 0x3A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x82E JUMPI PUSH3 0x82D PUSH3 0x7CA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x83F DUP2 PUSH3 0x3A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x85C PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x79C JUMP JUMPDEST PUSH3 0x86B PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x834 JUMP JUMPDEST PUSH3 0x87A PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x834 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x899 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x834 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE55 DUP1 PUSH3 0x8AF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xC8E JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29D PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA DUP2 DUP6 DUP6 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7 DUP6 DUP3 DUP6 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x2E2 DUP6 DUP6 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP2 DUP6 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x490 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x61D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP5 DUP5 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x523 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x513 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x522 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x61D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x618 DUP4 DUP4 DUP4 PUSH2 0x7F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x701 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7EE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x846 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83A SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8D2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x962 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9AF JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA0C SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA53 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7B DUP3 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0xA85 DUP2 DUP6 PUSH2 0xA24 JUMP JUMPDEST SWAP4 POP PUSH2 0xA95 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA35 JUMP JUMPDEST PUSH2 0xA9E DUP2 PUSH2 0xA5F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC3 DUP2 DUP5 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFB DUP3 PUSH2 0xAD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0B DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP2 EQ PUSH2 0xB16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB28 DUP2 PUSH2 0xB02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB41 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP2 EQ PUSH2 0xB4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5E DUP2 PUSH2 0xB38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7A PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB89 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB9A DUP6 DUP3 DUP7 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB9 DUP2 PUSH2 0xBA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE3 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1D JUMPI PUSH2 0xC1C PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2B DUP7 DUP3 DUP8 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC3C DUP7 DUP3 DUP8 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC4D DUP7 DUP3 DUP8 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6D DUP2 PUSH2 0xC57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA4 JUMPI PUSH2 0xCA3 PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB2 DUP5 DUP3 DUP6 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD2 JUMPI PUSH2 0xCD1 PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF1 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD42 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD55 JUMPI PUSH2 0xD54 PUSH2 0xCFB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD64 DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD7F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0xD8C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0xD99 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF6 DUP3 PUSH2 0xB2E JUMP JUMPDEST SWAP2 POP PUSH2 0xE01 DUP4 PUSH2 0xB2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE19 JUMPI PUSH2 0xE18 PUSH2 0xDBC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE CALLER 0xC4 BALANCE CALLCODE SHL 0xCA BLOBBASEFEE 0x24 0xE2 RETURNDATACOPY DUP1 0xE0 0x2E SWAP16 CALLDATASIZE PUSH17 0xBF86DE80B645C51A8ABC0BB1697B4C6473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"116:212:6:-:0;;;218:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;287:32:6::1;293:10;305:13;287:5;;;:32;;:::i;:::-;218:108:::0;116:212;;7721:208:1;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:126::-;6232:7;6272:42;6265:5;6261:54;6250:65;;6195:126;;;:::o;6327:96::-;6364:7;6393:24;6411:5;6393:24;:::i;:::-;6382:35;;6327:96;;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:118::-;7251:24;7269:5;7251:24;:::i;:::-;7246:3;7239:37;7164:118;;:::o;7288:442::-;7437:4;7475:2;7464:9;7460:18;7452:26;;7488:71;7556:1;7545:9;7541:17;7532:6;7488:71;:::i;:::-;7569:72;7637:2;7626:9;7622:18;7613:6;7569:72;:::i;:::-;7651;7719:2;7708:9;7704:18;7695:6;7651:72;:::i;:::-;7288:442;;;;;;:::o;7736:222::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7880:71;7948:1;7937:9;7933:17;7924:6;7880:71;:::i;:::-;7736:222;;;;:::o;116:212:6:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_542":{"entryPoint":1155,"id":542,"parameterSlots":3,"returnSlots":0},"@_approve_602":{"entryPoint":1565,"id":602,"parameterSlots":4,"returnSlots":0},"@_msgSender_767":{"entryPoint":1147,"id":767,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_650":{"entryPoint":1173,"id":650,"parameterSlots":3,"returnSlots":0},"@_transfer_381":{"entryPoint":1321,"id":381,"parameterSlots":3,"returnSlots":0},"@_update_458":{"entryPoint":2036,"id":458,"parameterSlots":3,"returnSlots":0},"@allowance_278":{"entryPoint":1012,"id":278,"parameterSlots":2,"returnSlots":1},"@approve_302":{"entryPoint":658,"id":302,"parameterSlots":2,"returnSlots":1},"@balanceOf_237":{"entryPoint":759,"id":237,"parameterSlots":1,"returnSlots":1},"@decimals_215":{"entryPoint":750,"id":215,"parameterSlots":0,"returnSlots":1},"@name_197":{"entryPoint":512,"id":197,"parameterSlots":0,"returnSlots":1},"@symbol_206":{"entryPoint":831,"id":206,"parameterSlots":0,"returnSlots":1},"@totalSupply_224":{"entryPoint":693,"id":224,"parameterSlots":0,"returnSlots":1},"@transferFrom_334":{"entryPoint":703,"id":334,"parameterSlots":3,"returnSlots":1},"@transfer_261":{"entryPoint":977,"id":261,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3214,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3259,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3076,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2916,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3419,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2992,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2672,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3034,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3172,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3489,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3434,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3007,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2729,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3187,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2585,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2596,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3563,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2800,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2980,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2768,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2862,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3159,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2613,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3370,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3516,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3323,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2763,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2655,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2818,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2872,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7360:7","nodeType":"YulBlock","src":"0:7360:7","statements":[{"body":{"nativeSrc":"66:40:7","nodeType":"YulBlock","src":"66:40:7","statements":[{"nativeSrc":"77:22:7","nodeType":"YulAssignment","src":"77:22:7","value":{"arguments":[{"name":"value","nativeSrc":"93:5:7","nodeType":"YulIdentifier","src":"93:5:7"}],"functionName":{"name":"mload","nativeSrc":"87:5:7","nodeType":"YulIdentifier","src":"87:5:7"},"nativeSrc":"87:12:7","nodeType":"YulFunctionCall","src":"87:12:7"},"variableNames":[{"name":"length","nativeSrc":"77:6:7","nodeType":"YulIdentifier","src":"77:6:7"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:7","nodeType":"YulTypedName","src":"49:5:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:7","nodeType":"YulTypedName","src":"59:6:7","type":""}],"src":"7:99:7"},{"body":{"nativeSrc":"208:73:7","nodeType":"YulBlock","src":"208:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:7","nodeType":"YulIdentifier","src":"225:3:7"},{"name":"length","nativeSrc":"230:6:7","nodeType":"YulIdentifier","src":"230:6:7"}],"functionName":{"name":"mstore","nativeSrc":"218:6:7","nodeType":"YulIdentifier","src":"218:6:7"},"nativeSrc":"218:19:7","nodeType":"YulFunctionCall","src":"218:19:7"},"nativeSrc":"218:19:7","nodeType":"YulExpressionStatement","src":"218:19:7"},{"nativeSrc":"246:29:7","nodeType":"YulAssignment","src":"246:29:7","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:7","nodeType":"YulIdentifier","src":"265:3:7"},{"kind":"number","nativeSrc":"270:4:7","nodeType":"YulLiteral","src":"270:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:7","nodeType":"YulIdentifier","src":"261:3:7"},"nativeSrc":"261:14:7","nodeType":"YulFunctionCall","src":"261:14:7"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:7","nodeType":"YulIdentifier","src":"246:11:7"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:7","nodeType":"YulTypedName","src":"180:3:7","type":""},{"name":"length","nativeSrc":"185:6:7","nodeType":"YulTypedName","src":"185:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:7","nodeType":"YulTypedName","src":"196:11:7","type":""}],"src":"112:169:7"},{"body":{"nativeSrc":"349:184:7","nodeType":"YulBlock","src":"349:184:7","statements":[{"nativeSrc":"359:10:7","nodeType":"YulVariableDeclaration","src":"359:10:7","value":{"kind":"number","nativeSrc":"368:1:7","nodeType":"YulLiteral","src":"368:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:7","nodeType":"YulTypedName","src":"363:1:7","type":""}]},{"body":{"nativeSrc":"428:63:7","nodeType":"YulBlock","src":"428:63:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:7","nodeType":"YulIdentifier","src":"453:3:7"},{"name":"i","nativeSrc":"458:1:7","nodeType":"YulIdentifier","src":"458:1:7"}],"functionName":{"name":"add","nativeSrc":"449:3:7","nodeType":"YulIdentifier","src":"449:3:7"},"nativeSrc":"449:11:7","nodeType":"YulFunctionCall","src":"449:11:7"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:7","nodeType":"YulIdentifier","src":"472:3:7"},{"name":"i","nativeSrc":"477:1:7","nodeType":"YulIdentifier","src":"477:1:7"}],"functionName":{"name":"add","nativeSrc":"468:3:7","nodeType":"YulIdentifier","src":"468:3:7"},"nativeSrc":"468:11:7","nodeType":"YulFunctionCall","src":"468:11:7"}],"functionName":{"name":"mload","nativeSrc":"462:5:7","nodeType":"YulIdentifier","src":"462:5:7"},"nativeSrc":"462:18:7","nodeType":"YulFunctionCall","src":"462:18:7"}],"functionName":{"name":"mstore","nativeSrc":"442:6:7","nodeType":"YulIdentifier","src":"442:6:7"},"nativeSrc":"442:39:7","nodeType":"YulFunctionCall","src":"442:39:7"},"nativeSrc":"442:39:7","nodeType":"YulExpressionStatement","src":"442:39:7"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:7","nodeType":"YulIdentifier","src":"389:1:7"},{"name":"length","nativeSrc":"392:6:7","nodeType":"YulIdentifier","src":"392:6:7"}],"functionName":{"name":"lt","nativeSrc":"386:2:7","nodeType":"YulIdentifier","src":"386:2:7"},"nativeSrc":"386:13:7","nodeType":"YulFunctionCall","src":"386:13:7"},"nativeSrc":"378:113:7","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:7","nodeType":"YulBlock","src":"400:19:7","statements":[{"nativeSrc":"402:15:7","nodeType":"YulAssignment","src":"402:15:7","value":{"arguments":[{"name":"i","nativeSrc":"411:1:7","nodeType":"YulIdentifier","src":"411:1:7"},{"kind":"number","nativeSrc":"414:2:7","nodeType":"YulLiteral","src":"414:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:7","nodeType":"YulIdentifier","src":"407:3:7"},"nativeSrc":"407:10:7","nodeType":"YulFunctionCall","src":"407:10:7"},"variableNames":[{"name":"i","nativeSrc":"402:1:7","nodeType":"YulIdentifier","src":"402:1:7"}]}]},"pre":{"nativeSrc":"382:3:7","nodeType":"YulBlock","src":"382:3:7","statements":[]},"src":"378:113:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:7","nodeType":"YulIdentifier","src":"511:3:7"},{"name":"length","nativeSrc":"516:6:7","nodeType":"YulIdentifier","src":"516:6:7"}],"functionName":{"name":"add","nativeSrc":"507:3:7","nodeType":"YulIdentifier","src":"507:3:7"},"nativeSrc":"507:16:7","nodeType":"YulFunctionCall","src":"507:16:7"},{"kind":"number","nativeSrc":"525:1:7","nodeType":"YulLiteral","src":"525:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:7","nodeType":"YulIdentifier","src":"500:6:7"},"nativeSrc":"500:27:7","nodeType":"YulFunctionCall","src":"500:27:7"},"nativeSrc":"500:27:7","nodeType":"YulExpressionStatement","src":"500:27:7"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:7","nodeType":"YulTypedName","src":"331:3:7","type":""},{"name":"dst","nativeSrc":"336:3:7","nodeType":"YulTypedName","src":"336:3:7","type":""},{"name":"length","nativeSrc":"341:6:7","nodeType":"YulTypedName","src":"341:6:7","type":""}],"src":"287:246:7"},{"body":{"nativeSrc":"587:54:7","nodeType":"YulBlock","src":"587:54:7","statements":[{"nativeSrc":"597:38:7","nodeType":"YulAssignment","src":"597:38:7","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:7","nodeType":"YulIdentifier","src":"615:5:7"},{"kind":"number","nativeSrc":"622:2:7","nodeType":"YulLiteral","src":"622:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:7","nodeType":"YulIdentifier","src":"611:3:7"},"nativeSrc":"611:14:7","nodeType":"YulFunctionCall","src":"611:14:7"},{"arguments":[{"kind":"number","nativeSrc":"631:2:7","nodeType":"YulLiteral","src":"631:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:7","nodeType":"YulIdentifier","src":"627:3:7"},"nativeSrc":"627:7:7","nodeType":"YulFunctionCall","src":"627:7:7"}],"functionName":{"name":"and","nativeSrc":"607:3:7","nodeType":"YulIdentifier","src":"607:3:7"},"nativeSrc":"607:28:7","nodeType":"YulFunctionCall","src":"607:28:7"},"variableNames":[{"name":"result","nativeSrc":"597:6:7","nodeType":"YulIdentifier","src":"597:6:7"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:7","nodeType":"YulTypedName","src":"570:5:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:7","nodeType":"YulTypedName","src":"580:6:7","type":""}],"src":"539:102:7"},{"body":{"nativeSrc":"739:285:7","nodeType":"YulBlock","src":"739:285:7","statements":[{"nativeSrc":"749:53:7","nodeType":"YulVariableDeclaration","src":"749:53:7","value":{"arguments":[{"name":"value","nativeSrc":"796:5:7","nodeType":"YulIdentifier","src":"796:5:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:7","nodeType":"YulIdentifier","src":"763:32:7"},"nativeSrc":"763:39:7","nodeType":"YulFunctionCall","src":"763:39:7"},"variables":[{"name":"length","nativeSrc":"753:6:7","nodeType":"YulTypedName","src":"753:6:7","type":""}]},{"nativeSrc":"811:78:7","nodeType":"YulAssignment","src":"811:78:7","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:7","nodeType":"YulIdentifier","src":"877:3:7"},{"name":"length","nativeSrc":"882:6:7","nodeType":"YulIdentifier","src":"882:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:7","nodeType":"YulIdentifier","src":"818:58:7"},"nativeSrc":"818:71:7","nodeType":"YulFunctionCall","src":"818:71:7"},"variableNames":[{"name":"pos","nativeSrc":"811:3:7","nodeType":"YulIdentifier","src":"811:3:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:7","nodeType":"YulIdentifier","src":"937:5:7"},{"kind":"number","nativeSrc":"944:4:7","nodeType":"YulLiteral","src":"944:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:7","nodeType":"YulIdentifier","src":"933:3:7"},"nativeSrc":"933:16:7","nodeType":"YulFunctionCall","src":"933:16:7"},{"name":"pos","nativeSrc":"951:3:7","nodeType":"YulIdentifier","src":"951:3:7"},{"name":"length","nativeSrc":"956:6:7","nodeType":"YulIdentifier","src":"956:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:7","nodeType":"YulIdentifier","src":"898:34:7"},"nativeSrc":"898:65:7","nodeType":"YulFunctionCall","src":"898:65:7"},"nativeSrc":"898:65:7","nodeType":"YulExpressionStatement","src":"898:65:7"},{"nativeSrc":"972:46:7","nodeType":"YulAssignment","src":"972:46:7","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:7","nodeType":"YulIdentifier","src":"983:3:7"},{"arguments":[{"name":"length","nativeSrc":"1010:6:7","nodeType":"YulIdentifier","src":"1010:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:7","nodeType":"YulIdentifier","src":"988:21:7"},"nativeSrc":"988:29:7","nodeType":"YulFunctionCall","src":"988:29:7"}],"functionName":{"name":"add","nativeSrc":"979:3:7","nodeType":"YulIdentifier","src":"979:3:7"},"nativeSrc":"979:39:7","nodeType":"YulFunctionCall","src":"979:39:7"},"variableNames":[{"name":"end","nativeSrc":"972:3:7","nodeType":"YulIdentifier","src":"972:3:7"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:7","nodeType":"YulTypedName","src":"720:5:7","type":""},{"name":"pos","nativeSrc":"727:3:7","nodeType":"YulTypedName","src":"727:3:7","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:7","nodeType":"YulTypedName","src":"735:3:7","type":""}],"src":"647:377:7"},{"body":{"nativeSrc":"1148:195:7","nodeType":"YulBlock","src":"1148:195:7","statements":[{"nativeSrc":"1158:26:7","nodeType":"YulAssignment","src":"1158:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:7","nodeType":"YulIdentifier","src":"1170:9:7"},{"kind":"number","nativeSrc":"1181:2:7","nodeType":"YulLiteral","src":"1181:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:7","nodeType":"YulIdentifier","src":"1166:3:7"},"nativeSrc":"1166:18:7","nodeType":"YulFunctionCall","src":"1166:18:7"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:7","nodeType":"YulIdentifier","src":"1158:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:7","nodeType":"YulIdentifier","src":"1205:9:7"},{"kind":"number","nativeSrc":"1216:1:7","nodeType":"YulLiteral","src":"1216:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:7","nodeType":"YulIdentifier","src":"1201:3:7"},"nativeSrc":"1201:17:7","nodeType":"YulFunctionCall","src":"1201:17:7"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:7","nodeType":"YulIdentifier","src":"1224:4:7"},{"name":"headStart","nativeSrc":"1230:9:7","nodeType":"YulIdentifier","src":"1230:9:7"}],"functionName":{"name":"sub","nativeSrc":"1220:3:7","nodeType":"YulIdentifier","src":"1220:3:7"},"nativeSrc":"1220:20:7","nodeType":"YulFunctionCall","src":"1220:20:7"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:7","nodeType":"YulIdentifier","src":"1194:6:7"},"nativeSrc":"1194:47:7","nodeType":"YulFunctionCall","src":"1194:47:7"},"nativeSrc":"1194:47:7","nodeType":"YulExpressionStatement","src":"1194:47:7"},{"nativeSrc":"1250:86:7","nodeType":"YulAssignment","src":"1250:86:7","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:7","nodeType":"YulIdentifier","src":"1322:6:7"},{"name":"tail","nativeSrc":"1331:4:7","nodeType":"YulIdentifier","src":"1331:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:7","nodeType":"YulIdentifier","src":"1258:63:7"},"nativeSrc":"1258:78:7","nodeType":"YulFunctionCall","src":"1258:78:7"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:7","nodeType":"YulIdentifier","src":"1250:4:7"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:7","nodeType":"YulTypedName","src":"1120:9:7","type":""},{"name":"value0","nativeSrc":"1132:6:7","nodeType":"YulTypedName","src":"1132:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:7","nodeType":"YulTypedName","src":"1143:4:7","type":""}],"src":"1030:313:7"},{"body":{"nativeSrc":"1389:35:7","nodeType":"YulBlock","src":"1389:35:7","statements":[{"nativeSrc":"1399:19:7","nodeType":"YulAssignment","src":"1399:19:7","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:7","nodeType":"YulLiteral","src":"1415:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:7","nodeType":"YulIdentifier","src":"1409:5:7"},"nativeSrc":"1409:9:7","nodeType":"YulFunctionCall","src":"1409:9:7"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:7","nodeType":"YulIdentifier","src":"1399:6:7"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:7","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:7","nodeType":"YulTypedName","src":"1382:6:7","type":""}],"src":"1349:75:7"},{"body":{"nativeSrc":"1519:28:7","nodeType":"YulBlock","src":"1519:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:7","nodeType":"YulLiteral","src":"1536:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:7","nodeType":"YulLiteral","src":"1539:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:7","nodeType":"YulIdentifier","src":"1529:6:7"},"nativeSrc":"1529:12:7","nodeType":"YulFunctionCall","src":"1529:12:7"},"nativeSrc":"1529:12:7","nodeType":"YulExpressionStatement","src":"1529:12:7"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:7","nodeType":"YulFunctionDefinition","src":"1430:117:7"},{"body":{"nativeSrc":"1642:28:7","nodeType":"YulBlock","src":"1642:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:7","nodeType":"YulLiteral","src":"1659:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:7","nodeType":"YulLiteral","src":"1662:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:7","nodeType":"YulIdentifier","src":"1652:6:7"},"nativeSrc":"1652:12:7","nodeType":"YulFunctionCall","src":"1652:12:7"},"nativeSrc":"1652:12:7","nodeType":"YulExpressionStatement","src":"1652:12:7"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:7","nodeType":"YulFunctionDefinition","src":"1553:117:7"},{"body":{"nativeSrc":"1721:81:7","nodeType":"YulBlock","src":"1721:81:7","statements":[{"nativeSrc":"1731:65:7","nodeType":"YulAssignment","src":"1731:65:7","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:7","nodeType":"YulIdentifier","src":"1746:5:7"},{"kind":"number","nativeSrc":"1753:42:7","nodeType":"YulLiteral","src":"1753:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:7","nodeType":"YulIdentifier","src":"1742:3:7"},"nativeSrc":"1742:54:7","nodeType":"YulFunctionCall","src":"1742:54:7"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:7","nodeType":"YulIdentifier","src":"1731:7:7"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:7","nodeType":"YulTypedName","src":"1703:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:7","nodeType":"YulTypedName","src":"1713:7:7","type":""}],"src":"1676:126:7"},{"body":{"nativeSrc":"1853:51:7","nodeType":"YulBlock","src":"1853:51:7","statements":[{"nativeSrc":"1863:35:7","nodeType":"YulAssignment","src":"1863:35:7","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:7","nodeType":"YulIdentifier","src":"1892:5:7"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:7","nodeType":"YulIdentifier","src":"1874:17:7"},"nativeSrc":"1874:24:7","nodeType":"YulFunctionCall","src":"1874:24:7"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:7","nodeType":"YulIdentifier","src":"1863:7:7"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:7","nodeType":"YulTypedName","src":"1835:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:7","nodeType":"YulTypedName","src":"1845:7:7","type":""}],"src":"1808:96:7"},{"body":{"nativeSrc":"1953:79:7","nodeType":"YulBlock","src":"1953:79:7","statements":[{"body":{"nativeSrc":"2010:16:7","nodeType":"YulBlock","src":"2010:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:7","nodeType":"YulLiteral","src":"2019:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:7","nodeType":"YulLiteral","src":"2022:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:7","nodeType":"YulIdentifier","src":"2012:6:7"},"nativeSrc":"2012:12:7","nodeType":"YulFunctionCall","src":"2012:12:7"},"nativeSrc":"2012:12:7","nodeType":"YulExpressionStatement","src":"2012:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:7","nodeType":"YulIdentifier","src":"1976:5:7"},{"arguments":[{"name":"value","nativeSrc":"2001:5:7","nodeType":"YulIdentifier","src":"2001:5:7"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:7","nodeType":"YulIdentifier","src":"1983:17:7"},"nativeSrc":"1983:24:7","nodeType":"YulFunctionCall","src":"1983:24:7"}],"functionName":{"name":"eq","nativeSrc":"1973:2:7","nodeType":"YulIdentifier","src":"1973:2:7"},"nativeSrc":"1973:35:7","nodeType":"YulFunctionCall","src":"1973:35:7"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:7","nodeType":"YulIdentifier","src":"1966:6:7"},"nativeSrc":"1966:43:7","nodeType":"YulFunctionCall","src":"1966:43:7"},"nativeSrc":"1963:63:7","nodeType":"YulIf","src":"1963:63:7"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:7","nodeType":"YulTypedName","src":"1946:5:7","type":""}],"src":"1910:122:7"},{"body":{"nativeSrc":"2090:87:7","nodeType":"YulBlock","src":"2090:87:7","statements":[{"nativeSrc":"2100:29:7","nodeType":"YulAssignment","src":"2100:29:7","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:7","nodeType":"YulIdentifier","src":"2122:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:7","nodeType":"YulIdentifier","src":"2109:12:7"},"nativeSrc":"2109:20:7","nodeType":"YulFunctionCall","src":"2109:20:7"},"variableNames":[{"name":"value","nativeSrc":"2100:5:7","nodeType":"YulIdentifier","src":"2100:5:7"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:7","nodeType":"YulIdentifier","src":"2165:5:7"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:7","nodeType":"YulIdentifier","src":"2138:26:7"},"nativeSrc":"2138:33:7","nodeType":"YulFunctionCall","src":"2138:33:7"},"nativeSrc":"2138:33:7","nodeType":"YulExpressionStatement","src":"2138:33:7"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:7","nodeType":"YulTypedName","src":"2068:6:7","type":""},{"name":"end","nativeSrc":"2076:3:7","nodeType":"YulTypedName","src":"2076:3:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:7","nodeType":"YulTypedName","src":"2084:5:7","type":""}],"src":"2038:139:7"},{"body":{"nativeSrc":"2228:32:7","nodeType":"YulBlock","src":"2228:32:7","statements":[{"nativeSrc":"2238:16:7","nodeType":"YulAssignment","src":"2238:16:7","value":{"name":"value","nativeSrc":"2249:5:7","nodeType":"YulIdentifier","src":"2249:5:7"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:7","nodeType":"YulIdentifier","src":"2238:7:7"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:7","nodeType":"YulTypedName","src":"2210:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:7","nodeType":"YulTypedName","src":"2220:7:7","type":""}],"src":"2183:77:7"},{"body":{"nativeSrc":"2309:79:7","nodeType":"YulBlock","src":"2309:79:7","statements":[{"body":{"nativeSrc":"2366:16:7","nodeType":"YulBlock","src":"2366:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:7","nodeType":"YulLiteral","src":"2375:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:7","nodeType":"YulLiteral","src":"2378:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:7","nodeType":"YulIdentifier","src":"2368:6:7"},"nativeSrc":"2368:12:7","nodeType":"YulFunctionCall","src":"2368:12:7"},"nativeSrc":"2368:12:7","nodeType":"YulExpressionStatement","src":"2368:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:7","nodeType":"YulIdentifier","src":"2332:5:7"},{"arguments":[{"name":"value","nativeSrc":"2357:5:7","nodeType":"YulIdentifier","src":"2357:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:7","nodeType":"YulIdentifier","src":"2339:17:7"},"nativeSrc":"2339:24:7","nodeType":"YulFunctionCall","src":"2339:24:7"}],"functionName":{"name":"eq","nativeSrc":"2329:2:7","nodeType":"YulIdentifier","src":"2329:2:7"},"nativeSrc":"2329:35:7","nodeType":"YulFunctionCall","src":"2329:35:7"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:7","nodeType":"YulIdentifier","src":"2322:6:7"},"nativeSrc":"2322:43:7","nodeType":"YulFunctionCall","src":"2322:43:7"},"nativeSrc":"2319:63:7","nodeType":"YulIf","src":"2319:63:7"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:7","nodeType":"YulTypedName","src":"2302:5:7","type":""}],"src":"2266:122:7"},{"body":{"nativeSrc":"2446:87:7","nodeType":"YulBlock","src":"2446:87:7","statements":[{"nativeSrc":"2456:29:7","nodeType":"YulAssignment","src":"2456:29:7","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:7","nodeType":"YulIdentifier","src":"2478:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:7","nodeType":"YulIdentifier","src":"2465:12:7"},"nativeSrc":"2465:20:7","nodeType":"YulFunctionCall","src":"2465:20:7"},"variableNames":[{"name":"value","nativeSrc":"2456:5:7","nodeType":"YulIdentifier","src":"2456:5:7"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:7","nodeType":"YulIdentifier","src":"2521:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:7","nodeType":"YulIdentifier","src":"2494:26:7"},"nativeSrc":"2494:33:7","nodeType":"YulFunctionCall","src":"2494:33:7"},"nativeSrc":"2494:33:7","nodeType":"YulExpressionStatement","src":"2494:33:7"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:7","nodeType":"YulTypedName","src":"2424:6:7","type":""},{"name":"end","nativeSrc":"2432:3:7","nodeType":"YulTypedName","src":"2432:3:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:7","nodeType":"YulTypedName","src":"2440:5:7","type":""}],"src":"2394:139:7"},{"body":{"nativeSrc":"2622:391:7","nodeType":"YulBlock","src":"2622:391:7","statements":[{"body":{"nativeSrc":"2668:83:7","nodeType":"YulBlock","src":"2668:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:7","nodeType":"YulIdentifier","src":"2670:77:7"},"nativeSrc":"2670:79:7","nodeType":"YulFunctionCall","src":"2670:79:7"},"nativeSrc":"2670:79:7","nodeType":"YulExpressionStatement","src":"2670:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:7","nodeType":"YulIdentifier","src":"2643:7:7"},{"name":"headStart","nativeSrc":"2652:9:7","nodeType":"YulIdentifier","src":"2652:9:7"}],"functionName":{"name":"sub","nativeSrc":"2639:3:7","nodeType":"YulIdentifier","src":"2639:3:7"},"nativeSrc":"2639:23:7","nodeType":"YulFunctionCall","src":"2639:23:7"},{"kind":"number","nativeSrc":"2664:2:7","nodeType":"YulLiteral","src":"2664:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:7","nodeType":"YulIdentifier","src":"2635:3:7"},"nativeSrc":"2635:32:7","nodeType":"YulFunctionCall","src":"2635:32:7"},"nativeSrc":"2632:119:7","nodeType":"YulIf","src":"2632:119:7"},{"nativeSrc":"2761:117:7","nodeType":"YulBlock","src":"2761:117:7","statements":[{"nativeSrc":"2776:15:7","nodeType":"YulVariableDeclaration","src":"2776:15:7","value":{"kind":"number","nativeSrc":"2790:1:7","nodeType":"YulLiteral","src":"2790:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:7","nodeType":"YulTypedName","src":"2780:6:7","type":""}]},{"nativeSrc":"2805:63:7","nodeType":"YulAssignment","src":"2805:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:7","nodeType":"YulIdentifier","src":"2840:9:7"},{"name":"offset","nativeSrc":"2851:6:7","nodeType":"YulIdentifier","src":"2851:6:7"}],"functionName":{"name":"add","nativeSrc":"2836:3:7","nodeType":"YulIdentifier","src":"2836:3:7"},"nativeSrc":"2836:22:7","nodeType":"YulFunctionCall","src":"2836:22:7"},{"name":"dataEnd","nativeSrc":"2860:7:7","nodeType":"YulIdentifier","src":"2860:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:7","nodeType":"YulIdentifier","src":"2815:20:7"},"nativeSrc":"2815:53:7","nodeType":"YulFunctionCall","src":"2815:53:7"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:7","nodeType":"YulIdentifier","src":"2805:6:7"}]}]},{"nativeSrc":"2888:118:7","nodeType":"YulBlock","src":"2888:118:7","statements":[{"nativeSrc":"2903:16:7","nodeType":"YulVariableDeclaration","src":"2903:16:7","value":{"kind":"number","nativeSrc":"2917:2:7","nodeType":"YulLiteral","src":"2917:2:7","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:7","nodeType":"YulTypedName","src":"2907:6:7","type":""}]},{"nativeSrc":"2933:63:7","nodeType":"YulAssignment","src":"2933:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:7","nodeType":"YulIdentifier","src":"2968:9:7"},{"name":"offset","nativeSrc":"2979:6:7","nodeType":"YulIdentifier","src":"2979:6:7"}],"functionName":{"name":"add","nativeSrc":"2964:3:7","nodeType":"YulIdentifier","src":"2964:3:7"},"nativeSrc":"2964:22:7","nodeType":"YulFunctionCall","src":"2964:22:7"},{"name":"dataEnd","nativeSrc":"2988:7:7","nodeType":"YulIdentifier","src":"2988:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:7","nodeType":"YulIdentifier","src":"2943:20:7"},"nativeSrc":"2943:53:7","nodeType":"YulFunctionCall","src":"2943:53:7"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:7","nodeType":"YulIdentifier","src":"2933:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:7","nodeType":"YulTypedName","src":"2584:9:7","type":""},{"name":"dataEnd","nativeSrc":"2595:7:7","nodeType":"YulTypedName","src":"2595:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:7","nodeType":"YulTypedName","src":"2607:6:7","type":""},{"name":"value1","nativeSrc":"2615:6:7","nodeType":"YulTypedName","src":"2615:6:7","type":""}],"src":"2539:474:7"},{"body":{"nativeSrc":"3061:48:7","nodeType":"YulBlock","src":"3061:48:7","statements":[{"nativeSrc":"3071:32:7","nodeType":"YulAssignment","src":"3071:32:7","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:7","nodeType":"YulIdentifier","src":"3096:5:7"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:7","nodeType":"YulIdentifier","src":"3089:6:7"},"nativeSrc":"3089:13:7","nodeType":"YulFunctionCall","src":"3089:13:7"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:7","nodeType":"YulIdentifier","src":"3082:6:7"},"nativeSrc":"3082:21:7","nodeType":"YulFunctionCall","src":"3082:21:7"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:7","nodeType":"YulIdentifier","src":"3071:7:7"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:7","nodeType":"YulTypedName","src":"3043:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:7","nodeType":"YulTypedName","src":"3053:7:7","type":""}],"src":"3019:90:7"},{"body":{"nativeSrc":"3174:50:7","nodeType":"YulBlock","src":"3174:50:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:7","nodeType":"YulIdentifier","src":"3191:3:7"},{"arguments":[{"name":"value","nativeSrc":"3211:5:7","nodeType":"YulIdentifier","src":"3211:5:7"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:7","nodeType":"YulIdentifier","src":"3196:14:7"},"nativeSrc":"3196:21:7","nodeType":"YulFunctionCall","src":"3196:21:7"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:7","nodeType":"YulIdentifier","src":"3184:6:7"},"nativeSrc":"3184:34:7","nodeType":"YulFunctionCall","src":"3184:34:7"},"nativeSrc":"3184:34:7","nodeType":"YulExpressionStatement","src":"3184:34:7"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:7","nodeType":"YulTypedName","src":"3162:5:7","type":""},{"name":"pos","nativeSrc":"3169:3:7","nodeType":"YulTypedName","src":"3169:3:7","type":""}],"src":"3115:109:7"},{"body":{"nativeSrc":"3322:118:7","nodeType":"YulBlock","src":"3322:118:7","statements":[{"nativeSrc":"3332:26:7","nodeType":"YulAssignment","src":"3332:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:7","nodeType":"YulIdentifier","src":"3344:9:7"},{"kind":"number","nativeSrc":"3355:2:7","nodeType":"YulLiteral","src":"3355:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:7","nodeType":"YulIdentifier","src":"3340:3:7"},"nativeSrc":"3340:18:7","nodeType":"YulFunctionCall","src":"3340:18:7"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:7","nodeType":"YulIdentifier","src":"3332:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:7","nodeType":"YulIdentifier","src":"3406:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:7","nodeType":"YulIdentifier","src":"3419:9:7"},{"kind":"number","nativeSrc":"3430:1:7","nodeType":"YulLiteral","src":"3430:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:7","nodeType":"YulIdentifier","src":"3415:3:7"},"nativeSrc":"3415:17:7","nodeType":"YulFunctionCall","src":"3415:17:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:7","nodeType":"YulIdentifier","src":"3368:37:7"},"nativeSrc":"3368:65:7","nodeType":"YulFunctionCall","src":"3368:65:7"},"nativeSrc":"3368:65:7","nodeType":"YulExpressionStatement","src":"3368:65:7"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:7","nodeType":"YulTypedName","src":"3294:9:7","type":""},{"name":"value0","nativeSrc":"3306:6:7","nodeType":"YulTypedName","src":"3306:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:7","nodeType":"YulTypedName","src":"3317:4:7","type":""}],"src":"3230:210:7"},{"body":{"nativeSrc":"3511:53:7","nodeType":"YulBlock","src":"3511:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3528:3:7","nodeType":"YulIdentifier","src":"3528:3:7"},{"arguments":[{"name":"value","nativeSrc":"3551:5:7","nodeType":"YulIdentifier","src":"3551:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3533:17:7","nodeType":"YulIdentifier","src":"3533:17:7"},"nativeSrc":"3533:24:7","nodeType":"YulFunctionCall","src":"3533:24:7"}],"functionName":{"name":"mstore","nativeSrc":"3521:6:7","nodeType":"YulIdentifier","src":"3521:6:7"},"nativeSrc":"3521:37:7","nodeType":"YulFunctionCall","src":"3521:37:7"},"nativeSrc":"3521:37:7","nodeType":"YulExpressionStatement","src":"3521:37:7"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3446:118:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3499:5:7","nodeType":"YulTypedName","src":"3499:5:7","type":""},{"name":"pos","nativeSrc":"3506:3:7","nodeType":"YulTypedName","src":"3506:3:7","type":""}],"src":"3446:118:7"},{"body":{"nativeSrc":"3668:124:7","nodeType":"YulBlock","src":"3668:124:7","statements":[{"nativeSrc":"3678:26:7","nodeType":"YulAssignment","src":"3678:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"3690:9:7","nodeType":"YulIdentifier","src":"3690:9:7"},{"kind":"number","nativeSrc":"3701:2:7","nodeType":"YulLiteral","src":"3701:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3686:3:7","nodeType":"YulIdentifier","src":"3686:3:7"},"nativeSrc":"3686:18:7","nodeType":"YulFunctionCall","src":"3686:18:7"},"variableNames":[{"name":"tail","nativeSrc":"3678:4:7","nodeType":"YulIdentifier","src":"3678:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3758:6:7","nodeType":"YulIdentifier","src":"3758:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"3771:9:7","nodeType":"YulIdentifier","src":"3771:9:7"},{"kind":"number","nativeSrc":"3782:1:7","nodeType":"YulLiteral","src":"3782:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3767:3:7","nodeType":"YulIdentifier","src":"3767:3:7"},"nativeSrc":"3767:17:7","nodeType":"YulFunctionCall","src":"3767:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3714:43:7","nodeType":"YulIdentifier","src":"3714:43:7"},"nativeSrc":"3714:71:7","nodeType":"YulFunctionCall","src":"3714:71:7"},"nativeSrc":"3714:71:7","nodeType":"YulExpressionStatement","src":"3714:71:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3570:222:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3640:9:7","nodeType":"YulTypedName","src":"3640:9:7","type":""},{"name":"value0","nativeSrc":"3652:6:7","nodeType":"YulTypedName","src":"3652:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3663:4:7","nodeType":"YulTypedName","src":"3663:4:7","type":""}],"src":"3570:222:7"},{"body":{"nativeSrc":"3898:519:7","nodeType":"YulBlock","src":"3898:519:7","statements":[{"body":{"nativeSrc":"3944:83:7","nodeType":"YulBlock","src":"3944:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3946:77:7","nodeType":"YulIdentifier","src":"3946:77:7"},"nativeSrc":"3946:79:7","nodeType":"YulFunctionCall","src":"3946:79:7"},"nativeSrc":"3946:79:7","nodeType":"YulExpressionStatement","src":"3946:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3919:7:7","nodeType":"YulIdentifier","src":"3919:7:7"},{"name":"headStart","nativeSrc":"3928:9:7","nodeType":"YulIdentifier","src":"3928:9:7"}],"functionName":{"name":"sub","nativeSrc":"3915:3:7","nodeType":"YulIdentifier","src":"3915:3:7"},"nativeSrc":"3915:23:7","nodeType":"YulFunctionCall","src":"3915:23:7"},{"kind":"number","nativeSrc":"3940:2:7","nodeType":"YulLiteral","src":"3940:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3911:3:7","nodeType":"YulIdentifier","src":"3911:3:7"},"nativeSrc":"3911:32:7","nodeType":"YulFunctionCall","src":"3911:32:7"},"nativeSrc":"3908:119:7","nodeType":"YulIf","src":"3908:119:7"},{"nativeSrc":"4037:117:7","nodeType":"YulBlock","src":"4037:117:7","statements":[{"nativeSrc":"4052:15:7","nodeType":"YulVariableDeclaration","src":"4052:15:7","value":{"kind":"number","nativeSrc":"4066:1:7","nodeType":"YulLiteral","src":"4066:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4056:6:7","nodeType":"YulTypedName","src":"4056:6:7","type":""}]},{"nativeSrc":"4081:63:7","nodeType":"YulAssignment","src":"4081:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:7","nodeType":"YulIdentifier","src":"4116:9:7"},{"name":"offset","nativeSrc":"4127:6:7","nodeType":"YulIdentifier","src":"4127:6:7"}],"functionName":{"name":"add","nativeSrc":"4112:3:7","nodeType":"YulIdentifier","src":"4112:3:7"},"nativeSrc":"4112:22:7","nodeType":"YulFunctionCall","src":"4112:22:7"},{"name":"dataEnd","nativeSrc":"4136:7:7","nodeType":"YulIdentifier","src":"4136:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4091:20:7","nodeType":"YulIdentifier","src":"4091:20:7"},"nativeSrc":"4091:53:7","nodeType":"YulFunctionCall","src":"4091:53:7"},"variableNames":[{"name":"value0","nativeSrc":"4081:6:7","nodeType":"YulIdentifier","src":"4081:6:7"}]}]},{"nativeSrc":"4164:118:7","nodeType":"YulBlock","src":"4164:118:7","statements":[{"nativeSrc":"4179:16:7","nodeType":"YulVariableDeclaration","src":"4179:16:7","value":{"kind":"number","nativeSrc":"4193:2:7","nodeType":"YulLiteral","src":"4193:2:7","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4183:6:7","nodeType":"YulTypedName","src":"4183:6:7","type":""}]},{"nativeSrc":"4209:63:7","nodeType":"YulAssignment","src":"4209:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4244:9:7","nodeType":"YulIdentifier","src":"4244:9:7"},{"name":"offset","nativeSrc":"4255:6:7","nodeType":"YulIdentifier","src":"4255:6:7"}],"functionName":{"name":"add","nativeSrc":"4240:3:7","nodeType":"YulIdentifier","src":"4240:3:7"},"nativeSrc":"4240:22:7","nodeType":"YulFunctionCall","src":"4240:22:7"},{"name":"dataEnd","nativeSrc":"4264:7:7","nodeType":"YulIdentifier","src":"4264:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4219:20:7","nodeType":"YulIdentifier","src":"4219:20:7"},"nativeSrc":"4219:53:7","nodeType":"YulFunctionCall","src":"4219:53:7"},"variableNames":[{"name":"value1","nativeSrc":"4209:6:7","nodeType":"YulIdentifier","src":"4209:6:7"}]}]},{"nativeSrc":"4292:118:7","nodeType":"YulBlock","src":"4292:118:7","statements":[{"nativeSrc":"4307:16:7","nodeType":"YulVariableDeclaration","src":"4307:16:7","value":{"kind":"number","nativeSrc":"4321:2:7","nodeType":"YulLiteral","src":"4321:2:7","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4311:6:7","nodeType":"YulTypedName","src":"4311:6:7","type":""}]},{"nativeSrc":"4337:63:7","nodeType":"YulAssignment","src":"4337:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:7","nodeType":"YulIdentifier","src":"4372:9:7"},{"name":"offset","nativeSrc":"4383:6:7","nodeType":"YulIdentifier","src":"4383:6:7"}],"functionName":{"name":"add","nativeSrc":"4368:3:7","nodeType":"YulIdentifier","src":"4368:3:7"},"nativeSrc":"4368:22:7","nodeType":"YulFunctionCall","src":"4368:22:7"},{"name":"dataEnd","nativeSrc":"4392:7:7","nodeType":"YulIdentifier","src":"4392:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4347:20:7","nodeType":"YulIdentifier","src":"4347:20:7"},"nativeSrc":"4347:53:7","nodeType":"YulFunctionCall","src":"4347:53:7"},"variableNames":[{"name":"value2","nativeSrc":"4337:6:7","nodeType":"YulIdentifier","src":"4337:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3798:619:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3852:9:7","nodeType":"YulTypedName","src":"3852:9:7","type":""},{"name":"dataEnd","nativeSrc":"3863:7:7","nodeType":"YulTypedName","src":"3863:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3875:6:7","nodeType":"YulTypedName","src":"3875:6:7","type":""},{"name":"value1","nativeSrc":"3883:6:7","nodeType":"YulTypedName","src":"3883:6:7","type":""},{"name":"value2","nativeSrc":"3891:6:7","nodeType":"YulTypedName","src":"3891:6:7","type":""}],"src":"3798:619:7"},{"body":{"nativeSrc":"4466:43:7","nodeType":"YulBlock","src":"4466:43:7","statements":[{"nativeSrc":"4476:27:7","nodeType":"YulAssignment","src":"4476:27:7","value":{"arguments":[{"name":"value","nativeSrc":"4491:5:7","nodeType":"YulIdentifier","src":"4491:5:7"},{"kind":"number","nativeSrc":"4498:4:7","nodeType":"YulLiteral","src":"4498:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4487:3:7","nodeType":"YulIdentifier","src":"4487:3:7"},"nativeSrc":"4487:16:7","nodeType":"YulFunctionCall","src":"4487:16:7"},"variableNames":[{"name":"cleaned","nativeSrc":"4476:7:7","nodeType":"YulIdentifier","src":"4476:7:7"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4423:86:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4448:5:7","nodeType":"YulTypedName","src":"4448:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4458:7:7","nodeType":"YulTypedName","src":"4458:7:7","type":""}],"src":"4423:86:7"},{"body":{"nativeSrc":"4576:51:7","nodeType":"YulBlock","src":"4576:51:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4593:3:7","nodeType":"YulIdentifier","src":"4593:3:7"},{"arguments":[{"name":"value","nativeSrc":"4614:5:7","nodeType":"YulIdentifier","src":"4614:5:7"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4598:15:7","nodeType":"YulIdentifier","src":"4598:15:7"},"nativeSrc":"4598:22:7","nodeType":"YulFunctionCall","src":"4598:22:7"}],"functionName":{"name":"mstore","nativeSrc":"4586:6:7","nodeType":"YulIdentifier","src":"4586:6:7"},"nativeSrc":"4586:35:7","nodeType":"YulFunctionCall","src":"4586:35:7"},"nativeSrc":"4586:35:7","nodeType":"YulExpressionStatement","src":"4586:35:7"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4515:112:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4564:5:7","nodeType":"YulTypedName","src":"4564:5:7","type":""},{"name":"pos","nativeSrc":"4571:3:7","nodeType":"YulTypedName","src":"4571:3:7","type":""}],"src":"4515:112:7"},{"body":{"nativeSrc":"4727:120:7","nodeType":"YulBlock","src":"4727:120:7","statements":[{"nativeSrc":"4737:26:7","nodeType":"YulAssignment","src":"4737:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"4749:9:7","nodeType":"YulIdentifier","src":"4749:9:7"},{"kind":"number","nativeSrc":"4760:2:7","nodeType":"YulLiteral","src":"4760:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4745:3:7","nodeType":"YulIdentifier","src":"4745:3:7"},"nativeSrc":"4745:18:7","nodeType":"YulFunctionCall","src":"4745:18:7"},"variableNames":[{"name":"tail","nativeSrc":"4737:4:7","nodeType":"YulIdentifier","src":"4737:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4813:6:7","nodeType":"YulIdentifier","src":"4813:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"4826:9:7","nodeType":"YulIdentifier","src":"4826:9:7"},{"kind":"number","nativeSrc":"4837:1:7","nodeType":"YulLiteral","src":"4837:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4822:3:7","nodeType":"YulIdentifier","src":"4822:3:7"},"nativeSrc":"4822:17:7","nodeType":"YulFunctionCall","src":"4822:17:7"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4773:39:7","nodeType":"YulIdentifier","src":"4773:39:7"},"nativeSrc":"4773:67:7","nodeType":"YulFunctionCall","src":"4773:67:7"},"nativeSrc":"4773:67:7","nodeType":"YulExpressionStatement","src":"4773:67:7"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4633:214:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:7","nodeType":"YulTypedName","src":"4699:9:7","type":""},{"name":"value0","nativeSrc":"4711:6:7","nodeType":"YulTypedName","src":"4711:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4722:4:7","nodeType":"YulTypedName","src":"4722:4:7","type":""}],"src":"4633:214:7"},{"body":{"nativeSrc":"4919:263:7","nodeType":"YulBlock","src":"4919:263:7","statements":[{"body":{"nativeSrc":"4965:83:7","nodeType":"YulBlock","src":"4965:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4967:77:7","nodeType":"YulIdentifier","src":"4967:77:7"},"nativeSrc":"4967:79:7","nodeType":"YulFunctionCall","src":"4967:79:7"},"nativeSrc":"4967:79:7","nodeType":"YulExpressionStatement","src":"4967:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4940:7:7","nodeType":"YulIdentifier","src":"4940:7:7"},{"name":"headStart","nativeSrc":"4949:9:7","nodeType":"YulIdentifier","src":"4949:9:7"}],"functionName":{"name":"sub","nativeSrc":"4936:3:7","nodeType":"YulIdentifier","src":"4936:3:7"},"nativeSrc":"4936:23:7","nodeType":"YulFunctionCall","src":"4936:23:7"},{"kind":"number","nativeSrc":"4961:2:7","nodeType":"YulLiteral","src":"4961:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4932:3:7","nodeType":"YulIdentifier","src":"4932:3:7"},"nativeSrc":"4932:32:7","nodeType":"YulFunctionCall","src":"4932:32:7"},"nativeSrc":"4929:119:7","nodeType":"YulIf","src":"4929:119:7"},{"nativeSrc":"5058:117:7","nodeType":"YulBlock","src":"5058:117:7","statements":[{"nativeSrc":"5073:15:7","nodeType":"YulVariableDeclaration","src":"5073:15:7","value":{"kind":"number","nativeSrc":"5087:1:7","nodeType":"YulLiteral","src":"5087:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5077:6:7","nodeType":"YulTypedName","src":"5077:6:7","type":""}]},{"nativeSrc":"5102:63:7","nodeType":"YulAssignment","src":"5102:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5137:9:7","nodeType":"YulIdentifier","src":"5137:9:7"},{"name":"offset","nativeSrc":"5148:6:7","nodeType":"YulIdentifier","src":"5148:6:7"}],"functionName":{"name":"add","nativeSrc":"5133:3:7","nodeType":"YulIdentifier","src":"5133:3:7"},"nativeSrc":"5133:22:7","nodeType":"YulFunctionCall","src":"5133:22:7"},{"name":"dataEnd","nativeSrc":"5157:7:7","nodeType":"YulIdentifier","src":"5157:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5112:20:7","nodeType":"YulIdentifier","src":"5112:20:7"},"nativeSrc":"5112:53:7","nodeType":"YulFunctionCall","src":"5112:53:7"},"variableNames":[{"name":"value0","nativeSrc":"5102:6:7","nodeType":"YulIdentifier","src":"5102:6:7"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4853:329:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4889:9:7","nodeType":"YulTypedName","src":"4889:9:7","type":""},{"name":"dataEnd","nativeSrc":"4900:7:7","nodeType":"YulTypedName","src":"4900:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4912:6:7","nodeType":"YulTypedName","src":"4912:6:7","type":""}],"src":"4853:329:7"},{"body":{"nativeSrc":"5271:391:7","nodeType":"YulBlock","src":"5271:391:7","statements":[{"body":{"nativeSrc":"5317:83:7","nodeType":"YulBlock","src":"5317:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5319:77:7","nodeType":"YulIdentifier","src":"5319:77:7"},"nativeSrc":"5319:79:7","nodeType":"YulFunctionCall","src":"5319:79:7"},"nativeSrc":"5319:79:7","nodeType":"YulExpressionStatement","src":"5319:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5292:7:7","nodeType":"YulIdentifier","src":"5292:7:7"},{"name":"headStart","nativeSrc":"5301:9:7","nodeType":"YulIdentifier","src":"5301:9:7"}],"functionName":{"name":"sub","nativeSrc":"5288:3:7","nodeType":"YulIdentifier","src":"5288:3:7"},"nativeSrc":"5288:23:7","nodeType":"YulFunctionCall","src":"5288:23:7"},{"kind":"number","nativeSrc":"5313:2:7","nodeType":"YulLiteral","src":"5313:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5284:3:7","nodeType":"YulIdentifier","src":"5284:3:7"},"nativeSrc":"5284:32:7","nodeType":"YulFunctionCall","src":"5284:32:7"},"nativeSrc":"5281:119:7","nodeType":"YulIf","src":"5281:119:7"},{"nativeSrc":"5410:117:7","nodeType":"YulBlock","src":"5410:117:7","statements":[{"nativeSrc":"5425:15:7","nodeType":"YulVariableDeclaration","src":"5425:15:7","value":{"kind":"number","nativeSrc":"5439:1:7","nodeType":"YulLiteral","src":"5439:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5429:6:7","nodeType":"YulTypedName","src":"5429:6:7","type":""}]},{"nativeSrc":"5454:63:7","nodeType":"YulAssignment","src":"5454:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5489:9:7","nodeType":"YulIdentifier","src":"5489:9:7"},{"name":"offset","nativeSrc":"5500:6:7","nodeType":"YulIdentifier","src":"5500:6:7"}],"functionName":{"name":"add","nativeSrc":"5485:3:7","nodeType":"YulIdentifier","src":"5485:3:7"},"nativeSrc":"5485:22:7","nodeType":"YulFunctionCall","src":"5485:22:7"},{"name":"dataEnd","nativeSrc":"5509:7:7","nodeType":"YulIdentifier","src":"5509:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5464:20:7","nodeType":"YulIdentifier","src":"5464:20:7"},"nativeSrc":"5464:53:7","nodeType":"YulFunctionCall","src":"5464:53:7"},"variableNames":[{"name":"value0","nativeSrc":"5454:6:7","nodeType":"YulIdentifier","src":"5454:6:7"}]}]},{"nativeSrc":"5537:118:7","nodeType":"YulBlock","src":"5537:118:7","statements":[{"nativeSrc":"5552:16:7","nodeType":"YulVariableDeclaration","src":"5552:16:7","value":{"kind":"number","nativeSrc":"5566:2:7","nodeType":"YulLiteral","src":"5566:2:7","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5556:6:7","nodeType":"YulTypedName","src":"5556:6:7","type":""}]},{"nativeSrc":"5582:63:7","nodeType":"YulAssignment","src":"5582:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5617:9:7","nodeType":"YulIdentifier","src":"5617:9:7"},{"name":"offset","nativeSrc":"5628:6:7","nodeType":"YulIdentifier","src":"5628:6:7"}],"functionName":{"name":"add","nativeSrc":"5613:3:7","nodeType":"YulIdentifier","src":"5613:3:7"},"nativeSrc":"5613:22:7","nodeType":"YulFunctionCall","src":"5613:22:7"},{"name":"dataEnd","nativeSrc":"5637:7:7","nodeType":"YulIdentifier","src":"5637:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5592:20:7","nodeType":"YulIdentifier","src":"5592:20:7"},"nativeSrc":"5592:53:7","nodeType":"YulFunctionCall","src":"5592:53:7"},"variableNames":[{"name":"value1","nativeSrc":"5582:6:7","nodeType":"YulIdentifier","src":"5582:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5188:474:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5233:9:7","nodeType":"YulTypedName","src":"5233:9:7","type":""},{"name":"dataEnd","nativeSrc":"5244:7:7","nodeType":"YulTypedName","src":"5244:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5256:6:7","nodeType":"YulTypedName","src":"5256:6:7","type":""},{"name":"value1","nativeSrc":"5264:6:7","nodeType":"YulTypedName","src":"5264:6:7","type":""}],"src":"5188:474:7"},{"body":{"nativeSrc":"5696:152:7","nodeType":"YulBlock","src":"5696:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5713:1:7","nodeType":"YulLiteral","src":"5713:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5716:77:7","nodeType":"YulLiteral","src":"5716:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5706:6:7","nodeType":"YulIdentifier","src":"5706:6:7"},"nativeSrc":"5706:88:7","nodeType":"YulFunctionCall","src":"5706:88:7"},"nativeSrc":"5706:88:7","nodeType":"YulExpressionStatement","src":"5706:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5810:1:7","nodeType":"YulLiteral","src":"5810:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"5813:4:7","nodeType":"YulLiteral","src":"5813:4:7","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"5803:6:7","nodeType":"YulIdentifier","src":"5803:6:7"},"nativeSrc":"5803:15:7","nodeType":"YulFunctionCall","src":"5803:15:7"},"nativeSrc":"5803:15:7","nodeType":"YulExpressionStatement","src":"5803:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5834:1:7","nodeType":"YulLiteral","src":"5834:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5837:4:7","nodeType":"YulLiteral","src":"5837:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5827:6:7","nodeType":"YulIdentifier","src":"5827:6:7"},"nativeSrc":"5827:15:7","nodeType":"YulFunctionCall","src":"5827:15:7"},"nativeSrc":"5827:15:7","nodeType":"YulExpressionStatement","src":"5827:15:7"}]},"name":"panic_error_0x22","nativeSrc":"5668:180:7","nodeType":"YulFunctionDefinition","src":"5668:180:7"},{"body":{"nativeSrc":"5905:269:7","nodeType":"YulBlock","src":"5905:269:7","statements":[{"nativeSrc":"5915:22:7","nodeType":"YulAssignment","src":"5915:22:7","value":{"arguments":[{"name":"data","nativeSrc":"5929:4:7","nodeType":"YulIdentifier","src":"5929:4:7"},{"kind":"number","nativeSrc":"5935:1:7","nodeType":"YulLiteral","src":"5935:1:7","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"5925:3:7","nodeType":"YulIdentifier","src":"5925:3:7"},"nativeSrc":"5925:12:7","nodeType":"YulFunctionCall","src":"5925:12:7"},"variableNames":[{"name":"length","nativeSrc":"5915:6:7","nodeType":"YulIdentifier","src":"5915:6:7"}]},{"nativeSrc":"5946:38:7","nodeType":"YulVariableDeclaration","src":"5946:38:7","value":{"arguments":[{"name":"data","nativeSrc":"5976:4:7","nodeType":"YulIdentifier","src":"5976:4:7"},{"kind":"number","nativeSrc":"5982:1:7","nodeType":"YulLiteral","src":"5982:1:7","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"5972:3:7","nodeType":"YulIdentifier","src":"5972:3:7"},"nativeSrc":"5972:12:7","nodeType":"YulFunctionCall","src":"5972:12:7"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"5950:18:7","nodeType":"YulTypedName","src":"5950:18:7","type":""}]},{"body":{"nativeSrc":"6023:51:7","nodeType":"YulBlock","src":"6023:51:7","statements":[{"nativeSrc":"6037:27:7","nodeType":"YulAssignment","src":"6037:27:7","value":{"arguments":[{"name":"length","nativeSrc":"6051:6:7","nodeType":"YulIdentifier","src":"6051:6:7"},{"kind":"number","nativeSrc":"6059:4:7","nodeType":"YulLiteral","src":"6059:4:7","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6047:3:7","nodeType":"YulIdentifier","src":"6047:3:7"},"nativeSrc":"6047:17:7","nodeType":"YulFunctionCall","src":"6047:17:7"},"variableNames":[{"name":"length","nativeSrc":"6037:6:7","nodeType":"YulIdentifier","src":"6037:6:7"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6003:18:7","nodeType":"YulIdentifier","src":"6003:18:7"}],"functionName":{"name":"iszero","nativeSrc":"5996:6:7","nodeType":"YulIdentifier","src":"5996:6:7"},"nativeSrc":"5996:26:7","nodeType":"YulFunctionCall","src":"5996:26:7"},"nativeSrc":"5993:81:7","nodeType":"YulIf","src":"5993:81:7"},{"body":{"nativeSrc":"6126:42:7","nodeType":"YulBlock","src":"6126:42:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"6140:16:7","nodeType":"YulIdentifier","src":"6140:16:7"},"nativeSrc":"6140:18:7","nodeType":"YulFunctionCall","src":"6140:18:7"},"nativeSrc":"6140:18:7","nodeType":"YulExpressionStatement","src":"6140:18:7"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6090:18:7","nodeType":"YulIdentifier","src":"6090:18:7"},{"arguments":[{"name":"length","nativeSrc":"6113:6:7","nodeType":"YulIdentifier","src":"6113:6:7"},{"kind":"number","nativeSrc":"6121:2:7","nodeType":"YulLiteral","src":"6121:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6110:2:7","nodeType":"YulIdentifier","src":"6110:2:7"},"nativeSrc":"6110:14:7","nodeType":"YulFunctionCall","src":"6110:14:7"}],"functionName":{"name":"eq","nativeSrc":"6087:2:7","nodeType":"YulIdentifier","src":"6087:2:7"},"nativeSrc":"6087:38:7","nodeType":"YulFunctionCall","src":"6087:38:7"},"nativeSrc":"6084:84:7","nodeType":"YulIf","src":"6084:84:7"}]},"name":"extract_byte_array_length","nativeSrc":"5854:320:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5889:4:7","nodeType":"YulTypedName","src":"5889:4:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5898:6:7","nodeType":"YulTypedName","src":"5898:6:7","type":""}],"src":"5854:320:7"},{"body":{"nativeSrc":"6245:53:7","nodeType":"YulBlock","src":"6245:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6262:3:7","nodeType":"YulIdentifier","src":"6262:3:7"},{"arguments":[{"name":"value","nativeSrc":"6285:5:7","nodeType":"YulIdentifier","src":"6285:5:7"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6267:17:7","nodeType":"YulIdentifier","src":"6267:17:7"},"nativeSrc":"6267:24:7","nodeType":"YulFunctionCall","src":"6267:24:7"}],"functionName":{"name":"mstore","nativeSrc":"6255:6:7","nodeType":"YulIdentifier","src":"6255:6:7"},"nativeSrc":"6255:37:7","nodeType":"YulFunctionCall","src":"6255:37:7"},"nativeSrc":"6255:37:7","nodeType":"YulExpressionStatement","src":"6255:37:7"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6180:118:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6233:5:7","nodeType":"YulTypedName","src":"6233:5:7","type":""},{"name":"pos","nativeSrc":"6240:3:7","nodeType":"YulTypedName","src":"6240:3:7","type":""}],"src":"6180:118:7"},{"body":{"nativeSrc":"6458:288:7","nodeType":"YulBlock","src":"6458:288:7","statements":[{"nativeSrc":"6468:26:7","nodeType":"YulAssignment","src":"6468:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"6480:9:7","nodeType":"YulIdentifier","src":"6480:9:7"},{"kind":"number","nativeSrc":"6491:2:7","nodeType":"YulLiteral","src":"6491:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6476:3:7","nodeType":"YulIdentifier","src":"6476:3:7"},"nativeSrc":"6476:18:7","nodeType":"YulFunctionCall","src":"6476:18:7"},"variableNames":[{"name":"tail","nativeSrc":"6468:4:7","nodeType":"YulIdentifier","src":"6468:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6548:6:7","nodeType":"YulIdentifier","src":"6548:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"6561:9:7","nodeType":"YulIdentifier","src":"6561:9:7"},{"kind":"number","nativeSrc":"6572:1:7","nodeType":"YulLiteral","src":"6572:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6557:3:7","nodeType":"YulIdentifier","src":"6557:3:7"},"nativeSrc":"6557:17:7","nodeType":"YulFunctionCall","src":"6557:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6504:43:7","nodeType":"YulIdentifier","src":"6504:43:7"},"nativeSrc":"6504:71:7","nodeType":"YulFunctionCall","src":"6504:71:7"},"nativeSrc":"6504:71:7","nodeType":"YulExpressionStatement","src":"6504:71:7"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6629:6:7","nodeType":"YulIdentifier","src":"6629:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"6642:9:7","nodeType":"YulIdentifier","src":"6642:9:7"},{"kind":"number","nativeSrc":"6653:2:7","nodeType":"YulLiteral","src":"6653:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6638:3:7","nodeType":"YulIdentifier","src":"6638:3:7"},"nativeSrc":"6638:18:7","nodeType":"YulFunctionCall","src":"6638:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6585:43:7","nodeType":"YulIdentifier","src":"6585:43:7"},"nativeSrc":"6585:72:7","nodeType":"YulFunctionCall","src":"6585:72:7"},"nativeSrc":"6585:72:7","nodeType":"YulExpressionStatement","src":"6585:72:7"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"6711:6:7","nodeType":"YulIdentifier","src":"6711:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"6724:9:7","nodeType":"YulIdentifier","src":"6724:9:7"},{"kind":"number","nativeSrc":"6735:2:7","nodeType":"YulLiteral","src":"6735:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6720:3:7","nodeType":"YulIdentifier","src":"6720:3:7"},"nativeSrc":"6720:18:7","nodeType":"YulFunctionCall","src":"6720:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6667:43:7","nodeType":"YulIdentifier","src":"6667:43:7"},"nativeSrc":"6667:72:7","nodeType":"YulFunctionCall","src":"6667:72:7"},"nativeSrc":"6667:72:7","nodeType":"YulExpressionStatement","src":"6667:72:7"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6304:442:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6414:9:7","nodeType":"YulTypedName","src":"6414:9:7","type":""},{"name":"value2","nativeSrc":"6426:6:7","nodeType":"YulTypedName","src":"6426:6:7","type":""},{"name":"value1","nativeSrc":"6434:6:7","nodeType":"YulTypedName","src":"6434:6:7","type":""},{"name":"value0","nativeSrc":"6442:6:7","nodeType":"YulTypedName","src":"6442:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6453:4:7","nodeType":"YulTypedName","src":"6453:4:7","type":""}],"src":"6304:442:7"},{"body":{"nativeSrc":"6850:124:7","nodeType":"YulBlock","src":"6850:124:7","statements":[{"nativeSrc":"6860:26:7","nodeType":"YulAssignment","src":"6860:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"6872:9:7","nodeType":"YulIdentifier","src":"6872:9:7"},{"kind":"number","nativeSrc":"6883:2:7","nodeType":"YulLiteral","src":"6883:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6868:3:7","nodeType":"YulIdentifier","src":"6868:3:7"},"nativeSrc":"6868:18:7","nodeType":"YulFunctionCall","src":"6868:18:7"},"variableNames":[{"name":"tail","nativeSrc":"6860:4:7","nodeType":"YulIdentifier","src":"6860:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6940:6:7","nodeType":"YulIdentifier","src":"6940:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"6953:9:7","nodeType":"YulIdentifier","src":"6953:9:7"},{"kind":"number","nativeSrc":"6964:1:7","nodeType":"YulLiteral","src":"6964:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6949:3:7","nodeType":"YulIdentifier","src":"6949:3:7"},"nativeSrc":"6949:17:7","nodeType":"YulFunctionCall","src":"6949:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6896:43:7","nodeType":"YulIdentifier","src":"6896:43:7"},"nativeSrc":"6896:71:7","nodeType":"YulFunctionCall","src":"6896:71:7"},"nativeSrc":"6896:71:7","nodeType":"YulExpressionStatement","src":"6896:71:7"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6752:222:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6822:9:7","nodeType":"YulTypedName","src":"6822:9:7","type":""},{"name":"value0","nativeSrc":"6834:6:7","nodeType":"YulTypedName","src":"6834:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6845:4:7","nodeType":"YulTypedName","src":"6845:4:7","type":""}],"src":"6752:222:7"},{"body":{"nativeSrc":"7008:152:7","nodeType":"YulBlock","src":"7008:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7025:1:7","nodeType":"YulLiteral","src":"7025:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7028:77:7","nodeType":"YulLiteral","src":"7028:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7018:6:7","nodeType":"YulIdentifier","src":"7018:6:7"},"nativeSrc":"7018:88:7","nodeType":"YulFunctionCall","src":"7018:88:7"},"nativeSrc":"7018:88:7","nodeType":"YulExpressionStatement","src":"7018:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7122:1:7","nodeType":"YulLiteral","src":"7122:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"7125:4:7","nodeType":"YulLiteral","src":"7125:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7115:6:7","nodeType":"YulIdentifier","src":"7115:6:7"},"nativeSrc":"7115:15:7","nodeType":"YulFunctionCall","src":"7115:15:7"},"nativeSrc":"7115:15:7","nodeType":"YulExpressionStatement","src":"7115:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7146:1:7","nodeType":"YulLiteral","src":"7146:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7149:4:7","nodeType":"YulLiteral","src":"7149:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7139:6:7","nodeType":"YulIdentifier","src":"7139:6:7"},"nativeSrc":"7139:15:7","nodeType":"YulFunctionCall","src":"7139:15:7"},"nativeSrc":"7139:15:7","nodeType":"YulExpressionStatement","src":"7139:15:7"}]},"name":"panic_error_0x11","nativeSrc":"6980:180:7","nodeType":"YulFunctionDefinition","src":"6980:180:7"},{"body":{"nativeSrc":"7210:147:7","nodeType":"YulBlock","src":"7210:147:7","statements":[{"nativeSrc":"7220:25:7","nodeType":"YulAssignment","src":"7220:25:7","value":{"arguments":[{"name":"x","nativeSrc":"7243:1:7","nodeType":"YulIdentifier","src":"7243:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7225:17:7","nodeType":"YulIdentifier","src":"7225:17:7"},"nativeSrc":"7225:20:7","nodeType":"YulFunctionCall","src":"7225:20:7"},"variableNames":[{"name":"x","nativeSrc":"7220:1:7","nodeType":"YulIdentifier","src":"7220:1:7"}]},{"nativeSrc":"7254:25:7","nodeType":"YulAssignment","src":"7254:25:7","value":{"arguments":[{"name":"y","nativeSrc":"7277:1:7","nodeType":"YulIdentifier","src":"7277:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7259:17:7","nodeType":"YulIdentifier","src":"7259:17:7"},"nativeSrc":"7259:20:7","nodeType":"YulFunctionCall","src":"7259:20:7"},"variableNames":[{"name":"y","nativeSrc":"7254:1:7","nodeType":"YulIdentifier","src":"7254:1:7"}]},{"nativeSrc":"7288:16:7","nodeType":"YulAssignment","src":"7288:16:7","value":{"arguments":[{"name":"x","nativeSrc":"7299:1:7","nodeType":"YulIdentifier","src":"7299:1:7"},{"name":"y","nativeSrc":"7302:1:7","nodeType":"YulIdentifier","src":"7302:1:7"}],"functionName":{"name":"add","nativeSrc":"7295:3:7","nodeType":"YulIdentifier","src":"7295:3:7"},"nativeSrc":"7295:9:7","nodeType":"YulFunctionCall","src":"7295:9:7"},"variableNames":[{"name":"sum","nativeSrc":"7288:3:7","nodeType":"YulIdentifier","src":"7288:3:7"}]},{"body":{"nativeSrc":"7328:22:7","nodeType":"YulBlock","src":"7328:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7330:16:7","nodeType":"YulIdentifier","src":"7330:16:7"},"nativeSrc":"7330:18:7","nodeType":"YulFunctionCall","src":"7330:18:7"},"nativeSrc":"7330:18:7","nodeType":"YulExpressionStatement","src":"7330:18:7"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7320:1:7","nodeType":"YulIdentifier","src":"7320:1:7"},{"name":"sum","nativeSrc":"7323:3:7","nodeType":"YulIdentifier","src":"7323:3:7"}],"functionName":{"name":"gt","nativeSrc":"7317:2:7","nodeType":"YulIdentifier","src":"7317:2:7"},"nativeSrc":"7317:10:7","nodeType":"YulFunctionCall","src":"7317:10:7"},"nativeSrc":"7314:36:7","nodeType":"YulIf","src":"7314:36:7"}]},"name":"checked_add_t_uint256","nativeSrc":"7166:191:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7197:1:7","nodeType":"YulTypedName","src":"7197:1:7","type":""},{"name":"y","nativeSrc":"7200:1:7","nodeType":"YulTypedName","src":"7200:1:7","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7206:3:7","nodeType":"YulTypedName","src":"7206:3:7","type":""}],"src":"7166:191:7"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610aa9565b60405180910390f35b6100d060048036038101906100cb9190610b64565b610292565b6040516100dd9190610bbf565b60405180910390f35b6100ee6102b5565b6040516100fb9190610be9565b60405180910390f35b61011e60048036038101906101199190610c04565b6102bf565b60405161012b9190610bbf565b60405180910390f35b61013c6102ee565b6040516101499190610c73565b60405180910390f35b61016c60048036038101906101679190610c8e565b6102f7565b6040516101799190610be9565b60405180910390f35b61018a61033f565b6040516101979190610aa9565b60405180910390f35b6101ba60048036038101906101b59190610b64565b6103d1565b6040516101c79190610bbf565b60405180910390f35b6101ea60048036038101906101e59190610cbb565b6103f4565b6040516101f79190610be9565b60405180910390f35b60606003805461020f90610d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610d2a565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b60008061029d61047b565b90506102aa818585610483565b600191505092915050565b6000600254905090565b6000806102ca61047b565b90506102d7858285610495565b6102e2858585610529565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461034e90610d2a565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610d2a565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000806103dc61047b565b90506103e9818585610529565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b610490838383600161061d565b505050565b60006104a184846103f4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105235781811015610513578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050a93929190610d6a565b60405180910390fd5b6105228484848403600061061d565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059b5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105929190610da1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106049190610da1565b60405180910390fd5b6106188383836107f4565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361068f5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106869190610da1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107015760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106f89190610da1565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156107ee578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107e59190610be9565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084657806002600082825461083a9190610deb565b92505081905550610919565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156108d2578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108c993929190610d6a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096257806002600082825403925050819055506109af565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a0c9190610be9565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a53578082015181840152602081019050610a38565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a7b82610a19565b610a858185610a24565b9350610a95818560208601610a35565b610a9e81610a5f565b840191505092915050565b60006020820190508181036000830152610ac38184610a70565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610afb82610ad0565b9050919050565b610b0b81610af0565b8114610b1657600080fd5b50565b600081359050610b2881610b02565b92915050565b6000819050919050565b610b4181610b2e565b8114610b4c57600080fd5b50565b600081359050610b5e81610b38565b92915050565b60008060408385031215610b7b57610b7a610acb565b5b6000610b8985828601610b19565b9250506020610b9a85828601610b4f565b9150509250929050565b60008115159050919050565b610bb981610ba4565b82525050565b6000602082019050610bd46000830184610bb0565b92915050565b610be381610b2e565b82525050565b6000602082019050610bfe6000830184610bda565b92915050565b600080600060608486031215610c1d57610c1c610acb565b5b6000610c2b86828701610b19565b9350506020610c3c86828701610b19565b9250506040610c4d86828701610b4f565b9150509250925092565b600060ff82169050919050565b610c6d81610c57565b82525050565b6000602082019050610c886000830184610c64565b92915050565b600060208284031215610ca457610ca3610acb565b5b6000610cb284828501610b19565b91505092915050565b60008060408385031215610cd257610cd1610acb565b5b6000610ce085828601610b19565b9250506020610cf185828601610b19565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d4257607f821691505b602082108103610d5557610d54610cfb565b5b50919050565b610d6481610af0565b82525050565b6000606082019050610d7f6000830186610d5b565b610d8c6020830185610bda565b610d996040830184610bda565b949350505050565b6000602082019050610db66000830184610d5b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df682610b2e565b9150610e0183610b2e565b9250828201905080821115610e1957610e18610dbc565b5b9291505056fea26469706673582212204833c431f21bca4a24e23e80e02e9f3670bf86de80b645c51a8abc0bb1697b4c64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xC8E JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29D PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA DUP2 DUP6 DUP6 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7 DUP6 DUP3 DUP6 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x2E2 DUP6 DUP6 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0xD2A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP2 DUP6 DUP6 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x490 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x61D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP5 DUP5 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x523 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x513 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x522 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x61D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x618 DUP4 DUP4 DUP4 PUSH2 0x7F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x701 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7EE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x846 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83A SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8D2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x962 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9AF JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA0C SWAP2 SWAP1 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA53 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7B DUP3 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0xA85 DUP2 DUP6 PUSH2 0xA24 JUMP JUMPDEST SWAP4 POP PUSH2 0xA95 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA35 JUMP JUMPDEST PUSH2 0xA9E DUP2 PUSH2 0xA5F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC3 DUP2 DUP5 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFB DUP3 PUSH2 0xAD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0B DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP2 EQ PUSH2 0xB16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB28 DUP2 PUSH2 0xB02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB41 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP2 EQ PUSH2 0xB4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5E DUP2 PUSH2 0xB38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7A PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB89 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB9A DUP6 DUP3 DUP7 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB9 DUP2 PUSH2 0xBA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE3 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1D JUMPI PUSH2 0xC1C PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2B DUP7 DUP3 DUP8 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC3C DUP7 DUP3 DUP8 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC4D DUP7 DUP3 DUP8 ADD PUSH2 0xB4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6D DUP2 PUSH2 0xC57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA4 JUMPI PUSH2 0xCA3 PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB2 DUP5 DUP3 DUP6 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD2 JUMPI PUSH2 0xCD1 PUSH2 0xACB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE0 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF1 DUP6 DUP3 DUP7 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD42 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD55 JUMPI PUSH2 0xD54 PUSH2 0xCFB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD64 DUP2 PUSH2 0xAF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD7F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0xD8C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0xD99 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBDA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF6 DUP3 PUSH2 0xB2E JUMP JUMPDEST SWAP2 POP PUSH2 0xE01 DUP4 PUSH2 0xB2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE19 JUMPI PUSH2 0xE18 PUSH2 0xDBC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE CALLER 0xC4 BALANCE CALLCODE SHL 0xCA BLOBBASEFEE 0x24 0xE2 RETURNDATACOPY DUP1 0xE0 0x2E SWAP16 CALLDATASIZE PUSH17 0xBF86DE80B645C51A8ABC0BB1697B4C6473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"116:212:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;3299:116::-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:118::-;6267:24;6285:5;6267:24;:::i;:::-;6262:3;6255:37;6180:118;;:::o;6304:442::-;6453:4;6491:2;6480:9;6476:18;6468:26;;6504:71;6572:1;6561:9;6557:17;6548:6;6504:71;:::i;:::-;6585:72;6653:2;6642:9;6638:18;6629:6;6585:72;:::i;:::-;6667;6735:2;6724:9;6720:18;6711:6;6667:72;:::i;:::-;6304:442;;;;;;:::o;6752:222::-;6845:4;6883:2;6872:9;6868:18;6860:26;;6896:71;6964:1;6953:9;6949:17;6940:6;6896:71;:::i;:::-;6752:222;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"733800","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"343","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OurToken.sol\":\"OurToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/OurToken.sol\":{\"content\":\"// SPDX-Licence-Identifier: MIT\\n\\npragma solidity ^0.8.24;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract OurToken is ERC20{\\n    // initial supply is 50 <- 50 WEI\\n    // initial supply is 50e18\\n\\n    constructor(uint256 initialSupply) ERC20(\\\"OurToken\\\", \\\"OT\\\") {\\n        _mint(msg.sender, initialSupply);\\n    }\\n}\",\"keccak256\":\"0x2d73209476f12a6574106424c5a0399d66ac899ab7eeb45c15ec3ef123faa857\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"contracts/OurToken.sol:OurToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"contracts/OurToken.sol:OurToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"contracts/OurToken.sol:OurToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"contracts/OurToken.sol:OurToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"contracts/OurToken.sol:OurToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}